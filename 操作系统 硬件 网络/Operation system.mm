<map version="1.0.1"><node CREATED="1617773759127" ID="ID_root" MODIFIED="1617773759127" TEXT="Operation system"><node CREATED="1617773759127" ID="ID_2be66ae862ba" POSITION="right" MODIFIED="1617773759127" TEXT="数据"><node CREATED="1617773759127" ID="ID_76060c5ef5da" MODIFIED="1617773759127" TEXT="压缩"><node CREATED="1617773759127" ID="ID_a553377f789f" MODIFIED="1617773759127" TEXT="无损压缩"><node CREATED="1617773759127" ID="ID_66be7bca9dfc" MODIFIED="1617773759127" TEXT="文本文件、程序文件和数值数据文件"></node></node><node CREATED="1617773759127" ID="ID_64e5293d3295" MODIFIED="1617773759127" TEXT="有损压缩"><node CREATED="1617773759127" ID="ID_80a4396d216f" MODIFIED="1617773759127" TEXT="常用于多媒体应用中"></node></node></node><node CREATED="1617773759127" ID="ID_0c111d9e7109" MODIFIED="1617773759127" TEXT="页面描述语言"></node><node CREATED="1617773759127" ID="ID_5aef238ddfb6" MODIFIED="1617773759127" TEXT="数值数据"><node CREATED="1617773759127" ID="ID_1568de1a93bb" MODIFIED="1617773759127" TEXT="无符号整型数"></node><node CREATED="1617773759127" ID="ID_0fcadd7410ff" MODIFIED="1617773759127" TEXT="有符号整型数&amp;lt;br&amp;gt;符号-幅值"><node CREATED="1617773759127" ID="ID_fd04d1376676" MODIFIED="1617773759127" TEXT="左边最高位&amp;lt;br&amp;gt;0表示正号&amp;lt;br&amp;gt;1表示负号"></node><node CREATED="1617773759127" ID="ID_335f1139c1ce" MODIFIED="1617773759127" TEXT="补码"></node><node CREATED="1617773759127" ID="ID_79e53b266ef8" MODIFIED="1617773759127" TEXT="溢出条件和进位条件"></node></node><node CREATED="1617773759127" ID="ID_0cecc826f76f" MODIFIED="1617773759127" TEXT="ASCII"><node CREATED="1617773759127" ID="ID_dcdd3910a8af" MODIFIED="1617773759127" TEXT="打印字符"></node><node CREATED="1617773759127" ID="ID_20851dbfdd7d" MODIFIED="1617773759127" TEXT="控制字符"></node><node CREATED="1617773759127" ID="ID_1224809443c1" MODIFIED="1617773759127" TEXT="在表示表中编码的顺序叫作排序序列。"></node></node><node CREATED="1617773759127" ID="ID_639a8fbc04f9" MODIFIED="1617773759127" TEXT="Unicode"><node CREATED="1617773759127" ID="ID_5e5db7fff71b" MODIFIED="1617773759127" TEXT="每个标准的UTF-16字母字符都按两个字节来存储"></node></node><node CREATED="1617773759127" ID="ID_53324e8b4468" MODIFIED="1617773759127" TEXT="&amp;lt;b&amp;gt;数值&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;数值通常是以字符的形式输入的，&amp;lt;br&amp;gt;在用于计算之前必须转换为数值形式&amp;lt;br&amp;gt;不用于计算的数值，&amp;lt;br&amp;gt;直接按照字符来操作即可。"><node CREATED="1617773759127" ID="ID_98019630ca28" MODIFIED="1617773759127" TEXT="数值中每一个数字位相对于其左右邻居都有一个权重或重要性。&amp;lt;br&amp;gt;数值中某个数字位的权重就是乘法因子，它用来决定这个数字位的整体值。&amp;lt;br&amp;gt;在任意的n进制中一个数字位的权重，&amp;lt;br&amp;gt;对于B进制中的任意一个数值，每个数字位的位置代表的权重为B的若干次方.&amp;lt;br&amp;gt;其中，幂数从最右边的数字位开始(即B^0)，&amp;lt;br&amp;gt;当然，对于任意进制来说，B^0的权重都是1(称为“个位”)。"></node><node CREATED="1617773759127" ID="ID_c3a344175738" MODIFIED="1617773759127" TEXT="进制转换与计算"><node CREATED="1617773759127" ID="ID_e6a97a47bcd2" MODIFIED="1617773759127" TEXT="&amp;lt;font color=&amp;quot;#f15a23&amp;quot;&amp;gt;&amp;lt;b&amp;gt;其它进制转换10进制: &amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;对于任意进制的一个数值来说，确定其对应的十进制数值的一种简单方法就是，&amp;lt;br&amp;gt;在给定进制下，每一个数字位乘以该位置的权重。&amp;lt;br&amp;gt;个位数字*B^0=个位数_{10}&amp;lt;br&amp;gt;"></node><node CREATED="1617773759127" ID="ID_b14840343479" MODIFIED="1617773759127" TEXT="10进制转其它进制&amp;lt;br&amp;gt;进行一次除法, 实际上是为了确定原始数值中包含多少组&amp;quot;要转换的进制&amp;quot;, 如8.&amp;lt;br&amp;gt;余数是剩下的单一单元数，换句话说，就是被转换数值的单元位置。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;"></node><node CREATED="1617773759127" ID="ID_a8324cc26092" MODIFIED="1617773759127" TEXT="特殊进制转换"><node CREATED="1617773759127" ID="ID_878b4f0d9e11" MODIFIED="1617773759127" TEXT="当一个基数是另一基数的整数幂时，存在着一种特殊的转换情况。&amp;lt;br&amp;gt;一个十六进制数精确地表示4个二进制位&amp;lt;br&amp;gt;一个八进制数字位对应于3个二进制数字位&amp;lt;br&amp;gt;转换处理就是简单地将二进制数划分为3位或4位为一组，&amp;lt;br&amp;gt;从最低有效位(个位)开始，独立地转换每个组。&amp;lt;br&amp;gt;数字的左边有可能需要添加一些0来转换最高有效位。"></node></node><node CREATED="1617773759127" ID="ID_c4a9203f9090" MODIFIED="1617773759127" TEXT="小数的转换"><node CREATED="1617773759127" ID="ID_b13260cc7a76" MODIFIED="1617773759127" TEXT="一种进制下能精确表示的小数，在另一进制里或许不能精确地表示"></node><node CREATED="1617773759127" ID="ID_c60acba38d80" MODIFIED="1617773759127" TEXT="将小数点左移一位，就等于这个值除以基数&amp;lt;br&amp;gt;权重:&amp;lt;br&amp;gt;第一位数字*B^-1=第一位数_{10}"></node><node CREATED="1617773759127" ID="ID_256e80e19461" MODIFIED="1617773759127" TEXT="十进制转其它&amp;lt;br&amp;gt;"><node CREATED="1617773759127" ID="ID_eee192b7f3ce" MODIFIED="1617773759127" TEXT="我们每除以基数一次就将小数点左移一位，&amp;lt;br&amp;gt;并注意落在小数点外的是什么，这就是余数。&amp;lt;br&amp;gt;初始时，假定小数点位于数值的右边。&amp;lt;br&amp;gt;当正转换的值处于小数点的右边时，这个过程完全相反。&amp;lt;br&amp;gt;我们将小数重复地乘以基数()，记录然后丢弃移动到小数点左边的值。"></node></node><node CREATED="1617773759127" ID="ID_21b38e2f9351" MODIFIED="1617773759127" TEXT="其中一个基数是另一基数的整数次幂，&amp;lt;br&amp;gt;此时，小数的转换跟以前一样，&amp;lt;br&amp;gt;将数字位按较小的基数分组。&amp;lt;br&amp;gt;对于小数，必须从左向右进行分组，否则方法就是一样的。"></node></node><node CREATED="1617773759127" ID="ID_5db016c7e58c" MODIFIED="1617773759127" TEXT="混合数值转换"><node CREATED="1617773759127" ID="ID_8728c651f2fd" MODIFIED="1617773759127" TEXT="小数点必须对齐"></node><node CREATED="1617773759127" ID="ID_2c1fce4f5815" MODIFIED="1617773759127" TEXT="小数部分有整数部分必须分开转换"></node></node></node><node CREATED="1617773759127" ID="ID_55dcdded1304" MODIFIED="1617773759127" TEXT="bool 与(AND)"><node CREATED="1617773759127" ID="ID_705851086db7" MODIFIED="1617773759127" TEXT="同时为true,才是true"></node></node><node CREATED="1617773759127" ID="ID_f78e86945a58" MODIFIED="1617773759127" TEXT="bool 或(OR)"><node CREATED="1617773759127" ID="ID_5a0740b2d22e" MODIFIED="1617773759127" TEXT="有一为true,就是true"></node></node><node CREATED="1617773759127" ID="ID_bfac347b9051" MODIFIED="1617773759127" TEXT="bool 非(NOT)&amp;lt;br&amp;gt;"><node CREATED="1617773759127" ID="ID_53c3ec21b0a2" MODIFIED="1617773759127" TEXT="对一个二进制数取反"></node></node><node CREATED="1617773759128" ID="ID_53be860448d8" MODIFIED="1617773759128" TEXT="“异或”运算(XOR)"><node CREATED="1617773759128" ID="ID_8aee1fc3b634" MODIFIED="1617773759128" TEXT="两个操作数的位中，&amp;lt;br&amp;gt;相同则结果为0，&amp;lt;br&amp;gt;不同则结果为1"></node></node><node CREATED="1617773759128" ID="ID_2f90c9f46142" MODIFIED="1617773759128" TEXT="无符号整型数"><node CREATED="1617773759128" ID="ID_86b7af61d746" MODIFIED="1617773759128" TEXT="二进制编码的十进制(BCD)"><node CREATED="1617773759128" ID="ID_2fb8fca4939e" MODIFIED="1617773759128" TEXT="每个十进制数字位分别转换为4位二进制数&amp;lt;br&amp;gt;数值逐数字位存储"></node></node></node><node CREATED="1617773759128" ID="ID_b94b5e07d1e6" MODIFIED="1617773759128" TEXT="有符号整型数"><node CREATED="1617773759128" ID="ID_80854701a181" MODIFIED="1617773759128" TEXT="符号(正负号)-幅值表示法"></node><node CREATED="1617773759128" ID="ID_38eda4b64c61" MODIFIED="1617773759128" TEXT="&amp;lt;b&amp;gt;基数补码&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;从某个标准基值中减去一个值称为该数的补码&amp;lt;br&amp;gt;一个数值的补码有点像是将基值看作一面镜子&amp;lt;br&amp;gt;补码=基值-值&amp;lt;br&amp;gt;基值-(基值-值)=值&amp;lt;br&amp;gt; 2&amp;apos;s complement"><node CREATED="1617773759128" ID="ID_bf88a622122e" MODIFIED="1617773759128" TEXT="以9为基的十进制表示"></node><node CREATED="1617773759128" ID="ID_50a4012e6d73" MODIFIED="1617773759128" TEXT="二进制"></node><node CREATED="1617773759128" ID="ID_aaa91a9c161d" MODIFIED="1617773759128" TEXT="首尾循环进位(end-around carry)"></node></node><node CREATED="1617773759128" ID="ID_ab263f57c1c4" MODIFIED="1617773759128" TEXT="反码(diminished radix complementary)&amp;lt;br&amp;gt;负数的反码是在其原码的基础上, 符号位不变, 其余各个位取反.&amp;lt;br&amp;gt;1&amp;apos;s complement"></node><node CREATED="1617773759128" ID="ID_e0c82642ed9f" MODIFIED="1617773759128" TEXT="补码反射点(complementary reflection point)"></node></node><node CREATED="1617773759128" ID="ID_a0f46b6f610a" MODIFIED="1617773759128" TEXT="浮点数"><node CREATED="1617773759128" ID="ID_bbb56db3eb5f" MODIFIED="1617773759128" TEXT="计算机维护一个有限且位数固定的精度&amp;lt;br&amp;gt;带有一个指数，这个指数可以根据需要&amp;lt;br&amp;gt;调整数值内的小数点左移或右移，从而使其变大或变小"></node></node></node></node><node CREATED="1617773759128" ID="ID_96ca7763573f" MODIFIED="1617773759128" TEXT="可视数据"><arrowlink DESTINATION="ID_9f122f4bbb0f" ENDARROW="Default" ID="Arrow_ID_9089e4f77ed7" STARTARROW="None"/><node CREATED="1617773759128" ID="ID_696535e48334" MODIFIED="1617773759128" TEXT="位图图像"><arrowlink DESTINATION="ID_7097a5497fd8" ENDARROW="Default" ID="Arrow_ID_b7867fbe25e6" STARTARROW="None"/><node CREATED="1617773759128" ID="ID_aa806c78a2c7" MODIFIED="1617773759128" TEXT="矩形图像划分为行和列. 每行和每列的交叉处是一个点 (实际上，是一个很小的区域)，&amp;lt;br&amp;gt;称为像素(pixel)，它是pi[x]cture element的字头缩写。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;像素数据通常是自顶向底存储的，一次一行，从像素 (0,0) 开始到像素 (nrow-1，ncol-1) ,&amp;lt;br&amp;gt;即从图像左上角的像素到右下角的像素&amp;lt;br&amp;gt;(比较奇怪，这个图像被称为ncol×nrow图像，而不是nrow×ncol)。&amp;lt;br&amp;gt;由于这种表示和电视图像的产生方式类似，因此这种布局叫作&amp;lt;b&amp;gt;光栅&amp;lt;/b&amp;gt;。&amp;lt;br&amp;gt;像素的输入或输出是按顺序进行的，一次一个像素，这种展现方式叫作&amp;lt;b&amp;gt;光栅扫描&amp;lt;/b&amp;gt;"></node></node><node CREATED="1617773759128" ID="ID_81ea2fc98d38" MODIFIED="1617773759128" TEXT="对象图像"><node CREATED="1617773759128" ID="ID_ee600b80f1fb" MODIFIED="1617773759128" TEXT="对象图像由简单的元素组成，如直线、曲线(称为贝塞尔曲线)、圆、圆弧、椭圆等。&amp;lt;br&amp;gt;其中每个元素可以用少量的数学参数来定义。&amp;lt;br&amp;gt;所以对象图像不能直接显示或打印，除非是在绘图仪上。&amp;lt;br&amp;gt;相反，为了显示和打印，对象图像必须转换为位图图像。"></node></node><node CREATED="1617773759128" ID="ID_960375ca31ed" MODIFIED="1617773759128" TEXT="象形字(glyphs)&amp;lt;br&amp;gt;基于图像的字符"></node><node CREATED="1617773759128" ID="ID_fde9751223d1" MODIFIED="1617773759128" TEXT="视频"><node CREATED="1617773759128" ID="ID_0f1166812203" MODIFIED="1617773759128" TEXT="编解码器(codec)"></node></node></node><node CREATED="1617773759128" ID="ID_9658edd8d89e" MODIFIED="1617773759128" TEXT="音频数据"><arrowlink DESTINATION="ID_40147ed11fb1" ENDARROW="Default" ID="Arrow_ID_2e546f22beac" STARTARROW="None"/><node CREATED="1617773759128" ID="ID_bbc53e515ae1" MODIFIED="1617773759128" TEXT="模-数转换器"></node><node CREATED="1617773759128" ID="ID_8abf5294777d" MODIFIED="1617773759128" TEXT="mp3"><node CREATED="1617773759128" ID="ID_82b621bf6453" MODIFIED="1617773759128" TEXT="频段屏蔽(“心理声学有损压缩”方法)"></node><node CREATED="1617773759128" ID="ID_3af2ee63ae72" MODIFIED="1617773759128" TEXT="音频采样率"></node><node CREATED="1617773759128" ID="ID_451277d547bc" MODIFIED="1617773759128" TEXT="固定或可变的位率"></node><node CREATED="1617773759128" ID="ID_4ee954d07349" MODIFIED="1617773759128" TEXT="表示不同压缩级的宽范围位率"></node></node></node><node CREATED="1617773759128" ID="ID_1a3887e4501f" MODIFIED="1617773759128" TEXT="数据压缩"><node CREATED="1617773759128" ID="ID_76f13d729df2" MODIFIED="1617773759128" TEXT="无损压缩"><node CREATED="1617773759128" ID="ID_c253735261f3" MODIFIED="1617773759128" TEXT="字典压缩&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759128" ID="ID_081f0fc6f45c" MODIFIED="1617773759128" TEXT="有损压缩"></node></node></node><node CREATED="1617773759128" ID="ID_c94550472099" POSITION="right" MODIFIED="1617773759128" TEXT="&amp;quot;小伙计&amp;quot;计算机&amp;lt;br&amp;gt;"></node><node CREATED="1617773759128" ID="ID_2e012a1ccb2a" POSITION="right" MODIFIED="1617773759128" TEXT="网络(I/O)"><node CREATED="1617773759128" ID="ID_17a92f694648" MODIFIED="1617773759128" TEXT="报文"></node><node CREATED="1617773759128" ID="ID_6b078288bd38" MODIFIED="1617773759128" TEXT="包(帧)&amp;lt;br&amp;gt;将长报文拆分成较小的单元"><node CREATED="1617773759128" ID="ID_43e95e0c64e1" MODIFIED="1617773759128" TEXT="前缀或包头里包含所指派的接收端和源端地址、&amp;lt;br&amp;gt;封装数据的相关信息，后面是数据。&amp;lt;br&amp;gt;数据的大小依赖于报文的类型和长度、&amp;lt;br&amp;gt;包的结构以及信道的需求。"></node><node CREATED="1617773759128" ID="ID_4a92dbe4ea49" MODIFIED="1617773759128" TEXT="对最大长度做了限定,少数要求数据大小固定"></node><node CREATED="1617773759128" ID="ID_179c67cbf9a8" MODIFIED="1617773759128" TEXT="数据包路由"><node CREATED="1617773759128" ID="ID_b36af4466719" MODIFIED="1617773759128" TEXT="数据从节点到节点,可能几种路径选择"></node><node CREATED="1617773759128" ID="ID_aeb5ae6d8d55" MODIFIED="1617773759128" TEXT="电路交换"></node><node CREATED="1617773759128" ID="ID_c6526fce39d5" MODIFIED="1617773759128" TEXT="虚电路"><node CREATED="1617773759128" ID="ID_7a4233618113" MODIFIED="1617773759128" TEXT="永久虚电路"></node><node CREATED="1617773759128" ID="ID_bd34044078a1" MODIFIED="1617773759128" TEXT="交换虚电路"></node></node></node><node CREATED="1617773759128" ID="ID_26ad6166b9c8" MODIFIED="1617773759128" TEXT="标准的以太网帧"></node></node><node CREATED="1617773759128" ID="ID_43a792affe24" MODIFIED="1617773759128" TEXT="通信信道"><node CREATED="1617773759128" ID="ID_de6325136db3" MODIFIED="1617773759128" TEXT="链路"><node CREATED="1617773759128" ID="ID_34a9d480ad28" MODIFIED="1617773759128" TEXT="位率(带宽)"></node><node CREATED="1617773759128" ID="ID_8c42c1853916" MODIFIED="1617773759128" TEXT="介质"><node CREATED="1617773759128" ID="ID_9f1ac5d68724" MODIFIED="1617773759128" TEXT="承载数据的正弦波叫载波(carrier)"><node CREATED="1617773759128" ID="ID_80fa12ea1cf0" MODIFIED="1617773759128" TEXT="调制和解调"></node><node CREATED="1617773759128" ID="ID_ca273224b270" MODIFIED="1617773759128" TEXT="调制解调器"></node></node></node></node><node CREATED="1617773759128" ID="ID_de34ba759af5" MODIFIED="1617773759128" TEXT="数据传送的方向性"><node CREATED="1617773759128" ID="ID_b83c533a36cd" MODIFIED="1617773759128" TEXT="单工信道(simplex channel)"><node CREATED="1617773759128" ID="ID_9da3128e89d0" MODIFIED="1617773759128" TEXT="只能单向传送报文"></node></node><node CREATED="1617773759128" ID="ID_1b87249f0e5a" MODIFIED="1617773759128" TEXT="半双工(half-duplex)信道"><node CREATED="1617773759128" ID="ID_af9420570bd3" MODIFIED="1617773759128" TEXT="信道可以双向传送报文，但一次只能一个方向"></node></node><node CREATED="1617773759128" ID="ID_deac6203b228" MODIFIED="1617773759128" TEXT="全双工(full-duplex channels)信道"><node CREATED="1617773759128" ID="ID_4cba2af34ca8" MODIFIED="1617773759128" TEXT="同时双向传送信号"></node></node><node CREATED="1617773759128" ID="ID_c1a3272d1000" MODIFIED="1617773759128" TEXT="两个-单双工"><node CREATED="1617773759128" ID="ID_6443a425074b" MODIFIED="1617773759128" TEXT="一个方向一条"></node></node></node><node CREATED="1617773759128" ID="ID_3b458c5391ed" MODIFIED="1617773759128" TEXT="连接数"></node><node CREATED="1617773759128" ID="ID_abfd2596b274" MODIFIED="1617773759128" TEXT="协议"></node></node><node CREATED="1617773759128" ID="ID_564a36b8c2e8" MODIFIED="1617773759128" TEXT="网络结构"><node CREATED="1617773759128" ID="ID_338477892da9" MODIFIED="1617773759128" TEXT="网状网络(mesh network)&amp;lt;br&amp;gt;连接数=节点数×(节点数-1)/2"></node><node CREATED="1617773759128" ID="ID_b3f30e97262c" MODIFIED="1617773759128" TEXT="总线拓扑"></node><node CREATED="1617773759128" ID="ID_06c0b73c2ddd" MODIFIED="1617773759128" TEXT="星形拓扑&amp;lt;br&amp;gt;中央节点&amp;lt;br&amp;gt;"></node><node CREATED="1617773759128" ID="ID_4c6f30600b1d" MODIFIED="1617773759128" TEXT="环形拓扑"></node><node CREATED="1617773759128" ID="ID_5174af36c031" MODIFIED="1617773759128" TEXT="物理拓扑描述网络布线的实际布局"></node><node CREATED="1617773759128" ID="ID_54b2f9c16c5d" MODIFIED="1617773759128" TEXT="逻辑拓扑定义各种网络组件间的业务关系"></node></node><node CREATED="1617773759128" ID="ID_15dab16179fb" MODIFIED="1617773759128" TEXT="网络类型"><node CREATED="1617773759128" ID="ID_8b26e7786ecd" MODIFIED="1617773759128" TEXT="局域网"></node><node CREATED="1617773759128" ID="ID_5247a431102f" MODIFIED="1617773759128" TEXT="交换式以太网"></node><node CREATED="1617773759128" ID="ID_a6d3fdf0bbf7" MODIFIED="1617773759128" TEXT="无线以太网"><node CREATED="1617773759128" ID="ID_8112de0d1a6f" MODIFIED="1617773759128" TEXT="基站中心访问点"></node></node><node CREATED="1617773759128" ID="ID_691ab54d6c61" MODIFIED="1617773759128" TEXT="骨干网"><node CREATED="1617773759128" ID="ID_fb8acc629d05" MODIFIED="1617773759128" TEXT="分层局域网"></node></node><node CREATED="1617773759128" ID="ID_6a692871e5b2" MODIFIED="1617773759128" TEXT="城域网"></node><node CREATED="1617773759128" ID="ID_1c1742df1bbe" MODIFIED="1617773759128" TEXT="广域网(WAN)"></node></node><node CREATED="1617773759128" ID="ID_564b8db5b8dd" MODIFIED="1617773759128" TEXT="协议"><node CREATED="1617773759128" ID="ID_8613c9673727" MODIFIED="1617773759128" TEXT="一个约定好的、能实现通信的基本规则集"></node><node CREATED="1617773759128" ID="ID_fd2592668e41" MODIFIED="1617773759128" TEXT="开放系统互连参考模型(OSI)"><linktarget COLOR="#b0b0b0" DESTINATION="ID_fd2592668e41" ENDARROW="Default" ID="Arrow_ID_4404ed5cc6d7" SOURCE="ID_683c7c704a02" STARTARROW="None"/><node CREATED="1617773759128" ID="ID_248e32236450" MODIFIED="1617773759128" TEXT="一个理论模型"></node><node CREATED="1617773759128" ID="ID_0959f01cfd9a" MODIFIED="1617773759128" TEXT="主要用于研究"></node></node><node CREATED="1617773759128" ID="ID_aad88dc4a055" MODIFIED="1617773759128" TEXT="TCP/IP"><linktarget COLOR="#b0b0b0" DESTINATION="ID_aad88dc4a055" ENDARROW="Default" ID="Arrow_ID_94f97d4c18a2" SOURCE="ID_683c7c704a02" STARTARROW="None"/><node CREATED="1617773759128" ID="ID_0e09631e14d7" MODIFIED="1617773759128" TEXT="简介"><node CREATED="1617773759128" ID="ID_c3c27293e28b" MODIFIED="1617773759128" TEXT="实用的模型&amp;lt;br&amp;gt;TCP/IP是最流行的协议簇"></node><node CREATED="1617773759128" ID="ID_e532675cf6e1" MODIFIED="1617773759128" TEXT="一个集成套件，由很多协议组成&amp;lt;br&amp;gt;TCP/IP模型由5层组成"></node></node><node CREATED="1617773759128" ID="ID_0e6eb10ff83b" MODIFIED="1617773759128" TEXT="物理层"><node CREATED="1617773759128" ID="ID_a5ac29108986" MODIFIED="1617773759128" TEXT="物理层是通信实际发生的层。物理层的通信是由纯位流构成的，&amp;lt;br&amp;gt;位流通过介质从一个节点传送到另一个节点"></node></node><node CREATED="1617773759128" ID="ID_f05f0cb7c6f3" MODIFIED="1617773759128" TEXT="数据链路层"><node CREATED="1617773759128" ID="ID_f5f9a26c5267" MODIFIED="1617773759128" TEXT="介质访问控制(MAC)"><node CREATED="1617773759128" ID="ID_d1ba8747a3e2" MODIFIED="1617773759128" TEXT="定义访问信道和检测差错的过程"></node></node><node CREATED="1617773759128" ID="ID_9f4fe380de00" MODIFIED="1617773759128" TEXT="逻辑链路控制(LLC)"><node CREATED="1617773759128" ID="ID_e5a66958c73f" MODIFIED="1617773759128" TEXT="提供业务流量控制、差错校正、IP包/帧转换管理、&amp;lt;br&amp;gt;重传以及数据包重构等功能, 对帧进行编号"></node></node></node><node CREATED="1617773759128" ID="ID_0bdcc0e770e6" MODIFIED="1617773759128" TEXT="网络层"><node CREATED="1617773759128" ID="ID_ec4ed2858f3d" MODIFIED="1617773759128" TEXT="IP是这一层唯一的标准协议&amp;lt;br&amp;gt;IP通过复制IP包(在IP层，数据包也叫IP数据报)&amp;lt;br&amp;gt;并附加上一个帧头构建一个以太网帧，&amp;lt;br&amp;gt;其中每个帧中包含特定节点的MAC地址。"></node><node CREATED="1617773759128" ID="ID_e6f5c7d03c2f" MODIFIED="1617773759128" TEXT="IP是一个不可靠的、尽力而为的传送服务"></node><node CREATED="1617773759128" ID="ID_054d4baa3193" MODIFIED="1617773759128" TEXT="互联网控制报文协议(ICMP)"><node CREATED="1617773759128" ID="ID_26055387db25" MODIFIED="1617773759128" TEXT="当通信过程失败时，它可以产生一个关于差错的报文。&amp;lt;br&amp;gt;ICMP将差错码封装在一个新数据报中，然后将其返回至源IP地址。"><node CREATED="1617773759128" ID="ID_869af56ea602" MODIFIED="1617773759128" TEXT="的主机不明"></node><node CREATED="1617773759128" ID="ID_1723f24c0f0f" MODIFIED="1617773759128" TEXT="存活时间超时"></node></node><node CREATED="1617773759128" ID="ID_5ee4d4edbb00" MODIFIED="1617773759128" TEXT="Ping和Traceroute等网络工具就使用ICMP的查询服务，来提供其报告信息"></node></node></node><node CREATED="1617773759128" ID="ID_9db717c05565" MODIFIED="1617773759128" TEXT="传输层"><node CREATED="1617773759128" ID="ID_d2698adebce6" MODIFIED="1617773759128" TEXT="功能:&amp;lt;br&amp;gt;流量控制&amp;lt;br&amp;gt;数据保证&amp;lt;br&amp;gt;需要时对数据包再排序&amp;lt;br&amp;gt;同目的应用建立连接的功能&amp;lt;br&amp;gt;差错恢复&amp;lt;br&amp;gt;在需要时终止端节点之间的连接&amp;lt;br&amp;gt;多数情况下，传输层还负责对报文打包，也就是将报文拆分成合理大小的包"></node><node CREATED="1617773759128" ID="ID_8845e692cb35" MODIFIED="1617773759128" TEXT="端口号长16位&amp;lt;br&amp;gt;前1024个是标准端口号(这些端口号, Linux 需要Root 才可以使用)"><node CREATED="1617773759128" ID="ID_ec251dc209a9" MODIFIED="1617773759128" TEXT="网络端口号不同于I/O端口号。&amp;lt;br&amp;gt;和I/O端口号相反，&amp;lt;br&amp;gt;网络端口号是由协议软件产生和使用的，&amp;lt;br&amp;gt;而I/O端口号是基于硬件的。"></node></node><node CREATED="1617773759128" ID="ID_3d4a19fcfa54" MODIFIED="1617773759128" TEXT="套口"><node CREATED="1617773759128" ID="ID_9a045abe1856" MODIFIED="1617773759128" TEXT="每一个新请求在传输层产生一个新套口"></node><node CREATED="1617773759128" ID="ID_55052363f713" MODIFIED="1617773759128" TEXT="包含:&amp;lt;br&amp;gt;源端口号&amp;lt;br&amp;gt;源IP地址&amp;lt;br&amp;gt;目的端口号&amp;lt;br&amp;gt;目的IP地址"></node></node><node CREATED="1617773759128" ID="ID_40d638afe939" MODIFIED="1617773759128" TEXT="TCP"><node CREATED="1617773759128" ID="ID_23197ceb12b0" MODIFIED="1617773759128" TEXT="可靠传输"></node><node CREATED="1617773759128" ID="ID_58ad7b6365b5" MODIFIED="1617773759128" TEXT="逻辑连接"></node><node CREATED="1617773759128" ID="ID_dfb65c01b946" MODIFIED="1617773759128" TEXT="握手(三路)"><node CREATED="1617773759128" ID="ID_de7d88f0117f" MODIFIED="1617773759128" TEXT="1. 发送一个控制包(通过网络层,&amp;lt;br&amp;gt;包含一个随机选取的32位的数)SYN=1"></node><node CREATED="1617773759128" ID="ID_4ca919dd2cf1" MODIFIED="1617773759128" TEXT="服务器: SYN=1,ACK=1的特殊SYNACK序列,&amp;lt;br&amp;gt;服务器的初始序列号,确认号(客户端序列号+1)&amp;lt;br&amp;gt;"></node></node></node><node CREATED="1617773759128" ID="ID_f6f8e8ec1773" MODIFIED="1617773759128" TEXT="用户数据报协议(UDP)"></node><node CREATED="1617773759128" ID="ID_09661b089854" MODIFIED="1617773759128" TEXT="流控制传输协议(SCTP)"></node></node><node CREATED="1617773759128" ID="ID_1dffedae55f3" MODIFIED="1617773759128" TEXT="应用层&amp;lt;br&amp;gt;"><node CREATED="1617773759128" ID="ID_f21d865611e2" MODIFIED="1617773759128" TEXT="动态主机配置协议(DHCP)"></node></node></node><node CREATED="1617773759128" ID="ID_683c7c704a02" MODIFIED="1617773759128" TEXT="协议栈"><arrowlink DESTINATION="ID_aad88dc4a055" ENDARROW="Default" ID="Arrow_ID_94f97d4c18a2" STARTARROW="None"/><arrowlink DESTINATION="ID_fd2592668e41" ENDARROW="Default" ID="Arrow_ID_4404ed5cc6d7" STARTARROW="None"/></node><node CREATED="1617773759128" ID="ID_5ebbdbe718e6" MODIFIED="1617773759128" TEXT="ARP协议"><node CREATED="1617773759128" ID="ID_4ef6576f8db4" MODIFIED="1617773759128" TEXT="地址解析协议，用于发现IP地址和对应的MAC地址之间的关系"></node></node><node CREATED="1617773759128" ID="ID_ad358cdb0bfa" MODIFIED="1617773759128" TEXT="TCP/IP和OSI的比较"></node></node><node CREATED="1617773759128" ID="ID_5a7c5fad5bef" MODIFIED="1617773759128" TEXT="IPv6"><node CREATED="1617773759128" ID="ID_78f1087b7073" MODIFIED="1617773759128" TEXT="冒号-十六进制表示"></node><node CREATED="1617773759128" ID="ID_344779ef8cd8" MODIFIED="1617773759128" TEXT="缩写方式"><node CREATED="1617773759128" ID="ID_de56535805dc" MODIFIED="1617773759128" TEXT="一个字段中的前导0可以忽略"></node><node CREATED="1617773759128" ID="ID_52accaddef9e" MODIFIED="1617773759128" TEXT="单个全0字段可以用一对冒号表示"></node></node></node><node CREATED="1617773759128" ID="ID_86375ab8e19d" MODIFIED="1617773759128" TEXT="IPv4"><node CREATED="1617773759128" ID="ID_c5077d070e48" MODIFIED="1617773759128" TEXT="网络地址转换(NAT)"><node CREATED="1617773759128" ID="ID_1b388f5dcee6" MODIFIED="1617773759128" TEXT="静态地址"></node><node CREATED="1617773759128" ID="ID_b28ded1f5eb3" MODIFIED="1617773759128" TEXT="动态地址"></node><node CREATED="1617773759128" ID="ID_6ca10a720332" MODIFIED="1617773759128" TEXT="动态主机配置协议(DHCP)"><node CREATED="1617773759128" ID="ID_3ccff63b02c1" MODIFIED="1617773759128" TEXT="当一台计算机连接到网上时，&amp;lt;br&amp;gt;它从地址池中选一个地址分配该计算机；&amp;lt;br&amp;gt;当计算机离开网络时，它回收所分配的地址。"></node><node CREATED="1617773759128" ID="ID_f0e4e68d05b1" MODIFIED="1617773759128" TEXT="续租"></node><node CREATED="1617773759128" ID="ID_13d23a5e9e19" MODIFIED="1617773759128" TEXT="动态域名服务(DDNS)"></node></node></node><node CREATED="1617773759128" ID="ID_4dee30dcacf0" MODIFIED="1617773759128" TEXT="子网掩码"><node CREATED="1617773759128" ID="ID_55c6e55624e2" MODIFIED="1617773759128" TEXT="分离地址的不同部分"></node><node CREATED="1617773759128" ID="ID_a5fb517f1503" MODIFIED="1617773759128" TEXT="由若干个1后跟若干个0构成的"></node><node CREATED="1617773759128" ID="ID_debb9e081b29" MODIFIED="1617773759128" TEXT="IP地址后放置一个斜线，后跟1的个数"></node></node></node><node CREATED="1617773759128" ID="ID_79c1496b7993" MODIFIED="1617773759128" TEXT="域名"><node CREATED="1617773759128" ID="ID_408351e78b47" MODIFIED="1617773759128" TEXT="DNS服务"><node CREATED="1617773759128" ID="ID_77870a8bbd98" MODIFIED="1617773759128" TEXT="DNS根服务器"></node><node CREATED="1617773759128" ID="ID_2aadc6afe65b" MODIFIED="1617773759128" TEXT="权威域名服务器"></node></node><node CREATED="1617773759128" ID="ID_bebe6349ed67" MODIFIED="1617773759128" TEXT="顶级域名"></node><node CREATED="1617773759128" ID="ID_45daad7a31f4" MODIFIED="1617773759128" TEXT="国家代码顶级域名服务器(ccTLD)"></node><node CREATED="1617773759128" ID="ID_c7e1f22f26e3" MODIFIED="1617773759128" TEXT="一般顶级域名服务器(gTLD)"></node></node><node CREATED="1617773759128" ID="ID_220330f60790" MODIFIED="1617773759128" TEXT="服务质量(QoS)"><node CREATED="1617773759128" ID="ID_52baed80f9b4" MODIFIED="1617773759128" TEXT="差别服务(differentiated service，DS)域(DiffServ)"><node CREATED="1617773759128" ID="ID_f9c770649e5b" MODIFIED="1617773759128" TEXT="DS实际上一个8位的字段，&amp;lt;br&amp;gt;在此我们不关心其他两位。"></node><node CREATED="1617773759128" ID="ID_170be4f16ca1" MODIFIED="1617773759128" TEXT="DS字段作为表的一个索引定义了不同类型的服务"></node></node></node><node CREATED="1617773759128" ID="ID_5a0f4c4735e7" MODIFIED="1617773759128" TEXT="网络安全"><node CREATED="1617773759128" ID="ID_3a3648575d13" MODIFIED="1617773759128" TEXT="问题&amp;lt;br&amp;gt;"><node CREATED="1617773759128" ID="ID_52c4dc8bfd95" MODIFIED="1617773759128" TEXT="入侵"><node CREATED="1617773759128" ID="ID_beae2e0e4ff0" MODIFIED="1617773759128" TEXT="探寻IP地址/端口号"></node></node><node CREATED="1617773759128" ID="ID_f02b49743f8d" MODIFIED="1617773759128" TEXT="机密性"></node><node CREATED="1617773759128" ID="ID_59eaf1055e72" MODIFIED="1617773759129" TEXT="认证"></node><node CREATED="1617773759129" ID="ID_33b677d8ca72" MODIFIED="1617773759129" TEXT="数据完整性和不可抵赖性"></node><node CREATED="1617773759129" ID="ID_d19850cd594f" MODIFIED="1617773759129" TEXT="确保网络的可用性和访问控制"></node></node><node CREATED="1617773759129" ID="ID_672027ae5eda" MODIFIED="1617773759129" TEXT="方法&amp;lt;br&amp;gt;"><node CREATED="1617773759129" ID="ID_ac31fd78035c" MODIFIED="1617773759129" TEXT="对系统的物理和逻辑访问限制；"></node><node CREATED="1617773759129" ID="ID_595dcb9a1cb7" MODIFIED="1617773759129" TEXT="防火墙(逻辑访问控制)"></node><node CREATED="1617773759129" ID="ID_cbfbc48e50b2" MODIFIED="1617773759129" TEXT="加密技术"><node CREATED="1617773759129" ID="ID_02a22a46406a" MODIFIED="1617773759129" TEXT="对称密钥加密"></node><node CREATED="1617773759129" ID="ID_20761eaef87d" MODIFIED="1617773759129" TEXT="公开-私有密钥加密"></node></node></node></node><node CREATED="1617773759129" ID="ID_2d7c4356002e" MODIFIED="1617773759129" TEXT="无线以太网"><node CREATED="1617773759129" ID="ID_5a30a19f9f0d" MODIFIED="1617773759129" TEXT="自组织模式"></node><node CREATED="1617773759129" ID="ID_eeecaa94b376" MODIFIED="1617773759129" TEXT="基础设施模式"></node><node CREATED="1617773759129" ID="ID_84375894711f" MODIFIED="1617773759129" TEXT="802.11标准"><node CREATED="1617773759129" ID="ID_4839fce41c06" MODIFIED="1617773759129" TEXT="带碰撞避免的载波侦听多路访问(CSMA/CA)"></node></node><node CREATED="1617773759129" ID="ID_9d374cd96af5" MODIFIED="1617773759129" TEXT="发送端不是传送数据帧，而是向访问点发送一个小的“请求发送”(RTS)包，&amp;lt;br&amp;gt;并包含发送一帧需要的持续时间。如果信道空闲，则访问点会返回一个&amp;lt;br&amp;gt;“允许发送”(CTS)包，然后发送端才开始传送数据帧"></node></node><node CREATED="1617773759129" ID="ID_8eff4eb9d4e8" MODIFIED="1617773759129" TEXT="通信信道技术"><node CREATED="1617773759129" ID="ID_523c62d4a8a4" MODIFIED="1617773759129" TEXT="数据传输以数字形式来运载数据"><node CREATED="1617773759129" ID="ID_9ef1d7f85603" MODIFIED="1617773759129" TEXT="两种不同的电压或电流值"></node><node CREATED="1617773759129" ID="ID_c46934c2d48b" MODIFIED="1617773759129" TEXT="开/关光源(数字信号)"></node></node><node CREATED="1617773759129" ID="ID_fa12a8fe842c" MODIFIED="1617773759129" TEXT="主要特征"><node CREATED="1617773759129" ID="ID_d0279b14275e" MODIFIED="1617773759129" TEXT="使用的信令传输方法&amp;lt;br&amp;gt;带宽或位率容量&amp;lt;br&amp;gt;信号是单向流动还是双向流动&amp;lt;br&amp;gt;噪声、衰减和失真特性&amp;lt;br&amp;gt;由信道和节点连接强加的延时和时间抖动&amp;lt;br&amp;gt;使用的介质"></node></node><node CREATED="1617773759129" ID="ID_e6d5dd94a185" MODIFIED="1617773759129" TEXT="模拟信道"><node CREATED="1617773759129" ID="ID_1a3de4ad5d2a" MODIFIED="1617773759129" TEXT="时分复用(TDM)"></node><node CREATED="1617773759129" ID="ID_2cb5ef666721" MODIFIED="1617773759129" TEXT="频分复用(FDM)"></node></node><node CREATED="1617773759129" ID="ID_04705e7fa817" MODIFIED="1617773759129" TEXT="数字信道"><node CREATED="1617773759129" ID="ID_47dff59d3434" MODIFIED="1617773759129" TEXT="时分复用(TDM)"></node></node></node><node CREATED="1617773759129" ID="ID_9a7d470398fa" MODIFIED="1617773759129" TEXT="信令技术"><node CREATED="1617773759129" ID="ID_f6a283046113" MODIFIED="1617773759129" TEXT="模拟信号"><node CREATED="1617773759129" ID="ID_7ac676c15c65" MODIFIED="1617773759129" TEXT="连续的值"></node></node><node CREATED="1617773759129" ID="ID_72a1010afab1" MODIFIED="1617773759129" TEXT="离散信号"><node CREATED="1617773759129" ID="ID_32be023b20a7" MODIFIED="1617773759129" TEXT="离散值"></node><node CREATED="1617773759129" ID="ID_aa8c3cefdeb6" MODIFIED="1617773759129" TEXT="数字信号"></node></node><node CREATED="1617773759129" ID="ID_82cfbdff739d" MODIFIED="1617773759129" TEXT="正弦波"><node CREATED="1617773759129" ID="ID_0dab36d8e1d9" MODIFIED="1617773759129" TEXT="振幅A"></node><node CREATED="1617773759129" ID="ID_210a12085e04" MODIFIED="1617773759129" TEXT="频率"></node><node CREATED="1617773759129" ID="ID_608fe5082aa0" MODIFIED="1617773759129" TEXT="周期"></node><node CREATED="1617773759129" ID="ID_19b2feade7ac" MODIFIED="1617773759129" TEXT="f=1/T"></node><node CREATED="1617773759129" ID="ID_35906cb18860" MODIFIED="1617773759129" TEXT="波长(λ)"><node CREATED="1617773759129" ID="ID_1a999bc1f4e6" MODIFIED="1617773759129" TEXT="当无线电波的频率越高时，天线就越短。&amp;lt;br&amp;gt;天线的长短依赖于要接收信号的波长"></node></node><node CREATED="1617773759129" ID="ID_d31f24ce8f2b" MODIFIED="1617773759129" TEXT="λ=c/f"><node CREATED="1617773759129" ID="ID_6f373091af67" MODIFIED="1617773759129" TEXT="c是光速"></node></node></node><node CREATED="1617773759129" ID="ID_6855eb3461a4" MODIFIED="1617773759129" TEXT="衰减"></node><node CREATED="1617773759129" ID="ID_71e2ef9cffe4" MODIFIED="1617773759129" TEXT="放大器"></node><node CREATED="1617773759129" ID="ID_e0deb5d4dd4d" MODIFIED="1617773759129" TEXT="数字信号"><node CREATED="1617773759129" ID="ID_70567df69ae9" MODIFIED="1617773759129" TEXT="异步传输"></node><node CREATED="1617773759129" ID="ID_a18476fd4466" MODIFIED="1617773759129" TEXT="分组编码(block coding)"></node><node CREATED="1617773759129" ID="ID_fcb9057592fc" MODIFIED="1617773759129" TEXT="曼彻斯特编码"></node><node CREATED="1617773759129" ID="ID_cec5d5c818bb" MODIFIED="1617773759129" TEXT="每个字节的边界"></node><node CREATED="1617773759129" ID="ID_1a61a6f5be13" MODIFIED="1617773759129" TEXT="模-数转换器"><node CREATED="1617773759129" ID="ID_dff25fd1b4da" MODIFIED="1617773759129" TEXT="脉冲编码调制(PCM)"></node><node CREATED="1617773759129" ID="ID_3020234aa9a9" MODIFIED="1617773759129" TEXT="脉冲幅值调制(PAM)"></node></node><node CREATED="1617773759129" ID="ID_ed60fb4d8fae" MODIFIED="1617773759129" TEXT="中继器"></node><node CREATED="1617773759129" ID="ID_50786e40316f" MODIFIED="1617773759129" TEXT="时分复用(TDM)"><node CREATED="1617773759129" ID="ID_1a75c752c8e9" MODIFIED="1617773759129" TEXT="统计时分复用"></node></node></node><node CREATED="1617773759129" ID="ID_f75253d7cd71" MODIFIED="1617773759129" TEXT="调制解调器(调制器/解调器)"><node CREATED="1617773759129" ID="ID_c3da273fb359" MODIFIED="1617773759129" TEXT="调制"><node CREATED="1617773759129" ID="ID_b06bed4810fc" MODIFIED="1617773759129" TEXT="振幅移位键控(ASK)"><linktarget COLOR="#b0b0b0" DESTINATION="ID_b06bed4810fc" ENDARROW="Default" ID="Arrow_ID_4f3c71e0ac0d" SOURCE="ID_1694f365cfa1" STARTARROW="None"/></node><node CREATED="1617773759129" ID="ID_f818c0920697" MODIFIED="1617773759129" TEXT="频率移位键控(FSK)"></node><node CREATED="1617773759129" ID="ID_96ad22c181a9" MODIFIED="1617773759129" TEXT="位移位键控(PSK)"></node></node><node CREATED="1617773759129" ID="ID_00553f454873" MODIFIED="1617773759129" TEXT="调制信号的频谱依赖于所用载波的频率，并包含载波频率本身&amp;lt;br&amp;gt;调制信号的带宽依赖于调制的类型&amp;lt;br&amp;gt;载波频率越高，可用带宽就越多；&amp;lt;br&amp;gt;频率越高，带宽占载波频率的百分比就越小。"></node></node></node><node CREATED="1617773759129" ID="ID_c8a2960ca5d2" MODIFIED="1617773759129" TEXT="传输介质"><node CREATED="1617773759129" ID="ID_f021797ca9b5" MODIFIED="1617773759129" TEXT="导向介质"><node CREATED="1617773759129" ID="ID_c2866ebd9384" MODIFIED="1617773759129" TEXT="双绞线(twisted pair，TP)"></node><node CREATED="1617773759129" ID="ID_4053c8225cba" MODIFIED="1617773759129" TEXT="同轴电缆"></node><node CREATED="1617773759129" ID="ID_1694f365cfa1" MODIFIED="1617773759129" TEXT="光缆"><arrowlink DESTINATION="ID_b06bed4810fc" ENDARROW="Default" ID="Arrow_ID_4f3c71e0ac0d" STARTARROW="None"/></node></node><node CREATED="1617773759129" ID="ID_78cc8996ecd6" MODIFIED="1617773759129" TEXT="无导向介质"><node CREATED="1617773759129" ID="ID_88c31815242e" MODIFIED="1617773759129" TEXT="电磁波"></node></node><node CREATED="1617773759129" ID="ID_a44676b3223e" MODIFIED="1617773759129" TEXT="信噪比"></node><node CREATED="1617773759129" ID="ID_21affd1756ee" MODIFIED="1617773759129" TEXT="蜂窝式技术"><node CREATED="1617773759129" ID="ID_1f44b3988c84" MODIFIED="1617773759129" TEXT="长期演进(LTE"><node CREATED="1617773759129" ID="ID_3375a5e21ef9" MODIFIED="1617773759129" TEXT="正交幅度调制(QAM)"></node></node></node><node CREATED="1617773759129" ID="ID_a9b561529aa2" MODIFIED="1617773759129" TEXT="WiFi"></node><node CREATED="1617773759129" ID="ID_d1684ea98cbd" MODIFIED="1617773759129" TEXT="蓝牙"><node CREATED="1617773759129" ID="ID_6397b0149e56" MODIFIED="1617773759129" TEXT="最多七个从节点"><linktarget COLOR="#b0b0b0" DESTINATION="ID_6397b0149e56" ENDARROW="Default" ID="Arrow_ID_b539a3299b69" SOURCE="ID_d4a56ee2f98c" STARTARROW="None"/></node><node CREATED="1617773759129" ID="ID_2e5008da82a2" MODIFIED="1617773759129" TEXT="跳频扩谱"><node CREATED="1617773759129" ID="ID_d4a56ee2f98c" MODIFIED="1617773759129" TEXT="蓝牙将其频带划分为79个信道&amp;lt;br&amp;gt;每一个后继帧都在不同的信道上传送，&amp;lt;br&amp;gt;信道由主节点随机分配"><arrowlink DESTINATION="ID_6397b0149e56" ENDARROW="Default" ID="Arrow_ID_b539a3299b69" STARTARROW="None"/></node></node></node></node></node><node CREATED="1617773759129" ID="ID_a9a08437bdbc" POSITION="right" MODIFIED="1617773759129" TEXT="操作系统(功能分类)"><node CREATED="1617773759129" ID="ID_61bcfb29a91c" MODIFIED="1617773759129" TEXT="大型机操作系统"></node><node CREATED="1617773759129" ID="ID_6449a9c71f27" MODIFIED="1617773759129" TEXT="服务器操作系统"><node CREATED="1617773759129" ID="ID_d8138cafff2c" MODIFIED="1617773759129" TEXT="Solaris、FreeBSD、Linux和Windows Server"></node></node><node CREATED="1617773759129" ID="ID_6a191a30a1b7" MODIFIED="1617773759129" TEXT="多处理器操作系统"></node><node CREATED="1617773759129" ID="ID_6b2cca144974" MODIFIED="1617773759129" TEXT="个人计算机操作系统"></node><node CREATED="1617773759129" ID="ID_f84240cca760" MODIFIED="1617773759129" TEXT="掌上计算机操作系统"></node><node CREATED="1617773759129" ID="ID_8ae2c0b41647" MODIFIED="1617773759129" TEXT="嵌入式操作系统"><node CREATED="1617773759129" ID="ID_a40e942dde98" MODIFIED="1617773759129" TEXT="QNX和VxWorks"></node></node><node CREATED="1617773759129" ID="ID_dbd489b10be4" MODIFIED="1617773759129" TEXT="传感器节点操作系统"><node CREATED="1617773759129" ID="ID_2acadccd6509" MODIFIED="1617773759129" TEXT="TinyOS"></node></node><node CREATED="1617773759129" ID="ID_d7bb31e4a655" MODIFIED="1617773759129" TEXT="机器人操作系统"><node CREATED="1617773759129" ID="ID_61912e4b07e5" MODIFIED="1617773759129" TEXT="ROS"></node></node><node CREATED="1617773759129" ID="ID_b55f476407a2" MODIFIED="1617773759129" TEXT="实时操作系统"></node><node CREATED="1617773759129" ID="ID_0d9a24c12515" MODIFIED="1617773759129" TEXT="智能卡操作系统"></node></node><node CREATED="1617773759129" ID="ID_eaca5c9b3708" POSITION="right" MODIFIED="1617773759129" TEXT="操作系统结构"><node CREATED="1617773759129" ID="ID_d114c7311a8f" MODIFIED="1617773759129" TEXT="单体系统"><node CREATED="1617773759129" ID="ID_73ccf9f2349d" MODIFIED="1617773759129" TEXT="需要一个主程序，用来处理服务过程请求。"></node><node CREATED="1617773759129" ID="ID_3cbf5f1eb93f" MODIFIED="1617773759129" TEXT="需要一套服务过程，用来执行系统调用。"></node><node CREATED="1617773759129" ID="ID_72b7ed0dd646" MODIFIED="1617773759129" TEXT="需要一套实用过程，用来辅助服务过程。"></node></node><node CREATED="1617773759129" ID="ID_44913ed6ada5" MODIFIED="1617773759129" TEXT="层次式系统"><node CREATED="1617773759129" ID="ID_42947af29490" MODIFIED="1617773759129" TEXT="处理器分配在第0层中进行&amp;lt;br&amp;gt;当中断发生或定时器到期时，由该层进行进程切换"></node><node CREATED="1617773759129" ID="ID_95563e32817f" MODIFIED="1617773759129" TEXT="存储器和磁盘管理&amp;lt;br&amp;gt;"></node><node CREATED="1617773759129" ID="ID_7db3cbdf8895" MODIFIED="1617773759129" TEXT="操作员(用户)-进程通信&amp;lt;br&amp;gt;"></node><node CREATED="1617773759129" ID="ID_2b3c9b677a58" MODIFIED="1617773759129" TEXT="输入输出管理"></node><node CREATED="1617773759129" ID="ID_6876e883f1ec" MODIFIED="1617773759129" TEXT="用户程序"></node><node CREATED="1617773759129" ID="ID_eb1a5571bd8b" MODIFIED="1617773759129" TEXT="操作员"></node></node><node CREATED="1617773759129" ID="ID_08e389433fab" MODIFIED="1617773759129" TEXT="微内核"><node CREATED="1617773759129" ID="ID_49f67f6afb67" MODIFIED="1617773759129" TEXT="MINIX 3"></node></node><node CREATED="1617773759129" ID="ID_de0315676f41" MODIFIED="1617773759129" TEXT="虚拟机"></node><node CREATED="1617773759129" ID="ID_29b1136e576e" MODIFIED="1617773759129" TEXT="外核"><node CREATED="1617773759129" ID="ID_43960aff7410" MODIFIED="1617773759129" TEXT="在底层中，一种称为外核(exokernel，Engler等人，1995)的程序在内核态中运行。&amp;lt;br&amp;gt;它的任务是为虚拟机分配资源，并检查试图使用这些资源的企图，以确保没有机器会使用他人的资源"></node></node><node CREATED="1617773759129" ID="ID_f9c541be75fb" MODIFIED="1617773759129" TEXT="运行模型"><node CREATED="1617773759129" ID="ID_f60d51b8b2fc" MODIFIED="1617773759129" TEXT="操作系统代码都是直接在硬件上执行的"></node></node><node CREATED="1617773759129" ID="ID_c8dd8811880b" MODIFIED="1617773759129" TEXT="客户机-服务器模式"></node><node CREATED="1617773759129" ID="ID_a6198329486a" MODIFIED="1617773759129" TEXT="外内核"></node></node><node CREATED="1617773759129" ID="ID_8c86f9f44dd9" POSITION="right" MODIFIED="1617773759129" TEXT="真空管和穿孔卡片"></node><node CREATED="1617773759129" ID="ID_acee12c6189f" POSITION="right" MODIFIED="1617773759129" TEXT="晶体管和批处理系统&amp;lt;br&amp;gt;"><node CREATED="1617773759129" ID="ID_9027ee0dda38" MODIFIED="1617773759129" TEXT="批处理系统(batch system)"><arrowlink DESTINATION="ID_ec1fcfe3f3f1" ENDARROW="Default" ID="Arrow_ID_5c241d92bf4a" STARTARROW="None"/><node CREATED="1617773759129" ID="ID_74449e93a6cf" MODIFIED="1617773759129" TEXT="同时(批量)读取,同时(批量)解码,同时(批量)执行指令,同时(批量)输出"></node><node CREATED="1617773759129" ID="ID_85fc7abd354c" MODIFIED="1617773759129" TEXT="单道批处理系统"></node><node CREATED="1617773759129" ID="ID_c8ecdc5fa435" MODIFIED="1617773759129" TEXT="多道批处理系统"></node></node></node><node CREATED="1617773759129" ID="ID_74c84ea25c01" POSITION="right" MODIFIED="1617773759129" TEXT="运行方式&amp;lt;br&amp;gt;"><node CREATED="1617773759129" ID="ID_ec1fcfe3f3f1" MODIFIED="1617773759129" TEXT="多道程序设计(multiprogramming)(进程)"><linktarget COLOR="#b0b0b0" DESTINATION="ID_ec1fcfe3f3f1" ENDARROW="Default" ID="Arrow_ID_5c241d92bf4a" SOURCE="ID_9027ee0dda38" STARTARROW="None"/><node CREATED="1617773759129" ID="ID_aa35e5ca4a54" MODIFIED="1617773759129" TEXT="每一部分存放不同的作业，当一个作业等待I/O操作完成时，&amp;lt;br&amp;gt;另一个作业可以使用CPU。如果内存中可以同时存放足够多的作业，&amp;lt;br&amp;gt;则CPU利用率可以接近100%。&amp;lt;br&amp;gt;在内存中同时驻留多个作业需要特殊的硬件来对其进行保护，&amp;lt;br&amp;gt;以避免作业的信息被窃取或受到攻击。"></node><node CREATED="1617773759129" ID="ID_b5ea25d0ad6c" MODIFIED="1617773759129" TEXT="同时的外部设备联机操作&amp;lt;br&amp;gt;(Simultaneous Peripheral Operation On Line，SPOOLing)"></node><node CREATED="1617773759129" ID="ID_5f47f3d26676" MODIFIED="1617773759129" TEXT="将作业读入磁盘&amp;lt;br&amp;gt;当上一个作业完成时, 将新作业从磁盘读出"></node></node><node CREATED="1617773759129" ID="ID_67fc70cfd18b" MODIFIED="1617773759129" TEXT="分时系统&amp;lt;br&amp;gt;兼容分时系统(Compatible Time Sharing System，CTSS)&amp;lt;br&amp;gt;"></node><node CREATED="1617773759129" ID="ID_9e0beb5d4f95" MODIFIED="1617773759129" TEXT="资源共享复用方式"><node CREATED="1617773759129" ID="ID_bf0ff2b7fe09" MODIFIED="1617773759129" TEXT="时间上复用(CPU)"></node><node CREATED="1617773759129" ID="ID_16584c53f046" MODIFIED="1617773759129" TEXT="空间上复用(Memory)"></node></node></node><node CREATED="1617773759129" ID="ID_459c0139967e" POSITION="right" MODIFIED="1617773759129" TEXT="早期计算机"><node CREATED="1617773759129" ID="ID_3a5613621141" MODIFIED="1617773759129" TEXT="面向字"></node><node CREATED="1617773759129" ID="ID_2184c115eec3" MODIFIED="1617773759129" TEXT="面向字符"></node></node><node CREATED="1617773759129" ID="ID_7c4ac943c5f8" POSITION="right" MODIFIED="1617773759129" TEXT="个人计算机"><node CREATED="1617773759129" ID="ID_a5c18b8ee2bb" MODIFIED="1617773759129" TEXT="win"></node><node CREATED="1617773759129" ID="ID_85c2cc1fef19" MODIFIED="1617773759129" TEXT="linux"></node><node CREATED="1617773759129" ID="ID_b96405340cb8" MODIFIED="1617773759129" TEXT="unix"><node CREATED="1617773759129" ID="ID_3d529ace96c7" MODIFIED="1617773759129" TEXT="FreeBSD"></node></node></node><node CREATED="1617773759129" ID="ID_8cd700b10869" POSITION="right" MODIFIED="1617773759129" TEXT="软件"><node CREATED="1617773759129" ID="ID_36786bbab47d" MODIFIED="1617773759129" TEXT="用户态"><node CREATED="1617773759129" ID="ID_79f5ae5c88d7" MODIFIED="1617773759129" TEXT="用户软件"></node><node CREATED="1617773759129" ID="ID_c4d0be4c2f78" MODIFIED="1617773759129" TEXT="用户接口程序"></node></node><node CREATED="1617773759129" ID="ID_9b102cd6a817" MODIFIED="1617773759129" TEXT="内核态"><node CREATED="1617773759129" ID="ID_b8c6223e43e9" MODIFIED="1617773759129" TEXT="操作系统"></node></node></node><node CREATED="1617773759129" ID="ID_9269de530003" POSITION="right" MODIFIED="1617773759129" TEXT="计算机硬件"><node CREATED="1617773759129" ID="ID_3ed7ee603b2c" MODIFIED="1617773759129" TEXT="处理器CPU"><node CREATED="1617773759129" ID="ID_ea05ba91b355" MODIFIED="1617773759129" TEXT="寄存器"><node CREATED="1617773759129" ID="ID_7168930cafa5" MODIFIED="1617773759129" TEXT="保存关键变量和临时数据的寄存器"></node></node><node CREATED="1617773759129" ID="ID_9592070169c5" MODIFIED="1617773759129" TEXT="寄存器: 程序计数器"><node CREATED="1617773759129" ID="ID_a70edc8a32df" MODIFIED="1617773759129" TEXT="保存了将要取出的下一条指令的内存地址。&amp;lt;br&amp;gt;在指令取出之后，程序计数器就被更新以便指向后继的指令。"></node></node><node CREATED="1617773759129" ID="ID_87a8e1e087e2" MODIFIED="1617773759129" TEXT="寄存器: 堆栈指针"><node CREATED="1617773759129" ID="ID_20eccfb7a6a3" MODIFIED="1617773759129" TEXT="指向内存中当前栈的顶端&amp;lt;br&amp;gt;该栈含有已经进入但是还没有退出的每个过程的一个框架。&amp;lt;br&amp;gt;在一个过程的堆栈框架中保存了有关的输入参数、&amp;lt;br&amp;gt;局部变量以及那些没有保存在寄存器中的临时变量。&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759129" ID="ID_1163fca4df9d" MODIFIED="1617773759129" TEXT="寄存器:&amp;nbsp; 程序状态字&amp;lt;br&amp;gt;Program Status Word，PSW&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;用户程序通常读入整个PSW，&amp;lt;br&amp;gt;但是，只对其中的少量字段写入。&amp;lt;br&amp;gt;"><linktarget COLOR="#b0b0b0" DESTINATION="ID_1163fca4df9d" ENDARROW="Default" ID="Arrow_ID_8ec02c697a8e" SOURCE="ID_23db3d24dd7c" STARTARROW="None"/><node CREATED="1617773759129" ID="ID_791be36d63ce" MODIFIED="1617773759129" TEXT="条件码位(由比较指令设置)"></node><node CREATED="1617773759129" ID="ID_df264f84910f" MODIFIED="1617773759129" TEXT="CPU优先级"></node><node CREATED="1617773759129" ID="ID_acd7afcbd5b0" MODIFIED="1617773759129" TEXT="模式(用户态或内核态)"></node><node CREATED="1617773759129" ID="ID_b332df386354" MODIFIED="1617773759129" TEXT="各种其他控制位"></node></node><node CREATED="1617773759129" ID="ID_f5c5fa28b51f" MODIFIED="1617773759129" TEXT="指令集"><node CREATED="1617773759129" ID="ID_c746f1863be6" MODIFIED="1617773759129" TEXT="指令周期"></node><node CREATED="1617773759129" ID="ID_298d3e20fbe4" MODIFIED="1617773759129" TEXT="特权指令"></node><node CREATED="1617773759129" ID="ID_230fa2e7c9bb" MODIFIED="1617773759129" TEXT="应用级指令"><node CREATED="1617773759129" ID="ID_24880f73f19c" MODIFIED="1617773759129" TEXT="算术指令"></node><node CREATED="1617773759129" ID="ID_90519dabefed" MODIFIED="1617773759129" TEXT="布尔逻辑指令"></node><node CREATED="1617773759129" ID="ID_148b6c627719" MODIFIED="1617773759129" TEXT="单操作数操作指令"></node><node CREATED="1617773759129" ID="ID_52876105d1fa" MODIFIED="1617773759129" TEXT="位操作指令"></node><node CREATED="1617773759129" ID="ID_480985e4f5ea" MODIFIED="1617773759129" TEXT="移位和循环移位指令"></node><node CREATED="1617773759129" ID="ID_67c765c9a9d5" MODIFIED="1617773759129" TEXT="程序控制指令"></node><node CREATED="1617773759129" ID="ID_0e3780e3598c" MODIFIED="1617773759129" TEXT="栈指令"></node><node CREATED="1617773759129" ID="ID_f58132435b90" MODIFIED="1617773759129" TEXT="多数据指令(SIMD)"><node CREATED="1617773759129" ID="ID_b715732db937" MODIFIED="1617773759129" TEXT="多个数据指令对多份数据同时执行单个操作"></node><node CREATED="1617773759129" ID="ID_0c01795850a3" MODIFIED="1617773759129" TEXT="饱和"></node></node></node><node CREATED="1617773759129" ID="ID_435a3b8a3e38" MODIFIED="1617773759129" TEXT="指令字格式"></node></node><node CREATED="1617773759129" ID="ID_95bba8e4180e" MODIFIED="1617773759129" TEXT="流水线"><node CREATED="1617773759129" ID="ID_4a91cb12530e" MODIFIED="1617773759129" TEXT="取指单元"><arrowlink DESTINATION="ID_d7cf0acb35cc" ENDARROW="Default" ID="Arrow_ID_fc5a21b29b39" STARTARROW="None"/></node><node CREATED="1617773759129" ID="ID_d7cf0acb35cc" MODIFIED="1617773759129" TEXT="解码单元"><linktarget COLOR="#b0b0b0" DESTINATION="ID_d7cf0acb35cc" ENDARROW="Default" ID="Arrow_ID_fc5a21b29b39" SOURCE="ID_4a91cb12530e" STARTARROW="None"/><arrowlink DESTINATION="ID_dd56e1ee7c2a" ENDARROW="Default" ID="Arrow_ID_5f0d9c9c35a7" STARTARROW="None"/></node><node CREATED="1617773759129" ID="ID_dd56e1ee7c2a" MODIFIED="1617773759129" TEXT="执行单元"><linktarget COLOR="#b0b0b0" DESTINATION="ID_dd56e1ee7c2a" ENDARROW="Default" ID="Arrow_ID_5f0d9c9c35a7" SOURCE="ID_d7cf0acb35cc" STARTARROW="None"/></node><node CREATED="1617773759129" ID="ID_82568941c420" MODIFIED="1617773759129" TEXT="超标量CPU"><node CREATED="1617773759129" ID="ID_bf1fd4096d8e" MODIFIED="1617773759129" TEXT="多个执行单元"></node></node></node><node CREATED="1617773759129" ID="ID_23db3d24dd7c" MODIFIED="1617773759129" TEXT="多数CPU有两种模式"><arrowlink DESTINATION="ID_1163fca4df9d" ENDARROW="Default" ID="Arrow_ID_8ec02c697a8e" STARTARROW="None"/><node CREATED="1617773759129" ID="ID_d99ab0b2cbfb" MODIFIED="1617773759129" TEXT="用户态"><node CREATED="1617773759129" ID="ID_7d6d8b4b4773" MODIFIED="1617773759129" TEXT="用户程序在用户态下运行，仅允许执行整个指令集的一个子集和访问所有功能的一个子集。一般而言，在用户态中有关I/O和内存保护的所有指令是禁止的。当然，将PSW中的模式位设置成内核态也是禁止的"></node></node><node CREATED="1617773759129" ID="ID_48f1be49e117" MODIFIED="1617773759129" TEXT="内核态"><node CREATED="1617773759129" ID="ID_f688de9d97ed" MODIFIED="1617773759129" TEXT="当在内核态运行时，CPU可以执行指令集中的每一条指令，并且使用硬件的每种功能。操作系统在内核态下运行，从而可以访问整个硬件"></node></node><node CREATED="1617773759129" ID="ID_83759e472701" MODIFIED="1617773759129" TEXT="为了从操作系统中获得服务，用户程序必须使用系统调用(system call)系统调用陷入内核并调用操作系统。TRAP指令把用户态切换成内核态，并启用操作系统。当有关工作完成之后，在系统调用后面的指令把控制权返回给用户程序。&amp;lt;br&amp;gt;有必要指出，计算机使用&amp;lt;b&amp;gt;陷阱&amp;lt;/b&amp;gt;而不是一条指令来执行系统调用。其他的多数陷阱是由硬件引起的用于警告有异常情况发生，诸如试图被零除或浮点下溢等。在所有的情况下，操作系统都得到控制权并决定如何处理异常情况。有时，由于出错的原因程序不得不停止。在其他情况下可以忽略出错(如下溢数可以被置为零)。最后，若程序已经提前宣布它希望处理某类条件时，那么控制权还必须返回给该程序，让其处理相关的问题"></node></node><node CREATED="1617773759130" ID="ID_dbefc80ed7df" MODIFIED="1617773759130" TEXT="多线程和多核芯片&amp;lt;br&amp;gt;multithreading&amp;lt;br&amp;gt;hyperthreading&amp;lt;br&amp;gt;"><node CREATED="1617773759130" ID="ID_0d5a73fd2ff7" MODIFIED="1617773759130" TEXT="多线程允许CPU保持两个不同的线程状态，&amp;lt;br&amp;gt;然后在纳秒级的时间尺度内来回切换"><node CREATED="1617773759130" ID="ID_426759dedcc5" MODIFIED="1617773759130" TEXT="因为每个线程在操作系统看来就像是单个的CPU"></node><node CREATED="1617773759130" ID="ID_fa6f2f001848" MODIFIED="1617773759130" TEXT="考虑一个实际有两个CPU的系统，每个CPU有两个线程。&amp;lt;br&amp;gt;这样操作系统将把它看成是4个CPU"></node></node><node CREATED="1617773759130" ID="ID_871581a08015" MODIFIED="1617773759130" TEXT="多核芯片"><node CREATED="1617773759130" ID="ID_3a0bb768aa7a" MODIFIED="1617773759130" TEXT="每个小芯片都是一个独立的CPU,&amp;nbsp;&amp;lt;br&amp;gt;需要多处理器操作系统&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;"></node><node CREATED="1617773759130" ID="ID_d0136762bb4d" MODIFIED="1617773759130" TEXT="可以共享或独立使用高速缓存"><linktarget COLOR="#b0b0b0" DESTINATION="ID_d0136762bb4d" ENDARROW="Default" ID="Arrow_ID_961daf1f5223" SOURCE="ID_efc866319b1a" STARTARROW="None"/></node></node></node><node CREATED="1617773759130" ID="ID_0f5cfbff8e09" MODIFIED="1617773759130" TEXT="时钟滴答(即每个时钟中断)"></node><node CREATED="1617773759130" ID="ID_6d17cf6fd029" MODIFIED="1617773759130" TEXT="子单元"><node CREATED="1617773759130" ID="ID_8f2acc0b2ced" MODIFIED="1617773759130" TEXT="算术/逻辑单元(ALU)"></node><node CREATED="1617773759130" ID="ID_21f6f4aacaad" MODIFIED="1617773759130" TEXT="控制单元(CU)"></node><node CREATED="1617773759130" ID="ID_b636d72d871f" MODIFIED="1617773759130" TEXT="接口单元"><node CREATED="1617773759130" ID="ID_0f520d13088b" MODIFIED="1617773759130" TEXT="将CPU、内存以及各种I/O模块互连起来。也可以将多个CPU核连接起来"></node></node></node><node CREATED="1617773759130" ID="ID_12149695f57e" MODIFIED="1617773759130" TEXT="寻址限制"></node></node><node CREATED="1617773759130" ID="ID_c07e3f301c04" MODIFIED="1617773759130" TEXT="存储器(RAM)"><node CREATED="1617773759130" ID="ID_d635df5795d8" MODIFIED="1617773759130" TEXT="寄存器 (在CPU)中&amp;lt;br&amp;gt;操作系统必须知晓(管理\获取)所有的寄存器。&amp;lt;br&amp;gt;在时间多路复用(time multiplexing)CPU中，&amp;lt;br&amp;gt;操作系统经常会中止正在运行的某个程序并启动(或再启动)另一个程序。&amp;lt;br&amp;gt;每次停止一个运行着的程序时，操作系统必须保存所有的寄存器，&amp;lt;br&amp;gt;这样在稍后该程序被再次运行时，可以把这些寄存器重新装入。&amp;lt;br&amp;gt;"><node CREATED="1617773759130" ID="ID_09307fdbe76b" MODIFIED="1617773759130" TEXT="32 位 cpu 中 32x32 位"></node><node CREATED="1617773759130" ID="ID_3be0222391c6" MODIFIED="1617773759130" TEXT="64位CPU中为64×64位"></node></node><node CREATED="1617773759130" ID="ID_efc866319b1a" MODIFIED="1617773759130" TEXT="高速缓存(在CPU)中"><arrowlink DESTINATION="ID_d0136762bb4d" ENDARROW="Default" ID="Arrow_ID_961daf1f5223" STARTARROW="None"/><node CREATED="1617773759130" ID="ID_c518d65aa087" MODIFIED="1617773759130" TEXT="在任何缓存系统中，都有若干需要尽快考虑的问题(保持数据一致性)，包括: &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;1)何时把一个新的内容放入缓存。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;2)把新内容放在缓存的哪一行上。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;3)在需要时，应该把哪个内容从缓存中移走。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;4)应该把新移走的内容放在某个较大存储器的何处。"></node></node><node CREATED="1617773759130" ID="ID_d952bfa5d5a1" MODIFIED="1617773759130" TEXT="主存(Random Access Memory，RAM))"></node><node CREATED="1617773759130" ID="ID_63b9da38e65c" MODIFIED="1617773759130" TEXT="非易失性随机访问存储器(Read Only Memory，ROM)"><node CREATED="1617773759130" ID="ID_85cccbe4123c" MODIFIED="1617773759130" TEXT="在工厂中就被编程完毕,&amp;lt;br&amp;gt;&amp;nbsp;不允许修改&amp;lt;br&amp;gt;断电不丢失内容"></node><node CREATED="1617773759130" ID="ID_d05fce32119b" MODIFIED="1617773759130" TEXT="有些计算机中，&amp;lt;br&amp;gt;用于启动计算机的引导&amp;lt;br&amp;gt;加载模块就存放在ROM中"></node></node><node CREATED="1617773759130" ID="ID_a89fecad4669" MODIFIED="1617773759130" TEXT="EEPROM (Electrically Erasable PROM&amp;lt;br&amp;gt;电可擦除可编程ROM)&amp;lt;br&amp;gt;闪存(flash memory)"><node CREATED="1617773759130" ID="ID_487f314f65c6" MODIFIED="1617773759130" TEXT="可以擦除和重写&amp;lt;br&amp;gt;"></node><node CREATED="1617773759130" ID="ID_9877b38b258e" MODIFIED="1617773759130" TEXT="速度慢于RAM"></node></node><node CREATED="1617773759130" ID="ID_d6d3b5454241" MODIFIED="1617773759130" TEXT="CMOS"><node CREATED="1617773759130" ID="ID_66aac109457a" MODIFIED="1617773759130" TEXT="许多计算机利用CMOS存储器保持当前时间和日期, 以及保存配置参数"></node><node CREATED="1617773759130" ID="ID_f4026bb3c742" MODIFIED="1617773759130" TEXT="易失性, 耗电少"></node></node></node><node CREATED="1617773759130" ID="ID_e514d140cfad" MODIFIED="1617773759130" TEXT="总线&amp;lt;br&amp;gt;一束导线，在不同的部件间传送信号和供电"><node CREATED="1617773759130" ID="ID_6058d897dfa0" MODIFIED="1617773759130" TEXT="PCI(Peripheral Component Interconnect)总线"></node><node CREATED="1617773759130" ID="ID_44344ec0a6d3" MODIFIED="1617773759130" TEXT="PC ISA(Industry Standard Architecture)总线&amp;lt;br&amp;gt;最大速率为16.67MB/s&amp;lt;br&amp;gt;"></node><node CREATED="1617773759130" ID="ID_5e41e9435b61" MODIFIED="1617773759130" TEXT="IDE总线"></node><node CREATED="1617773759130" ID="ID_bbe4b45097b5" MODIFIED="1617773759130" TEXT="通用串行总线(Universal Serial Bus，USB)"></node><node CREATED="1617773759130" ID="ID_37d8dcac0a35" MODIFIED="1617773759130" TEXT="SCSI(Small Computer System Interface)总线"></node><node CREATED="1617773759130" ID="ID_7fc8c28b2c77" MODIFIED="1617773759130" TEXT="IEEE 1394(火线(FireWire))"></node><node CREATED="1617773759130" ID="ID_91ede086f0d2" MODIFIED="1617773759130" TEXT="类型"><node CREATED="1617773759130" ID="ID_bdbd7a94ab52" MODIFIED="1617773759130" TEXT="数据线"></node><node CREATED="1617773759130" ID="ID_104a5a505b41" MODIFIED="1617773759130" TEXT="地址线"></node><node CREATED="1617773759130" ID="ID_fe256b8e29f7" MODIFIED="1617773759130" TEXT="控制线"></node><node CREATED="1617773759130" ID="ID_9774a3cd4ebb" MODIFIED="1617773759130" TEXT="电源线"></node></node><node CREATED="1617773759130" ID="ID_ba53ac1b67a4" MODIFIED="1617773759130" TEXT="传递数据"><node CREATED="1617773759130" ID="ID_b9b6dc45b2d5" MODIFIED="1617773759130" TEXT="单向线叫做双工线(simplex line)"></node><node CREATED="1617773759130" ID="ID_e7494e810bb5" MODIFIED="1617773759130" TEXT="半双工线(half-duplex line)"><node CREATED="1617773759130" ID="ID_ec1c75c0acee" MODIFIED="1617773759130" TEXT="双向线一次只可沿一个方向传递数据"></node></node><node CREATED="1617773759130" ID="ID_73442fc0ce88" MODIFIED="1617773759130" TEXT="全双工线(full-duplex line)"></node></node></node><node CREATED="1617773759130" ID="ID_947c2c9ba70a" MODIFIED="1617773759130" TEXT="母板(双亲版)"><node CREATED="1617773759130" ID="ID_56a8f2b010c9" MODIFIED="1617773759130" TEXT="基本输入输出系统(Basic Input Output System , BIOS)"><node CREATED="1617773759130" ID="ID_e8377f2638c6" MODIFIED="1617773759130" TEXT="底层 I/O 软件 (RAM)"><node CREATED="1617773759130" ID="ID_1f0dcbb8cd2a" MODIFIED="1617773759130" TEXT="读磁盘"></node><node CREATED="1617773759130" ID="ID_e66a9301fa20" MODIFIED="1617773759130" TEXT="写屏幕"></node><node CREATED="1617773759130" ID="ID_677c64e1812d" MODIFIED="1617773759130" TEXT="进行磁盘I/O"></node><node CREATED="1617773759130" ID="ID_1be923485c74" MODIFIED="1617773759130" TEXT="其它操作"></node></node></node></node><node CREATED="1617773759130" ID="ID_4e5e2e070dfe" MODIFIED="1617773759130" TEXT="磁盘"><node CREATED="1617773759130" ID="ID_9838ab926a20" MODIFIED="1617773759130" TEXT="磁盘被组织成柱面，每一个柱面包含若干磁道.&amp;lt;br&amp;gt;磁道数与垂直堆叠的磁头个数相同.&amp;lt;br&amp;gt;硬盘由一叠铝的、合金的或玻璃的盘片组成，直径为5.25英寸或3.5英寸&amp;lt;br&amp;gt;在每个盘片上沉积着薄薄的可磁化的金属氧化物。&amp;lt;br&amp;gt;在制造出来之后，磁盘上不存在任何信息。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;"></node><node CREATED="1617773759130" ID="ID_12aa8955ebd9" MODIFIED="1617773759130" TEXT="IDE(Integrated Drive Electronics，集成驱动电子设备)"></node><node CREATED="1617773759130" ID="ID_99950ccfc675" MODIFIED="1617773759130" TEXT="SATA(Serial ATA，串行ATA)"></node><node CREATED="1617773759130" ID="ID_9f59385a0011" MODIFIED="1617773759130" TEXT="重叠寻道(overlapped seek)"><node CREATED="1617773759130" ID="ID_c38a83aac56e" MODIFIED="1617773759130" TEXT="控制器可以同时控制两个或多个驱动器进行寻道&amp;lt;br&amp;gt;控制器和软件等待一个驱动器完成寻道时，&amp;lt;br&amp;gt;控制器可以同时启动另一个驱动器进行寻道。&amp;lt;br&amp;gt;许多控制器也可以在一个驱动器上进行读写操作，&amp;lt;br&amp;gt;与此同时再对另一个或多个其他驱动器进行寻道"></node></node><node CREATED="1617773759130" ID="ID_9c6884f04289" MODIFIED="1617773759130" TEXT="RAID (Redundant Array of Inexpensive(Independent)&amp;lt;br&amp;gt; Disk(廉价磁盘冗余阵列))&amp;lt;br&amp;gt;用RAID控制器替换磁盘控制器卡，将数据复制到整个RAID上，&amp;lt;br&amp;gt;然后继续常规的操作&amp;lt;br&amp;gt;图片和我之前搜索的似乎不一样&amp;lt;br&amp;gt;"><node CREATED="1617773759130" ID="ID_2aebbbfa9d10" MODIFIED="1617773759130" TEXT="扇区条带"><node CREATED="1617773759130" ID="ID_c751c1fd1308" MODIFIED="1617773759130" TEXT="0级RAID"><node CREATED="1617773759130" ID="ID_957d1f07b3bb" MODIFIED="1617773759130" TEXT="它将RAID模拟的虚拟单个磁盘划分成条带，每个条带具有k个扇区&amp;lt;br&amp;gt;像这样将数据分布在多个驱动器上称为划分条带(striping)&amp;lt;br&amp;gt;如果请求的数据量大于驱动器数乘以条带大小，那么某些驱动器将得到多个请求，&amp;lt;br&amp;gt;这样当它们完成了第一个请求之后，就会开始处理第二个请求。&amp;lt;br&amp;gt;控制器的责任是分解请求，并且以正确的顺序将适当的命令提供给适当的磁盘，&amp;lt;br&amp;gt;之后还要在内存中将结果正确地装配起来。"></node></node><node CREATED="1617773759130" ID="ID_5719d3195c4a" MODIFIED="1617773759130" TEXT="1级RAID"><node CREATED="1617773759130" ID="ID_921c0805960c" MODIFIED="1617773759130" TEXT="这是一个真正的RAID"></node><node CREATED="1617773759130" ID="ID_50ae097a89bb" MODIFIED="1617773759130" TEXT="它复制了所有的磁盘，所以存在四个主磁盘和四个备份磁盘。&amp;lt;br&amp;gt;在执行一次写操作时，每个条带都被写了两次。&amp;lt;br&amp;gt;在执行一次读操作时，则可以使用其中的任意一个副本，&amp;lt;br&amp;gt;从而将负荷分布在更多的驱动器上。"></node></node><node CREATED="1617773759130" ID="ID_ad92defb3cec" MODIFIED="1617773759130" TEXT="4级RAID"></node><node CREATED="1617773759130" ID="ID_6837b31689bf" MODIFIED="1617773759130" TEXT="5级RAID"></node></node><node CREATED="1617773759130" ID="ID_778026d61b9a" MODIFIED="1617773759130" TEXT="字节"><node CREATED="1617773759130" ID="ID_907d841aba09" MODIFIED="1617773759130" TEXT="将单个虚拟磁盘的每个字节分割成n位的半字节对，&amp;lt;br&amp;gt;然后对每个半字节加入m个汉明码从而形成x位的字，&amp;lt;br&amp;gt;其中(1、2、4)位为奇偶校验位。"><node CREATED="1617773759130" ID="ID_a2d84a267fc2" MODIFIED="1617773759130" TEXT="要求所有驱动器的旋转必须同步，&amp;lt;br&amp;gt;并且只有在驱动器数量很充裕(校验码占位)的情况下才有意义"></node><node CREATED="1617773759130" ID="ID_e6f0c6e3f986" MODIFIED="1617773759130" TEXT="由于坏位的位置是已知的，所以这样做完全能够纠正1位错误。&amp;lt;br&amp;gt;如果一个驱动器崩溃了，控制器只需假装该驱动器的所有位为0，&amp;lt;br&amp;gt;如果一个字有奇偶错误，那么来自废弃了的驱动器上的位原来一定是1，这样就纠正了错误。"></node></node><node CREATED="1617773759130" ID="ID_9dee53895dd7" MODIFIED="1617773759130" TEXT="3级RAID"></node></node></node><node CREATED="1617773759130" ID="ID_7c8029baf4f2" MODIFIED="1617773759130" TEXT="磁盘格式化&amp;lt;br&amp;gt;在磁盘能够使用之前，每个盘片必须经受由软件完成的低级格式化(low-level format)&amp;lt;br&amp;gt;在准备一块磁盘以便于使用的最后一步是对每一个分区分别执行一次高级格式化(high-level format)。&amp;lt;br&amp;gt;这一操作要设置一个引导块、空闲存储管理(空闲列表或位图)、根目录和一个空文件系统。&amp;lt;br&amp;gt;这一操作还要将一个代码设置在分区表项中，以表明在分区中使用的是哪个文件系统，&amp;lt;br&amp;gt;因为许多操作系统支持多个兼容的文件系统(由于历史原因)。"><node CREATED="1617773759130" ID="ID_10664192756e" MODIFIED="1617773759130" TEXT="该格式包含一系列同心的磁道，每个磁道包含若干数目的扇区，扇区间存在短的间隙。"></node><node CREATED="1617773759130" ID="ID_04471025ceb2" MODIFIED="1617773759130" TEXT="柱面斜进示意图&amp;lt;br&amp;gt;柱面斜进量取决于驱动器的几何规格.&amp;lt;br&amp;gt;柱面斜进一样也存在着磁头斜进(head skew)，但是磁头斜进不是非常大。"></node></node><node CREATED="1617773759130" ID="ID_632eef6d4b75" MODIFIED="1617773759130" TEXT="磁盘臂调度算法"><node CREATED="1617773759130" ID="ID_a18a84424859" MODIFIED="1617773759130" TEXT="电梯算法(elevator algorithm)"><node CREATED="1617773759130" ID="ID_86fd39d81333" MODIFIED="1617773759130" TEXT="软件维护一个二进制位，即当前方向位: UP(向上)或是DOWN(向下)。&amp;lt;br&amp;gt;当一个请求处理完之后，磁盘或电梯的驱动程序检查该位，如果是UP，&amp;lt;br&amp;gt;磁盘臂或电梯舱移至下一个更高的未完成的请求。如果更高的位置没有未完成的请求，&amp;lt;br&amp;gt;则方向位取反。当方向位设置为DOWN时，同时存在一个低位置的请求，则移向该位置。&amp;lt;br&amp;gt;磁盘控制器内部使用"></node></node></node><node CREATED="1617773759130" ID="ID_daf485542c28" MODIFIED="1617773759130" TEXT="错误处理"><node CREATED="1617773759130" ID="ID_eb586b43196a" MODIFIED="1617773759130" TEXT="坏块"><node CREATED="1617773759130" ID="ID_4cfe599dcda1" MODIFIED="1617773759130" TEXT="在操作系统中对它们进行处理"><node CREATED="1617773759130" ID="ID_2edd798faaaf" MODIFIED="1617773759130" TEXT="创建一个包含所有坏扇区的秘密的文件,隐藏坏块文件"></node></node><node CREATED="1617773759130" ID="ID_a1207c0d21d0" MODIFIED="1617773759130" TEXT="在控制器中对它们进行处理"><node CREATED="1617773759130" ID="ID_4ec605058ce4" MODIFIED="1617773759130" TEXT="驱动器安装前&amp;lt;br&amp;gt;"><node CREATED="1617773759130" ID="ID_01507b261393" MODIFIED="1617773759130" TEXT="将所有扇区向上移动一个扇区(重写前导码)"></node><node CREATED="1617773759130" ID="ID_2d4a16dfb89d" MODIFIED="1617773759130" TEXT="备用扇区之一重映射为扇区(通过内部的表来跟踪这一信息(每个磁道一张表))"></node><node CREATED="1617773759130" ID="ID_e56c7147526e" MODIFIED="1617773759130" TEXT="安装后"><node CREATED="1617773759130" ID="ID_f47c80fa7d0b" MODIFIED="1617773759130" TEXT="试图再次读"><node CREATED="1617773759130" ID="ID_22c21fdf342d" MODIFIED="1617773759130" TEXT="某些读错误是瞬时性的，&amp;lt;br&amp;gt;也就是说是由磁头下的灰尘导致的，&amp;lt;br&amp;gt;在第二次尝试时错误就消失了。"></node></node><node CREATED="1617773759130" ID="ID_3de50c5d7a45" MODIFIED="1617773759130" TEXT="切换到一个备用扇区(重复性的错误)"></node></node></node></node></node><node CREATED="1617773759130" ID="ID_c0c0a0456ffe" MODIFIED="1617773759130" TEXT="机械故障"><node CREATED="1617773759130" ID="ID_bfc43a5b16d0" MODIFIED="1617773759130" TEXT="recalibrate(重新校准)命令"></node></node></node><node CREATED="1617773759130" ID="ID_9b9141dbb05b" MODIFIED="1617773759130" TEXT="控制器实际是一个专用的小计算机"><node CREATED="1617773759130" ID="ID_7ec9a023d015" MODIFIED="1617773759130" TEXT="它有软件、变量、缓冲区，偶尔还出现故障"></node></node><node CREATED="1617773759130" ID="ID_63743074cdef" MODIFIED="1617773759130" TEXT="稳定存储器(stable storage)&amp;lt;br&amp;gt;在软件中实现的&amp;lt;br&amp;gt;目标是不惜一切代价保持磁盘的一致性"><node CREATED="1617773759130" ID="ID_1f75879ddf78" MODIFIED="1617773759130" TEXT="要么就正确地工作，要么就让旧的数据原封不动"></node><node CREATED="1617773759130" ID="ID_b9acdaad610b" MODIFIED="1617773759130" TEXT="稳定存储器使用一对完全相同的磁盘，对应的块一同工作以形成一个无差错的块。&amp;lt;br&amp;gt;当不存在错误时，在两个驱动器上对应的块是相同的，读取任意一个都可以得到相同的结果。"><node CREATED="1617773759130" ID="ID_4259195987f6" MODIFIED="1617773759130" TEXT="稳定写(stable write)"><node CREATED="1617773759130" ID="ID_3da3b4a7a36a" MODIFIED="1617773759130" TEXT="在稳定写开始时，用将要被稳定写的块的编号覆盖驱动器1上的一个固定的块，&amp;lt;br&amp;gt;然后读回该块以对其进行校验。在使得该块正确之后，对驱动器2上对应的块进行写和校验。&amp;lt;br&amp;gt;正确地完成时，用一个无效的块编号覆盖两个块并进行校验。"></node></node><node CREATED="1617773759130" ID="ID_d9acabb32828" MODIFIED="1617773759130" TEXT="稳定读(stable read)"></node><node CREATED="1617773759130" ID="ID_8323e4ba0894" MODIFIED="1617773759130" TEXT="崩溃恢复(crash recovery)"></node></node></node></node><node CREATED="1617773759130" ID="ID_aaddbc09af94" MODIFIED="1617773759130" TEXT="CD"><node CREATED="1617773759130" ID="ID_1bdaaf8b2f84" MODIFIED="1617773759130" TEXT="可复刻CD,&amp;nbsp; 写入后无法擦除"></node><node CREATED="1617773759130" ID="ID_c91ec37db76a" MODIFIED="1617773759130" TEXT="可重写CD(CD-RW(CD-ReWritable))"><node CREATED="1617773759130" ID="ID_a30b884c240c" MODIFIED="1617773759130" TEXT="银、铟、锑和碲合金作为记录层，以取代花菁和酞菁染料。&amp;lt;br&amp;gt;这一合金具有两个稳定的状态: 结晶态和非结晶态，&amp;lt;br&amp;gt;两种状态具有不同的反射率。"></node></node><node CREATED="1617773759130" ID="ID_f0c72fac9a33" MODIFIED="1617773759130" TEXT="DVD"><node CREATED="1617773759130" ID="ID_1e6bda5d08fd" MODIFIED="1617773759130" TEXT="更小的凹痕(0.4µm，CD是0.8µm)"></node><node CREATED="1617773759130" ID="ID_33d3f3ec23c7" MODIFIED="1617773759130" TEXT="更密的螺旋(轨迹间距0.74µm，CD是1.6µm)"></node><node CREATED="1617773759130" ID="ID_3bb082a4de93" MODIFIED="1617773759130" TEXT="红色激光(波长0.65µm，CD是0.78µm)"></node><node CREATED="1617773759130" ID="ID_21a3fcb2f2ca" MODIFIED="1617773759130" TEXT="大多数驱动器都有两种激光器，所以它们能够读取两种类型的介质(CD和DVD)"></node><node CREATED="1617773759130" ID="ID_574b36f35f90" MODIFIED="1617773759130" TEXT="单面单层"></node><node CREATED="1617773759130" ID="ID_66c0a3e30684" MODIFIED="1617773759130" TEXT="单面双层"><node CREATED="1617773759130" ID="ID_5bc199be2e1a" MODIFIED="1617773759130" TEXT="双层技术在底部具有一个反射层，在上面加上一个半反射层。&amp;lt;br&amp;gt;激光从一层还是从另一层反射回来取决于激光在何处汇聚。&amp;lt;br&amp;gt;下面一层需要稍微大一些的凹痕和槽脊，以便可靠地读出，&amp;lt;br&amp;gt;所以其容量比上面一层稍微小一些。"></node></node><node CREATED="1617773759130" ID="ID_626d62dc8673" MODIFIED="1617773759130" TEXT="双面单层"></node><node CREATED="1617773759130" ID="ID_3dce16e17dcf" MODIFIED="1617773759130" TEXT="双面双层"></node></node><node CREATED="1617773759130" ID="ID_cd38687992f3" MODIFIED="1617773759130" TEXT="Blu-ray(蓝光光盘)"><node CREATED="1617773759130" ID="ID_ef5afc6a9c8d" MODIFIED="1617773759130" TEXT="0.405(m(蓝色)激光"></node></node><node CREATED="1617773759130" ID="ID_f6e8b7dbb9a5" MODIFIED="1617773759130" TEXT="HD DVD"></node></node><node CREATED="1617773759130" ID="ID_af425eb8fb83" MODIFIED="1617773759130" TEXT="时钟(clock, timer)"><node CREATED="1617773759130" ID="ID_7c031d5266c6" MODIFIED="1617773759130" TEXT="时钟硬件"><node CREATED="1617773759130" ID="ID_793c24452be8" MODIFIED="1617773759130" TEXT="晶体振荡器"></node><node CREATED="1617773759130" ID="ID_58b5ff64d88e" MODIFIED="1617773759130" TEXT="计数器"></node><node CREATED="1617773759130" ID="ID_15f051bb1b6f" MODIFIED="1617773759130" TEXT="存储寄存器"></node><node CREATED="1617773759130" ID="ID_70cd44da7b28" MODIFIED="1617773759130" TEXT="时钟滴答(clock tick)"><node CREATED="1617773759130" ID="ID_f3db9b930099" MODIFIED="1617773759130" TEXT="在一次完成模式(one-shot mode)下&amp;lt;br&amp;gt;当时钟启动时，它把存储寄存器的值复制到计数器中，&amp;lt;br&amp;gt;然后，来自晶体的每一个脉冲使计数器减1。&amp;lt;br&amp;gt;当计数器变为0时，产生一个中断，并停止工作，直到软件&amp;lt;br&amp;gt;再一次显式地启动它。在方波模式(square-wave mode)下，&amp;lt;br&amp;gt;当计数器变为0并且产生中断之后，存储寄存器的值自动复制到计数器中，&amp;lt;br&amp;gt;并且整个过程无限期地再次重复下去。"></node><node CREATED="1617773759130" ID="ID_e4e6f8e0f2e1" MODIFIED="1617773759130" TEXT="电池时钟"></node></node></node><node CREATED="1617773759130" ID="ID_f39bc5ba031f" MODIFIED="1617773759130" TEXT="时钟软件"><node CREATED="1617773759130" ID="ID_da85cc66f813" MODIFIED="1617773759130" TEXT="维护日时间(实际时间(real time))"></node><node CREATED="1617773759130" ID="ID_48d9ddc33795" MODIFIED="1617773759130" TEXT="防止进程超时运行。"></node><node CREATED="1617773759130" ID="ID_7f96e06b1b66" MODIFIED="1617773759130" TEXT="对CPU的使用情况记账。"></node><node CREATED="1617773759130" ID="ID_fc655fe8c7f8" MODIFIED="1617773759130" TEXT="处理用户进程提出的alarm系统调用。"><node CREATED="1617773759130" ID="ID_ec8709169709" MODIFIED="1617773759130" TEXT="用一个物理时钟来模拟多个虚拟时钟"></node></node><node CREATED="1617773759130" ID="ID_58b9202c1353" MODIFIED="1617773759130" TEXT="为系统本身的各个部分提供监视定时器(watchdog timer)"><node CREATED="1617773759130" ID="ID_34ac185d4833" MODIFIED="1617773759130" TEXT="只有当时钟驱动程序与被调用的过程处于相同的地址空间时，&amp;lt;br&amp;gt;监视定时器机制才起作用。"></node></node><node CREATED="1617773759130" ID="ID_b3eab7400122" MODIFIED="1617773759130" TEXT="完成概要剖析(profiling)、监视和统计信息收集。"></node></node><node CREATED="1617773759130" ID="ID_b4ccd32466a3" MODIFIED="1617773759130" TEXT="软定时器"><node CREATED="1617773759130" ID="ID_5c45aaf1f9b8" MODIFIED="1617773759130" TEXT="中断"><node CREATED="1617773759130" ID="ID_9f215ec422f9" MODIFIED="1617773759130" TEXT="具有较低的等待时间"></node></node><node CREATED="1617773759130" ID="ID_80a4dc434bba" MODIFIED="1617773759130" TEXT="轮询"><node CREATED="1617773759131" ID="ID_440577a9ab51" MODIFIED="1617773759131" TEXT="让一个软定时器每隔2µs闹响一次是可行的，虽然这样&amp;lt;b&amp;gt;做偶尔会错过最终时限&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;所以在有些时候比较时间时使用大于等于而不是仅仅等于&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;"></node></node><node CREATED="1617773759131" ID="ID_08ed8d4882b1" MODIFIED="1617773759131" TEXT="软定时器和低频硬件定时器组合"></node></node></node><node CREATED="1617773759131" ID="ID_a051809c3927" MODIFIED="1617773759131" TEXT="键盘"><node CREATED="1617773759131" ID="ID_c55d3c653e58" MODIFIED="1617773759131" TEXT="I/O端口中的数字是键编号，称为扫描码(scan code)，而不是ASCII码。键盘所拥有的键不超过128个，所以只需7个位表示键编号。当键按下时，第8位设置为0，当键释放时，第8位设置为1。跟踪每个键的状态(按下或弹起)是驱动程序的任务。"></node><node CREATED="1617773759131" ID="ID_fc58d9881ffa" MODIFIED="1617773759131" TEXT="原始模式(raw mode)"></node><node CREATED="1617773759131" ID="ID_d4cbb320fe46" MODIFIED="1617773759131" TEXT="加工模式(cooked mode)"></node><node CREATED="1617773759131" ID="ID_a1e6da7a46c7" MODIFIED="1617773759131" TEXT="回显(echoing)"></node></node><node CREATED="1617773759131" ID="ID_65c8079b3280" MODIFIED="1617773759131" TEXT="鼠标"><node CREATED="1617773759131" ID="ID_230b878a4451" MODIFIED="1617773759131" TEXT="代光学鼠标在其中有图像处理芯片并且获取处于它们下方的连续的低分辨率照片，寻找从图像到图像的变化"></node><node CREATED="1617773759131" ID="ID_aea100b4c335" MODIFIED="1617773759131" TEXT="鼠标步(mickey)"></node><node CREATED="1617773759131" ID="ID_cfa1909ca1d4" MODIFIED="1617773759131" TEXT="发送到计算机的消息包含三个项目: ∆x、∆y、按钮"></node></node><node CREATED="1617773759131" ID="ID_f04698df83bb" MODIFIED="1617773759131" TEXT="电源"><node CREATED="1617773759131" ID="ID_8c1ca70a6322" MODIFIED="1617773759131" TEXT="计算机的某些部件(主要是I/O设备)不用的时候由操作系统关闭它们，因为关闭的设备使用的能量很少或者不使用能量"></node><node CREATED="1617773759131" ID="ID_aab913a11e33" MODIFIED="1617773759131" TEXT="应用程序使用较少的能量，这样为了延长电池时间可能会降低用户体验的质量"></node><node CREATED="1617773759131" ID="ID_d55ab0a6ba13" MODIFIED="1617773759131" TEXT="驱动程序接口(ACPI(Advanced Configuration and Power Interface，高级配置与电源接口))"><node CREATED="1617773759131" ID="ID_acda11c181be" MODIFIED="1617773759131" TEXT="操作系统可以向任何符合标准的驱动程序发出命令，&amp;lt;br&amp;gt;要求它报告其设备的性能以及它们当前的状态"></node></node></node></node><node CREATED="1617773759131" ID="ID_0402938ebc08" POSITION="right" MODIFIED="1617773759131" TEXT="死锁"><arrowlink DESTINATION="ID_f4835a6ffaa4" ENDARROW="Default" ID="Arrow_ID_2be4ba451a27" STARTARROW="None"/><node CREATED="1617773759131" ID="ID_25ebccc0b75d" MODIFIED="1617773759131" TEXT="资源(resource)"><node CREATED="1617773759131" ID="ID_7fbdbc3fac85" MODIFIED="1617773759131" TEXT="可抢占资源(preemptable resource)"><node CREATED="1617773759131" ID="ID_9acc176a4604" MODIFIED="1617773759131" TEXT="可以从拥有它的进程中抢占而不会产生任何副作用"></node></node><node CREATED="1617773759131" ID="ID_f4835a6ffaa4" MODIFIED="1617773759131" TEXT="不可抢占资源(nonpreemptable resource)"><linktarget COLOR="#b0b0b0" DESTINATION="ID_f4835a6ffaa4" ENDARROW="Default" ID="Arrow_ID_2be4ba451a27" SOURCE="ID_0402938ebc08" STARTARROW="None"/><node CREATED="1617773759131" ID="ID_1c1a67510f82" MODIFIED="1617773759131" TEXT="指在不引起相关的计算失败的情况下，无法把它从占有它的进程处抢占过来"></node></node></node><node CREATED="1617773759131" ID="ID_a3856dd0002c" MODIFIED="1617773759131" TEXT="&amp;lt;br&amp;gt;"><node CREATED="1617773759131" ID="ID_c4df53522460" MODIFIED="1617773759131" TEXT="请求资源&amp;lt;br&amp;gt;使用资源&amp;lt;br&amp;gt;释放资源"><node CREATED="1617773759131" ID="ID_3a4e8e070758" MODIFIED="1617773759131" TEXT="请求资源，休眠，再请求"></node></node></node><node CREATED="1617773759131" ID="ID_8151a7f53dac" MODIFIED="1617773759131" TEXT="如果一个进程集合中的每个进程都在等待只能由该进程集合中的其他进程才能引发的事件，&amp;lt;br&amp;gt;那么，该进程集合就是死锁的。(想到了相关部门)"></node><node CREATED="1617773759131" ID="ID_e85d1ac9bb59" MODIFIED="1617773759131" TEXT="资源死锁的条件(同时满足)"><node CREATED="1617773759131" ID="ID_b548286acdad" MODIFIED="1617773759131" TEXT="互斥条件"></node><node CREATED="1617773759131" ID="ID_bc0d1921d837" MODIFIED="1617773759131" TEXT="占有和等待条件"></node><node CREATED="1617773759131" ID="ID_a5bca822be0a" MODIFIED="1617773759131" TEXT="不可抢占条件"></node><node CREATED="1617773759131" ID="ID_d12fa4b38834" MODIFIED="1617773759131" TEXT="环路等待条件"></node></node><node CREATED="1617773759131" ID="ID_d2ce0cbae8dd" MODIFIED="1617773759131" TEXT="处理死锁"><node CREATED="1617773759131" ID="ID_cb7b93d3b98c" MODIFIED="1617773759131" TEXT="忽略该问题。也许如果你忽略它，它也会忽略你。(鸵鸟算法)&amp;lt;br&amp;gt;检测死锁并恢复。让死锁发生，检测它们是否发生，一旦发生死锁，采取行动解决问题。&amp;lt;br&amp;gt;仔细对资源进行分配，动态地避免死锁。&amp;lt;br&amp;gt;通过破坏引起死锁的四个必要条件之一，防止死锁的产生。"><node CREATED="1617773759131" ID="ID_d90615b2a72c" MODIFIED="1617773759131" TEXT="从死锁中恢复"><node CREATED="1617773759131" ID="ID_d7f4751da63e" MODIFIED="1617773759131" TEXT="利用抢占恢复"></node><node CREATED="1617773759131" ID="ID_4854e976b129" MODIFIED="1617773759131" TEXT="利用回滚恢复"></node><node CREATED="1617773759131" ID="ID_ac214e7604f4" MODIFIED="1617773759131" TEXT="通过杀死进程恢复"></node></node></node></node><node CREATED="1617773759131" ID="ID_c641adbfc170" MODIFIED="1617773759131" TEXT="死锁避免"><node CREATED="1617773759131" ID="ID_cddd82dfac25" MODIFIED="1617773759131" TEXT="资源轨迹图"></node><node CREATED="1617773759131" ID="ID_350c74dd44f2" MODIFIED="1617773759131" TEXT="安全状态和不安全状态"><node CREATED="1617773759131" ID="ID_188159087420" MODIFIED="1617773759131" TEXT="从安全状态出发，系统能够保证所有进程都能完成；而从不安全状态出发，就没有这样的保证&amp;lt;br&amp;gt;安全状态: 剩余资源能够满足任一进程的需要, 这样就不会缺少资源而死锁( 零和博弈 )&amp;lt;br&amp;gt;"><linktarget COLOR="#b0b0b0" DESTINATION="ID_188159087420" ENDARROW="Default" ID="Arrow_ID_29bf5adf87bb" SOURCE="ID_b09bc47e2fc4" STARTARROW="None"/></node></node><node CREATED="1617773759131" ID="ID_0189dfa153a6" MODIFIED="1617773759131" TEXT="银行家算法(banker&amp;apos;s algorithm)"><node CREATED="1617773759131" ID="ID_e8933230afcb" MODIFIED="1617773759131" TEXT="判断对请求的满足是否会导致进入不安全状态。&amp;lt;br&amp;gt;如果是，就拒绝请求；如果满足请求后系统仍然是安全的，就予以分配"></node><node CREATED="1617773759131" ID="ID_bfc9c948f21a" MODIFIED="1617773759131" TEXT="多个资源的银行家算法"></node></node></node><node CREATED="1617773759131" ID="ID_0c22cd6496ae" MODIFIED="1617773759131" TEXT="死锁预防"><node CREATED="1617773759131" ID="ID_fe1512b0c19d" MODIFIED="1617773759131" TEXT="破坏互斥条件"><node CREATED="1617773759131" ID="ID_5b1e1562e979" MODIFIED="1617773759131" TEXT="(spooling printer)(类似队列)"></node></node><node CREATED="1617773759131" ID="ID_01a61297b0e7" MODIFIED="1617773759131" TEXT="破坏占有和等待条件"><node CREATED="1617773759131" ID="ID_001d5d08c5a4" MODIFIED="1617773759131" TEXT="规定所有进程在开始执行前请求所需的全部资源。&amp;lt;br&amp;gt;如果所需的全部资源可用，那么就将它们分配给这个进程，&amp;lt;br&amp;gt;于是该进程肯定能够运行结束。&amp;lt;br&amp;gt;如果有一个或多个资源正被使用，那么就不进行分配，进程等待。"></node><node CREATED="1617773759131" ID="ID_b09bc47e2fc4" MODIFIED="1617773759131" TEXT="当一个进程请求资源时, 先暂时释放其当前占用的所有资源，&amp;lt;br&amp;gt;然后再尝试一次获得所需的全部资源。"><arrowlink DESTINATION="ID_188159087420" ENDARROW="Default" ID="Arrow_ID_29bf5adf87bb" STARTARROW="None"/></node></node><node CREATED="1617773759131" ID="ID_b8f208c67358" MODIFIED="1617773759131" TEXT="破坏不可抢占条件"><node CREATED="1617773759131" ID="ID_efd5e771ed6b" MODIFIED="1617773759131" TEXT="虚拟化资源"></node></node><node CREATED="1617773759131" ID="ID_3889d90efe84" MODIFIED="1617773759131" TEXT="破坏环路等待条件"><node CREATED="1617773759131" ID="ID_cfde44c65eda" MODIFIED="1617773759131" TEXT="将所有资源统一编号(理想状态)&amp;lt;br&amp;gt;进程可以在任何时刻提出资源请求，但是所有请求必须按照资源编号的顺序(升序)提出"><node CREATED="1617773759131" ID="ID_803d7dbc04de" MODIFIED="1617773759131" TEXT="仅仅要求不允许进程请求比当前所占有资源编号低的资源"></node></node></node></node><node CREATED="1617773759131" ID="ID_b025c45e7ef9" MODIFIED="1617773759131" TEXT="两阶段加锁"></node><node CREATED="1617773759131" ID="ID_c7249553e8b8" MODIFIED="1617773759131" TEXT="通信死锁(communication deadlock)"><node CREATED="1617773759131" ID="ID_e1bdfc613e5c" MODIFIED="1617773759131" TEXT="协议(protocol)超时"></node></node><node CREATED="1617773759131" ID="ID_5781e896b224" MODIFIED="1617773759131" TEXT="活锁"><node CREATED="1617773759131" ID="ID_7222a50e0a70" MODIFIED="1617773759131" TEXT="忙等待可能导致活锁&amp;lt;br&amp;gt;CPU 在占用, 但是拿不到资源&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759131" ID="ID_6fbfd4086c0d" MODIFIED="1617773759131" TEXT="饥饿"></node></node><node CREATED="1617773759131" ID="ID_f9058ff85a8c" POSITION="right" MODIFIED="1617773759131" TEXT="多处理机，multiprocessor&amp;lt;br&amp;gt;"><node CREATED="1617773759131" ID="ID_074469c13d53" MODIFIED="1617773759131" TEXT="两个或更多的CPU全部共享访问一个公用的RAM&amp;lt;br&amp;gt;进程可以向存储器写消息，&amp;lt;br&amp;gt;然后被其他进程读取。可以使用互斥信号量、信号量、&amp;lt;br&amp;gt;管程(monitor)和其他适合的技术实现同步。"></node><node CREATED="1617773759131" ID="ID_b69ff82f0ba1" MODIFIED="1617773759131" TEXT="多处理机硬件"><node CREATED="1617773759131" ID="ID_fe595dc71625" MODIFIED="1617773759131" TEXT="UMA(Uniform Memory Access，统一存储器访问)多处理机"><node CREATED="1617773759131" ID="ID_0e68fed50a27" MODIFIED="1617773759131" TEXT="基于总线的UMA多处理机体系结构"><node CREATED="1617773759131" ID="ID_7ab58f434bb5" MODIFIED="1617773759131" TEXT="完全受到总线带宽的限制"></node><node CREATED="1617773759131" ID="ID_005897307963" MODIFIED="1617773759131" TEXT="有高速缓存"></node><node CREATED="1617773759131" ID="ID_615542c555d6" MODIFIED="1617773759131" TEXT="私有存储器"></node></node><node CREATED="1617773759131" ID="ID_b8a758fbc80e" MODIFIED="1617773759131" TEXT="使用交叉开关的UMA多处理机"><node CREATED="1617773759131" ID="ID_93e97115b364" MODIFIED="1617773759131" TEXT="当两个CPU同时试图访问同一个模块的时候，对内存的争夺还是可能的"></node></node><node CREATED="1617773759131" ID="ID_54ef57cf2ca1" MODIFIED="1617773759131" TEXT="使用多级交换的UMA多处理机"><node CREATED="1617773759131" ID="ID_ab799ebbada0" MODIFIED="1617773759131" TEXT="全混洗(perfect shuffle)"></node></node></node><node CREATED="1617773759131" ID="ID_8bf7be825e16" MODIFIED="1617773759131" TEXT="NUMA(Nonuniform Memory Access，非一致存储器访问)"><node CREATED="1617773759131" ID="ID_378883b72959" MODIFIED="1617773759131" TEXT="具有对所有CPU都可见的单个地址空间。"></node><node CREATED="1617773759131" ID="ID_82b096497a74" MODIFIED="1617773759131" TEXT="通过LOAD和STORE指令访问远程存储器。"></node><node CREATED="1617773759131" ID="ID_f89a67c200f2" MODIFIED="1617773759131" TEXT="访问远程存储器慢于访问本地存储器。"></node><node CREATED="1617773759131" ID="ID_99be0dd7a599" MODIFIED="1617773759131" TEXT="NC-NUMA(No Cache NUMA，无高速缓存NUMA)"></node><node CREATED="1617773759131" ID="ID_64376cba2bc4" MODIFIED="1617773759131" TEXT="CC-NUMA(Cache-Coherent NUMA，高速缓存一致NUMA)"></node></node><node CREATED="1617773759131" ID="ID_22282d6b1ff2" MODIFIED="1617773759131" TEXT="多核芯片(片级多处理机(Chip-level MultiProcessors，CMP))"></node></node><node CREATED="1617773759131" ID="ID_e0665b8bc714" MODIFIED="1617773759131" TEXT="多处理机操作系统类型"><node CREATED="1617773759131" ID="ID_701aa3ab17e7" MODIFIED="1617773759131" TEXT="每个CPU有自己的操作系统"></node><node CREATED="1617773759131" ID="ID_806db68588e5" MODIFIED="1617773759131" TEXT="主从多处理机"><node CREATED="1617773759131" ID="ID_3ed20eb310ff" MODIFIED="1617773759131" TEXT="主CPU处理来自所有CPU的系统调用"></node></node><node CREATED="1617773759131" ID="ID_d525136ad287" MODIFIED="1617773759131" TEXT="对称多处理机"></node></node><node CREATED="1617773759131" ID="ID_2fef8f6c7d6b" MODIFIED="1617773759131" TEXT="多处理机同步"><node CREATED="1617773759131" ID="ID_e3f90281dfee" MODIFIED="1617773759131" TEXT="TSL(Test and Set Lock)"></node><node CREATED="1617773759131" ID="ID_d9b6086a2d9c" MODIFIED="1617773759131" TEXT="指数补偿算法(binary exponential backoff algorithm)"></node><node CREATED="1617773759131" ID="ID_1b9ab5a4211b" MODIFIED="1617773759131" TEXT="让每个打算获得互斥信号量的CPU都拥有各自用于测试的私有锁变量"></node><node CREATED="1617773759131" ID="ID_b7ecc3155375" MODIFIED="1617773759131" TEXT="自旋与切换"><node CREATED="1617773759131" ID="ID_46a4af319750" MODIFIED="1617773759131" TEXT="一个未能获得互斥信号量的线程自旋一段时间。&amp;lt;br&amp;gt;如果时间超过某个阈值，则进行切换。在某些情形下，&amp;lt;br&amp;gt;该阈值是一个定值，典型值是切换至另一个线程再切换回来的开销。&amp;lt;br&amp;gt;在另一些情形下，该阈值是动态变化的，它取决于所观察到的等待互斥信号量的历史信息。"></node></node></node><node CREATED="1617773759131" ID="ID_01ba51e9446e" MODIFIED="1617773759131" TEXT="多处理机调度"><node CREATED="1617773759131" ID="ID_4abfc9df15c3" MODIFIED="1617773759131" TEXT="分时"><node CREATED="1617773759131" ID="ID_144ce8db6c44" MODIFIED="1617773759131" TEXT="智能调度(smart scheduling)"></node><node CREATED="1617773759131" ID="ID_0cdd79d4e512" MODIFIED="1617773759131" TEXT="亲和调度(affinity scheduling)"><node CREATED="1617773759131" ID="ID_7d307d00a80e" MODIFIED="1617773759131" TEXT="两级调度算法(two-level scheduling algorithm"></node></node></node><node CREATED="1617773759131" ID="ID_a9c1f969609a" MODIFIED="1617773759131" TEXT="空间共享"></node><node CREATED="1617773759131" ID="ID_fa86e3b4dbc0" MODIFIED="1617773759131" TEXT="群调度(Gang Scheduling)&amp;lt;br&amp;gt;协同调度(co-scheduling)的发展产物"><node CREATED="1617773759131" ID="ID_d51eca07f50e" MODIFIED="1617773759131" TEXT="把一组相关线程作为一个单位，即一个群(gang)，一起调度&amp;lt;br&amp;gt;一个群中的所有成员在不同的分时CPU上同时运行。&amp;lt;br&amp;gt;群中的所有成员共同开始和结束其时间片。&amp;lt;br&amp;gt;让一个进程的所有线程一起运行，这样，&amp;lt;br&amp;gt;如果其中一个线程向另一个线程发送请求，&amp;lt;br&amp;gt;接受方几乎会立即得到消息，并且几乎能够立即应答"></node></node></node><node CREATED="1617773759131" ID="ID_10074d57a79b" MODIFIED="1617773759131" TEXT="多计算机multicomputers (cluster computers),&amp;lt;br&amp;gt;工作站机群(Clusters of Workstations，COWS)&amp;lt;br&amp;gt;多计算机是紧耦合CPU，不共享存储器"><node CREATED="1617773759131" ID="ID_d1a5cc0426c4" MODIFIED="1617773759131" TEXT="多计算机硬件"><node CREATED="1617773759131" ID="ID_18198cbe56c7" MODIFIED="1617773759131" TEXT="互连技术&amp;lt;br&amp;gt;a)单交换机；b)环；c)网格；d)双凸面；e)立方体；f)四维超立方体"><node CREATED="1617773759131" ID="ID_98b290de1b29" MODIFIED="1617773759131" TEXT="网络连接"></node><node CREATED="1617773759131" ID="ID_7992cfe45dcf" MODIFIED="1617773759131" TEXT="超立方体(hypercube)"></node><node CREATED="1617773759131" ID="ID_d70aa348fe03" MODIFIED="1617773759131" TEXT="电路交换"><node CREATED="1617773759131" ID="ID_e2704bc7571d" MODIFIED="1617773759131" TEXT="虫孔路由(wormhole routing)"></node></node></node></node></node><node CREATED="1617773759131" ID="ID_862d71f41ee5" MODIFIED="1617773759131" TEXT="虚拟化"><node CREATED="1617773759131" ID="ID_67c03cfb026a" MODIFIED="1617773759131" TEXT="I型管理程序"><node CREATED="1617773759131" ID="ID_9d09585c31a0" MODIFIED="1617773759131" TEXT="敏感指令(sensitive instruction)"></node><node CREATED="1617773759131" ID="ID_9c5374afe13e" MODIFIED="1617773759131" TEXT="特权指令(privileged instruction)"></node></node><node CREATED="1617773759131" ID="ID_a67d316cf413" MODIFIED="1617773759131" TEXT="II型管理程序"><node CREATED="1617773759131" ID="ID_ed861a32578b" MODIFIED="1617773759131" TEXT="二进制翻译(binary translation)"></node></node><node CREATED="1617773759131" ID="ID_5aaed7b55c73" MODIFIED="1617773759131" TEXT="准虚拟化(paravirtualized)"><node CREATED="1617773759131" ID="ID_39db1483a1e7" MODIFIED="1617773759131" TEXT="VMI(虚拟机接口)"></node></node></node><node CREATED="1617773759131" ID="ID_13a76cfa427f" MODIFIED="1617773759131" TEXT="分布式系统"><node CREATED="1617773759131" ID="ID_e6a9842bcbf7" MODIFIED="1617773759131" TEXT="网络硬件"></node><node CREATED="1617773759131" ID="ID_52f2393646c5" MODIFIED="1617773759131" TEXT="网络服务和协议"></node><node CREATED="1617773759131" ID="ID_58366ccc7e21" MODIFIED="1617773759131" TEXT="基于文档的中间件"><node CREATED="1617773759131" ID="ID_77fa532e2eba" MODIFIED="1617773759131" TEXT="URL(统一资源定位符，Uniform Resource Locator)&amp;lt;br&amp;gt;统一资源标识符(Uniform Resource Identifier，URI)"></node></node><node CREATED="1617773759131" ID="ID_e06f5cedc018" MODIFIED="1617773759131" TEXT="基于对象的中间件"><node CREATED="1617773759131" ID="ID_02cdcceca911" MODIFIED="1617773759131" TEXT="IDL(接口定义语言，Interface Definition Language)"></node></node><node CREATED="1617773759131" ID="ID_108805b0ce98" MODIFIED="1617773759131" TEXT="基于协作的中间件(coordination-based middleware)"><node CREATED="1617773759131" ID="ID_a5b752941c9a" MODIFIED="1617773759131" TEXT="发布/订阅(Pubilsh/Subscribe)"></node></node><node CREATED="1617773759131" ID="ID_0e99dce0ad9a" MODIFIED="1617773759131" TEXT="Jini"></node><node CREATED="1617773759131" ID="ID_3df02bd473dd" MODIFIED="1617773759131" TEXT="网格(grid)"></node></node></node><node CREATED="1617773759131" ID="ID_55d2c105978b" POSITION="right" MODIFIED="1617773759131" TEXT="操作系统概念"><node CREATED="1617773759131" ID="ID_dc7073722d10" MODIFIED="1617773759131" TEXT="进程(process)"><node CREATED="1617773759131" ID="ID_80c551a95158" MODIFIED="1617773759131" TEXT="进程模型"><node CREATED="1617773759131" ID="ID_1fd39b558463" MODIFIED="1617773759131" TEXT="计算机上所有可运行的软件，通常也包括操作系统，被组织成若干顺序进程(sequential process)，简称进程(process)。&amp;lt;br&amp;gt;一个进程就是一个正在执行程序的实例，包括程序计数器、寄存器和变量的当前值。&amp;lt;br&amp;gt;从概念上说，每个进程拥有它自己的虚拟CPU。当然，实际上真正的CPU在各进程之间来回切换(多道程序设计).。"><node CREATED="1617773759131" ID="ID_3d47fc7788f7" MODIFIED="1617773759131" TEXT="操作系统周期性地挂起一个进程然后启动运行另一个进程"></node></node></node><node CREATED="1617773759131" ID="ID_b6ed9fbfff52" MODIFIED="1617773759131" TEXT="进程表"><node CREATED="1617773759131" ID="ID_b0c37e6e80b4" MODIFIED="1617773759131" TEXT="在许多操作系统中，与一个进程有关的所有信息，除了该进程自身地址空间的内容以外，均存放在操作系统的一张表中，称为进程表(process table)，进程表是数组(或链表)结构，当前存在的每个进程都要占用其中一项"></node></node><node CREATED="1617773759131" ID="ID_08971b0d128c" MODIFIED="1617773759131" TEXT="一个(挂起的)进程"><node CREATED="1617773759131" ID="ID_b40a14179592" MODIFIED="1617773759131" TEXT="进程的地址空间，以及对应的进程表项，其中包括寄存器以及稍后重启动该进程所需要的许多其他信息。"></node></node><node CREATED="1617773759131" ID="ID_92c7c294112a" MODIFIED="1617773759131" TEXT="进程树"><node CREATED="1617773759131" ID="ID_06faa1ed6892" MODIFIED="1617773759131" TEXT="若一个进程能够创建一个或多个进程(称为子进程)，而且这些进程又可以创建子进程"></node><node CREATED="1617773759131" ID="ID_f9f41db16039" MODIFIED="1617773759131" TEXT="系统管理器授权每个进程使用一个给定的UID标识(User IDentification)。每个被启动的进程都有一个启动该进程的用户UID。子进程拥有与父进程一样的UID。用户可以是某个组的成员，每个组也有一个GID标识(Group IDentification)。"></node><node CREATED="1617773759131" ID="ID_20bca7373e3f" MODIFIED="1617773759131" TEXT="在UNIX中，有一个UID称为超级用户(superuser)，具有特殊的权利，可以违背一些保护规则。"></node><node CREATED="1617773759131" ID="ID_8149066cef58" MODIFIED="1617773759131" TEXT="只有父进程能控制和访问子进程"></node><node CREATED="1617773759131" ID="ID_554a12bf1ac0" MODIFIED="1617773759131" TEXT="某些系统中，当进程创建了另一个进程后，父进程和子进程就以某种形式继续保持关联。子进程自身可以创建更多的进程，组成一个进程的层次结构"></node><node CREATED="1617773759131" ID="ID_a8d73988d329" MODIFIED="1617773759131" TEXT="进程的层次结构"><node CREATED="1617773759131" ID="ID_ca1cd4ba2765" MODIFIED="1617773759131" TEXT="在UNIX中，进程和它的所有子女以及后裔共同组成一个进程组"><node CREATED="1617773759131" ID="ID_59a9220dbd77" MODIFIED="1617773759131" TEXT="当用户从键盘发出一个信号时，该信号被送给当前与键盘相关的进程组中的所有成员(它们通常是在当前窗口创建的所有活动进程)。&amp;lt;br&amp;gt;每个进程可以分别捕获该信号、忽略该信号或采取默认的动作，即被该信号杀死。"></node><node CREATED="1617773759131" ID="ID_389019ddd7df" MODIFIED="1617773759131" TEXT="一个称为init的特殊进程出现在启动映像中。当它开始运行时，读入一个说明终端数量的文件。&amp;lt;br&amp;gt;接着，为每个终端创建一个新进程。这些进程等待用户登录。如果有一个用户登录成功，该登录进程就执行一个shell准备接收命令。&amp;lt;br&amp;gt;所接收的这些命令会启动更多的进程，以此类推。这样，在整个系统中，所有的进程都属于以init为根的一棵树。&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759131" ID="ID_9724e6ee5afd" MODIFIED="1617773759131" TEXT="Windows中没有进程层次的概念，所有的进程都是地位相同的。惟一类似于进程层次的暗示是在创建进程的时侯，父进程得到一个特别的令牌(称为句柄)，该句柄可以用来控制子进程。但是，它有权把这个令牌传送给某个其他进程，这样就不存在进程层次了。"></node></node></node><node CREATED="1617773759131" ID="ID_1e36e4b4b2a6" MODIFIED="1617773759131" TEXT="其他可用的进程系统调用包括: 申请更多的内存(或释放不再需要的内存)、等待一个子进程结束、用另一个程序覆盖该程序等。"></node><node CREATED="1617773759131" ID="ID_91f3b19bf4d2" MODIFIED="1617773759131" TEXT="每个进程有一个地址空间和一个控制线程。"></node><node CREATED="1617773759131" ID="ID_23ca22c26873" MODIFIED="1617773759131" TEXT="进程的状态"><node CREATED="1617773759131" ID="ID_93990d8bb1ab" MODIFIED="1617773759131" TEXT="运行态"></node><node CREATED="1617773759131" ID="ID_dcb759d8e2f3" MODIFIED="1617773759131" TEXT="就绪态&amp;lt;br&amp;gt;可运行，但因为其他进程正在运行而暂时停止&amp;lt;br&amp;gt;"></node><node CREATED="1617773759131" ID="ID_aa0d9a183e69" MODIFIED="1617773759131" TEXT="阻塞态&amp;lt;br&amp;gt;除非某种外部事件发生，否则进程不能运行&amp;lt;br&amp;gt;处于该状态的进程不能运行，即使CPU空闲也不行&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759131" ID="ID_001f1bbe2330" MODIFIED="1617773759131" TEXT="线程"><node CREATED="1617773759131" ID="ID_dcfdc0fa48b5" MODIFIED="1617773759131" TEXT="优点&amp;lt;br&amp;gt;"><node CREATED="1617773759131" ID="ID_f3b317ff504e" MODIFIED="1617773759131" TEXT="共享地址空间除外&amp;lt;br&amp;gt;并行实体共享同一个地址空间和所有可用数据的能力&amp;lt;br&amp;gt;"></node><node CREATED="1617773759131" ID="ID_4b5165a7072a" MODIFIED="1617773759131" TEXT="线程比进程更轻量级"></node><node CREATED="1617773759131" ID="ID_27b2be5d4aa6" MODIFIED="1617773759131" TEXT="若多个线程都是CPU密集型的，那么并不能获得性能上的增强，但是如果存在着大量的计算和大量的I/O处理，拥有多个线程允许这些活动彼此重叠进行，从而会加快应用程序执行的速度。"></node></node><node CREATED="1617773759131" ID="ID_e2fd0e32168b" MODIFIED="1617773759131" TEXT="模型只有当系统调用只阻塞调用线程而不是阻塞整个进程时，才能正常工作。"></node><node CREATED="1617773759132" ID="ID_5f16cc96b552" MODIFIED="1617773759132" TEXT="进程用于把资源集中到一起，而线程则是在CPU上被调度执行的实体。"></node><node CREATED="1617773759132" ID="ID_9cb843529743" MODIFIED="1617773759132" TEXT="在线程中有一个程序计数器，用来记录接着要执行哪一条指令。线程拥有寄存器，用来保存线程当前的工作变量。线程还拥有一个堆栈，用来记录执行历史，其中每一帧保存了一个已调用的但是还没有从中返回的过程。"></node><node CREATED="1617773759132" ID="ID_56d2aa466f81" MODIFIED="1617773759132" TEXT="由于各个线程都可以访问进程地址空间中的每一个内存地址，所以一个线程可以读、写或甚至清除另一个线程的堆栈。线程之间是没有保护的"></node><node CREATED="1617773759132" ID="ID_19f3763af64e" MODIFIED="1617773759132" TEXT="每个线程有其自己的堆栈"></node><node CREATED="1617773759132" ID="ID_5e6c85ab4cde" MODIFIED="1617773759132" TEXT="实现线程包"><node CREATED="1617773759132" ID="ID_f3360b785429" MODIFIED="1617773759132" TEXT="用户空间"><node CREATED="1617773759132" ID="ID_832609f10ad3" MODIFIED="1617773759132" TEXT="把整个线程包放在用户空间中，内核对线程包一无所知"><node CREATED="1617773759132" ID="ID_888f7037f855" MODIFIED="1617773759132" TEXT="允许每个进程有自己定制的调度算法"></node><node CREATED="1617773759132" ID="ID_274c6cb00bbc" MODIFIED="1617773759132" TEXT="有更好的性能"><node CREATED="1617773759132" ID="ID_424397b6e7a8" MODIFIED="1617773759132" TEXT="减少了内核-用户转换的开销"></node></node></node><node CREATED="1617773759132" ID="ID_dfb6ad48ae97" MODIFIED="1617773759132" TEXT="在用户空间管理线程时，每个进程需要有其专用的线程表(thread table)，用来跟踪该进程中的线程。"></node></node><node CREATED="1617773759132" ID="ID_fdc1845ff525" MODIFIED="1617773759132" TEXT="内核"><node CREATED="1617773759132" ID="ID_b7cfa7dc3133" MODIFIED="1617773759132" TEXT="内核的线程表保存了每个线程的寄存器、状态和其他信息。这些信息和在用户空间中(在运行时系统中)的线程是一样的，但是现在保存在内核中。这些信息是传统内核所维护的每个单线程进程信息(即进程状态)的子集。另外，内核还维护了传统的进程表，以便跟踪进程的状态。"></node></node><node CREATED="1617773759132" ID="ID_47fbec89aa0e" MODIFIED="1617773759132" TEXT="混合实现"></node><node CREATED="1617773759132" ID="ID_5ad96fa79eb8" MODIFIED="1617773759132" TEXT="调度程序激活机制"><node CREATED="1617773759132" ID="ID_bb28ca5ad2cd" MODIFIED="1617773759132" TEXT="上行调用(upcall)"></node></node></node><node CREATED="1617773759132" ID="ID_b578516a2235" MODIFIED="1617773759132" TEXT="弹出式线程"><node CREATED="1617773759132" ID="ID_3c4e2ca85345" MODIFIED="1617773759132" TEXT="一个消息的到达导致系统创建一个处理该消息的线程，这种线程称为弹出式线程"></node></node><node CREATED="1617773759132" ID="ID_68480c24d0de" MODIFIED="1617773759132" TEXT="线程调度"><node CREATED="1617773759132" ID="ID_06b69ed7644d" MODIFIED="1617773759132" TEXT="应用定制的线程调度程序能够比内核更好地满足应用的需要"></node><node CREATED="1617773759132" ID="ID_d4b9faf6c69a" MODIFIED="1617773759132" TEXT="用户级线程的线程切换需要少量的机器指令，而内核级线程需要完整的上下文切换，修改内存映像，使高速缓存失效"></node></node></node><node CREATED="1617773759132" ID="ID_783bda8ad8f0" MODIFIED="1617773759132" TEXT="进程拥有一个执行的线程，通常简写为线程(thread)"></node><node CREATED="1617773759132" ID="ID_1d7be2e4db5b" MODIFIED="1617773759132" TEXT="线程给进程模型增加了一项内容，即在同一个进程环境中，允许彼此之间有较大独立性的多个线程执行。在同一个进程中并行运行多个线程，是对在同一台计算机上并行运行多个进程的模拟。在前一种情形下，多个线程共享同一个地址空间和其他资源。而在后一种情形中，多个进程共享物理内存、磁盘、打印机和其他资源。由于线程具有进程的某些性质，所以有时被称为轻量级进程(lightweight process)。"></node><node CREATED="1617773759132" ID="ID_63136d383f59" MODIFIED="1617773759132" TEXT="与每个进程相关的是进程的地址空间(address space)，这是从某个最小值的存储位置(通常是零)&amp;lt;br&amp;gt;到某个最大值存储位置的列表。在这个地址空间中，进程可以进行读写。&amp;lt;br&amp;gt;该地址空间中存放有可执行程序、程序的数据以及程序的堆栈。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;"></node><node CREATED="1617773759132" ID="ID_3c151988ce03" MODIFIED="1617773759132" TEXT="资源集"><node CREATED="1617773759132" ID="ID_38683eff187e" MODIFIED="1617773759132" TEXT="寄存器(含有程序计数器和堆栈指针)"></node><node CREATED="1617773759132" ID="ID_c6b6e15db212" MODIFIED="1617773759132" TEXT="打开文件的清单"></node><node CREATED="1617773759132" ID="ID_8e075984b9fe" MODIFIED="1617773759132" TEXT="突出的报警"></node><node CREATED="1617773759132" ID="ID_ccb959819a26" MODIFIED="1617773759132" TEXT="有关进程清单"></node><node CREATED="1617773759132" ID="ID_03b0d597fe30" MODIFIED="1617773759132" TEXT="以及运行该程序所需要的所有其他信息"></node><node CREATED="1617773759132" ID="ID_f24bce7e508b" MODIFIED="1617773759132" TEXT="进程基本上是容纳运行一个程序所需要所有信息的容器"></node></node><node CREATED="1617773759132" ID="ID_3cd8deff9f18" MODIFIED="1617773759132" TEXT="进程间通信(interprocess communication)"><node CREATED="1617773759132" ID="ID_5a4b4306b08a" MODIFIED="1617773759132" TEXT="竞争条件"></node><node CREATED="1617773759132" ID="ID_0a196fe88d5a" MODIFIED="1617773759132" TEXT="临界区critical region"><node CREATED="1617773759132" ID="ID_b11c8904c2bc" MODIFIED="1617773759132" TEXT="对共享内存进行访问的程序片段称作临界区或临界区(critical section)&amp;lt;br&amp;gt;使得两个进程不可能同时处于临界区中"></node><node CREATED="1617773759132" ID="ID_4766fa345143" MODIFIED="1617773759132" TEXT="条件"><node CREATED="1617773759132" ID="ID_63a14dae64bd" MODIFIED="1617773759132" TEXT="任何两个进程不能同时处于其临界区"></node><node CREATED="1617773759132" ID="ID_0eab6badba01" MODIFIED="1617773759132" TEXT="不应对CPU的速度和数量做任何假设。"></node><node CREATED="1617773759132" ID="ID_8e27d5381b23" MODIFIED="1617773759132" TEXT="临界区外运行的进程不得阻塞其他进程"></node><node CREATED="1617773759132" ID="ID_3c4550e06b42" MODIFIED="1617773759132" TEXT="不得使进程无限期等待进入临界区"></node></node></node><node CREATED="1617773759132" ID="ID_e34db36b29c9" MODIFIED="1617773759132" TEXT="忙等待的互斥"><node CREATED="1617773759132" ID="ID_95c4e7b4d6a2" MODIFIED="1617773759132" TEXT="屏蔽中断"><node CREATED="1617773759132" ID="ID_4a007450a093" MODIFIED="1617773759132" TEXT="在单处理器系统中，最简单的方法是使每个进程在刚刚进入临界区后立即屏蔽所有中断，并在就要离开之前再打开中断。屏蔽中断后，时钟中断也被屏蔽。CPU只有发生时钟中断或其他中断时才会进行进程切换，这样，在屏蔽中断之后CPU将不会被切换到其他进程。于是，一旦某个进程屏蔽中断之后，它就可以检查和修改共享内存，而不必担心其他进程介入。"><node CREATED="1617773759132" ID="ID_5a5bea06c1ea" MODIFIED="1617773759132" TEXT="屏蔽中断对于操作系统本身而言是一项很有用的技术"></node><node CREATED="1617773759132" ID="ID_e328c0687e38" MODIFIED="1617773759132" TEXT="但对于用户进程则不是一种合适的通用互斥机制。"></node></node></node><node CREATED="1617773759132" ID="ID_573bf455e357" MODIFIED="1617773759132" TEXT="锁变量"></node><node CREATED="1617773759132" ID="ID_e04d2e99b665" MODIFIED="1617773759132" TEXT="严格轮换法"></node><node CREATED="1617773759132" ID="ID_b9582058a725" MODIFIED="1617773759132" TEXT="Peterson解法"></node><node CREATED="1617773759132" ID="ID_4ff76fb0acde" MODIFIED="1617773759132" TEXT="TSL指令"><node CREATED="1617773759132" ID="ID_5484276a535d" MODIFIED="1617773759132" TEXT="需要硬件支持"></node><node CREATED="1617773759132" ID="ID_3f4b11a38aca" MODIFIED="1617773759132" TEXT="该指令结束之前其他处理器均不允许访问该内存字"></node><node CREATED="1617773759132" ID="ID_6a88a8fc84dd" MODIFIED="1617773759132" TEXT="执行TSL指令的CPU将锁住内存总线，以禁止其他CPU在本指令结束之前访问内存"></node></node><node CREATED="1617773759132" ID="ID_a56c04de8c3e" MODIFIED="1617773759132" TEXT="忙等待"><node CREATED="1617773759132" ID="ID_a361a2f53fef" MODIFIED="1617773759132" TEXT="忙等待的锁，称为自旋锁(spin lock)&amp;lt;br&amp;gt;在一个等待循环中不停地测"></node></node><node CREATED="1617773759132" ID="ID_90c1540f0304" MODIFIED="1617773759132" TEXT="睡眠与唤醒"><node CREATED="1617773759132" ID="ID_e78a240267b9" MODIFIED="1617773759132" TEXT="生产者-消费者问题(producer-consumer)(bounded-buffer)"><node CREATED="1617773759132" ID="ID_903658dbbb4c" MODIFIED="1617773759132" TEXT="信号量"></node><node CREATED="1617773759132" ID="ID_9fab48cea528" MODIFIED="1617773759132" TEXT="互斥量"><node CREATED="1617773759132" ID="ID_9cb26a96e844" MODIFIED="1617773759132" TEXT="有些共享数据结构，如信号量，可以存放在内核中，并且只能通过系统调用来访问"></node><node CREATED="1617773759132" ID="ID_0e5da1a8f6fa" MODIFIED="1617773759132" TEXT="让进程与其他进程共享其部分地址空间"></node></node><node CREATED="1617773759132" ID="ID_66a12c126bdd" MODIFIED="1617773759132" TEXT="管程(个人理解为队列)"></node><node CREATED="1617773759132" ID="ID_efc1bc61a483" MODIFIED="1617773759132" TEXT="消息传递"></node><node CREATED="1617773759132" ID="ID_0cf136a4d859" MODIFIED="1617773759132" TEXT="屏障"><node CREATED="1617773759132" ID="ID_0bba75e53906" MODIFIED="1617773759132" TEXT="进程组"></node><node CREATED="1617773759132" ID="ID_2cce50f8b785" MODIFIED="1617773759132" TEXT="当一个进程到达屏障时，它就被屏障阻拦，直到所有进程都到达该屏障为止&amp;lt;br&amp;gt;当最后一个进程到达屏障时，所有的进程就一起被释放"></node></node></node></node></node></node><node CREATED="1617773759132" ID="ID_7907d6657cac" MODIFIED="1617773759132" TEXT="调度"><node CREATED="1617773759132" ID="ID_7dc2a5a5b575" MODIFIED="1617773759132" TEXT="调度机制(scheduling mechanism)"><node CREATED="1617773759132" ID="ID_d530d135e77e" MODIFIED="1617773759132" TEXT="调度机制位于内核"></node></node><node CREATED="1617773759132" ID="ID_8968eab6f05f" MODIFIED="1617773759132" TEXT="调度策略(scheduling policy)"><node CREATED="1617773759132" ID="ID_f7d6c8dc6393" MODIFIED="1617773759132" TEXT="调度策略则由用户进程决定"></node></node><node CREATED="1617773759132" ID="ID_29448d410b32" MODIFIED="1617773759132" TEXT="进程行为"><node CREATED="1617773759132" ID="ID_686cb9697e68" MODIFIED="1617773759132" TEXT="几乎所有进程的(磁盘)I/O请求或计算都是交替突发的"></node></node><node CREATED="1617773759132" ID="ID_1a50aa12fbe3" MODIFIED="1617773759132" TEXT="调度环境"><node CREATED="1617773759132" ID="ID_11015efc489c" MODIFIED="1617773759132" TEXT="批处理系统中的调度&amp;lt;br&amp;gt;非抢占式算法"><node CREATED="1617773759132" ID="ID_5e3c8deb11ed" MODIFIED="1617773759132" TEXT="先来先服务"></node><node CREATED="1617773759132" ID="ID_8d224d4cca97" MODIFIED="1617773759132" TEXT="最短作业优先"></node><node CREATED="1617773759132" ID="ID_cf1b6fa1f7f8" MODIFIED="1617773759132" TEXT="最短剩余时间优先"><node CREATED="1617773759132" ID="ID_4e5fc06392e6" MODIFIED="1617773759132" TEXT="当一个新的作业到达时，其整个时间同当前进程的剩余时间做比较"></node></node></node><node CREATED="1617773759132" ID="ID_4689ec369f49" MODIFIED="1617773759132" TEXT="交互式系统中的调度"><node CREATED="1617773759132" ID="ID_7a731e2f93c7" MODIFIED="1617773759132" TEXT="轮转调度round robin"><node CREATED="1617773759132" ID="ID_a8f5919e7faf" MODIFIED="1617773759132" TEXT="时间片(quantum)轮转调度"></node></node><node CREATED="1617773759132" ID="ID_6b9711dcb33a" MODIFIED="1617773759132" TEXT="优先级调度"><node CREATED="1617773759132" ID="ID_280f4b8399d3" MODIFIED="1617773759132" TEXT="为了防止高优先级进程无休止地运行下去，调度程序可以在&amp;lt;b&amp;gt;每个时钟滴答(即每个时钟中断)&amp;lt;/b&amp;gt;降低当前进程的优先级"></node><node CREATED="1617773759132" ID="ID_e0a5714e1715" MODIFIED="1617773759132" TEXT="每个进程可以被赋予一个允许运行的最大时间片，当这个时间片用完时，下一个次高优先级的进程获得机会运行"></node></node><node CREATED="1617773759132" ID="ID_ba6b868781c9" MODIFIED="1617773759132" TEXT="多级队列"></node><node CREATED="1617773759132" ID="ID_b5b25049cad6" MODIFIED="1617773759132" TEXT="保证调度"></node><node CREATED="1617773759132" ID="ID_db4edb585197" MODIFIED="1617773759132" TEXT="彩票调度"></node><node CREATED="1617773759132" ID="ID_93e8d1be55a6" MODIFIED="1617773759132" TEXT="公平分享调度"></node><node CREATED="1617773759132" ID="ID_e096d14e6b2a" MODIFIED="1617773759132" TEXT="最短进程优先"></node></node><node CREATED="1617773759132" ID="ID_2bc2be0db5aa" MODIFIED="1617773759132" TEXT="实时系统中的调度&amp;lt;br&amp;gt;实时系统是一种时间起着主导作用的系统&amp;lt;br&amp;gt;典型地，外部的一种或多种物理设备给了计算机一个刺激，&amp;lt;br&amp;gt;而计算机必须在一个确定的时间范围内恰当地做出反应.&amp;lt;br&amp;gt;时性能都是通过把程序划分为一组进程而实现的，&amp;lt;br&amp;gt;其中每个进程的行为是可预测和提前掌握的。&amp;lt;br&amp;gt;这些进程一般寿命较短，并且极快地就运行完成。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;"><node CREATED="1617773759132" ID="ID_968d9f63e9ac" MODIFIED="1617773759132" TEXT="场景"><node CREATED="1617773759132" ID="ID_2dc46a62e43b" MODIFIED="1617773759132" TEXT="飞机中的自动驾驶系统"></node><node CREATED="1617773759132" ID="ID_5b39e086fc2a" MODIFIED="1617773759132" TEXT="医院特别护理部门的病人监护装置"></node><node CREATED="1617773759132" ID="ID_ce1d362f33ec" MODIFIED="1617773759132" TEXT="自动化工厂中的机器人控制"></node></node><node CREATED="1617773759132" ID="ID_2d44fa5a6a88" MODIFIED="1617773759132" TEXT="硬实时(hard real time)"><node CREATED="1617773759132" ID="ID_b288fcf6c0e1" MODIFIED="1617773759132" TEXT="必须满足绝对的截止时间"></node></node><node CREATED="1617773759132" ID="ID_4e7c0ae88797" MODIFIED="1617773759132" TEXT="软实时(soft real time)"><node CREATED="1617773759132" ID="ID_fc1327021b2e" MODIFIED="1617773759132" TEXT="虽然不希望偶尔错失截止时间，但是可以容忍"></node></node><node CREATED="1617773759132" ID="ID_0efa470df618" MODIFIED="1617773759132" TEXT="事件"><node CREATED="1617773759132" ID="ID_df20352c727a" MODIFIED="1617773759132" TEXT="周期性(以规则的时间间隔发生)事件"></node><node CREATED="1617773759132" ID="ID_c15012199bbd" MODIFIED="1617773759132" TEXT="非周期性(发生时间不可预知)事件"></node></node><node CREATED="1617773759132" ID="ID_432a8adcb769" MODIFIED="1617773759132" TEXT="可调度"><node CREATED="1617773759132" ID="ID_cbadaa8a3252" MODIFIED="1617773759132" TEXT="如果有m个周期事件，事件i以周期Pi 发生，&amp;lt;br&amp;gt;并需要Ci 秒CPU时间处理一个事件，&amp;lt;br&amp;gt;那么可以处理负载的条件是&amp;lt;br&amp;gt;每个C/每个P 的和小于等于1&amp;lt;br&amp;gt;"></node></node></node></node><node CREATED="1617773759132" ID="ID_6c886f91eda6" MODIFIED="1617773759132" TEXT="IPC问题"><node CREATED="1617773759132" ID="ID_0f86c5ad641c" MODIFIED="1617773759132" TEXT="哲学家就餐问题"><node CREATED="1617773759132" ID="ID_0e849df214bf" MODIFIED="1617773759132" TEXT="死锁"></node><node CREATED="1617773759132" ID="ID_8a5e46d69f11" MODIFIED="1617773759132" TEXT="饥饿(starvation)"></node></node><node CREATED="1617773759132" ID="ID_1e8be5a91869" MODIFIED="1617773759132" TEXT="读者-写者问题"></node></node><node CREATED="1617773759132" ID="ID_8132247a7e8b" MODIFIED="1617773759132" TEXT="将调度机制(scheduling mechanism)与调度策略(scheduling policy)分离"><node CREATED="1617773759132" ID="ID_465843259aaf" MODIFIED="1617773759132" TEXT="将调度算法以某种形式参数化，而参数可以由用户进程填写"></node></node></node></node><node CREATED="1617773759132" ID="ID_bbbda18515f7" MODIFIED="1617773759132" TEXT="系统调用"><node CREATED="1617773759132" ID="ID_416eb769813c" MODIFIED="1617773759132" TEXT="任何单CPU计算机一次只能执行一条指令。如果一个进程正在用户态中运行一个用户程序，并且需要一个系统服务，比如从一个文件读数据，那么它就必须执行一个陷阱或系统调用指令，将控制转移到操作系统。操作系统接着通过参数检查，找出所需要的调用进程。然后，它执行系统调用，并把控制返回给在系统调用后面跟随着的指令。在某种意义上，进行系统调用就像进行一个特殊的过程调用，但是只有系统调用可以进入内核，而过程调用则不能。"></node><node CREATED="1617773759132" ID="ID_ec473a32da8b" MODIFIED="1617773759132" TEXT="UNIX read&amp;lt;br&amp;gt;"><node CREATED="1617773759132" ID="ID_916498553c32" MODIFIED="1617773759132" TEXT="&amp;lt;br&amp;gt;"><node CREATED="1617773759132" ID="ID_24d00e84c46a" MODIFIED="1617773759132" TEXT="第5步: 把系统调用的编号放在操作系统所期望的地方，如寄存器中"></node><node CREATED="1617773759132" ID="ID_17df8e87315a" MODIFIED="1617773759132" TEXT="第6步: 执行一个TRAP指令，将用户态切换到内核态，并在内核中的一个固定地址开始执行"></node><node CREATED="1617773759132" ID="ID_7dc1fc841993" MODIFIED="1617773759132" TEXT="第7步: 跟随在TRAP指令后的内核代码开始检查系统调用编号，然后发出正确的系统调用处理命令，这通常是通过一张由系统调用编号所引用的、指向系统调用处理器的指针表来完成"></node><node CREATED="1617773759132" ID="ID_ed56bb2808b3" MODIFIED="1617773759132" TEXT="第8步"><node CREATED="1617773759132" ID="ID_9ddf42c9adfa" MODIFIED="1617773759132" TEXT="系统调用句柄运行"></node></node><node CREATED="1617773759132" ID="ID_82eded603577" MODIFIED="1617773759132" TEXT="第9步: 一旦系统调用句柄完成其工作，控制可能会在跟随TRAP指令后面的指令中返回给用户空间库过程"><node CREATED="1617773759132" ID="ID_1841e502e402" MODIFIED="1617773759132" TEXT="系统调用可能堵塞调用者，避免它继续执行"><node CREATED="1617773759132" ID="ID_d28ef7a81aac" MODIFIED="1617773759132" TEXT="例如，如果试图读键盘，但是并没有任何键入，&amp;lt;br&amp;gt;那么调用者就必须被阻塞。在这种情形下，&amp;lt;br&amp;gt;操作系统会查看是否有其他可以运行的进程。&amp;lt;br&amp;gt;稍后，当需要的输入出现时，进程会提醒系统注意，&amp;lt;br&amp;gt;然后步骤9～步骤11会接着进行。"></node></node></node><node CREATED="1617773759132" ID="ID_0ee0250006c7" MODIFIED="1617773759132" TEXT="第10步: 这个过程接着以通常的过程调用返回的方式，返回到用户程序"></node><node CREATED="1617773759132" ID="ID_51e72e0b5440" MODIFIED="1617773759132" TEXT="为了完成整个工作，用户程序还必须清除堆栈，如同它在进行任何过程调用之后一样(第11步)"></node></node></node><node CREATED="1617773759132" ID="ID_8abc6c684c5c" MODIFIED="1617773759132" TEXT="TRAP指令与过程指令"><node CREATED="1617773759132" ID="ID_b854310c0d82" MODIFIED="1617773759132" TEXT="TRAP作用是，切换到内核态。而过程调用指令并不改变模式"></node><node CREATED="1617773759132" ID="ID_12060192e2f7" MODIFIED="1617773759132" TEXT="TRAP指令不能跳转到任意地址上"><node CREATED="1617773759132" ID="ID_52b11cd66593" MODIFIED="1617773759132" TEXT="根据机器的体系结构，或者跳转到一个单固定地址上，或者指令中有一8位长的字段，它给定了内存中一张表格的索引，这张表格中含有跳转地址。"></node></node></node><node CREATED="1617773759132" ID="ID_13815e006e34" MODIFIED="1617773759132" TEXT="用于进程管理的系统调用"><node CREATED="1617773759132" ID="ID_af4efe775ddd" MODIFIED="1617773759132" TEXT="UNIX进程有三段: 正文段、数据段和堆栈段"></node><node CREATED="1617773759132" ID="ID_7b026c1cc784" MODIFIED="1617773759132" TEXT="在UNIX系统中，只有一个系统调用可以用来创建新进程: fork"></node></node><node CREATED="1617773759132" ID="ID_06289eb9fd03" MODIFIED="1617773759132" TEXT="用于文件管理的系统调用"></node><node CREATED="1617773759132" ID="ID_111627f0e06e" MODIFIED="1617773759132" TEXT="用于目录管理的系统调用"></node><node CREATED="1617773759132" ID="ID_c84d0e5a0068" MODIFIED="1617773759132" TEXT="其它系统调用"><node CREATED="1617773759132" ID="ID_d01fe82de2ac" MODIFIED="1617773759132" TEXT="chdir调用改变当前的工作目录"></node><node CREATED="1617773759132" ID="ID_a197e4fc42ca" MODIFIED="1617773759132" TEXT="chmod系统调用可以改变文件的模式"></node><node CREATED="1617773759132" ID="ID_c8991f279c82" MODIFIED="1617773759132" TEXT="kill系统调用供用户或用户进程发送信号用。"></node></node></node><node CREATED="1617773759132" ID="ID_6a92735743c6" MODIFIED="1617773759132" TEXT="存储管理&amp;lt;br&amp;gt;"><node CREATED="1617773759132" ID="ID_de6d0f3650d1" MODIFIED="1617773759132" TEXT="无存储器抽象"><node CREATED="1617773759132" ID="ID_567b31f0c25b" MODIFIED="1617773759132" TEXT="简单嵌入式系统"></node><node CREATED="1617773759132" ID="ID_fe1759b11ed2" MODIFIED="1617773759132" TEXT="智能卡系统"></node></node><node CREATED="1617773759132" ID="ID_951f60035998" MODIFIED="1617773759132" TEXT="存储器抽象"><node CREATED="1617773759132" ID="ID_6cda82af8d58" MODIFIED="1617773759132" TEXT="保护和重定位"></node><node CREATED="1617773759132" ID="ID_df42ca9a832d" MODIFIED="1617773759132" TEXT="地址空间"><node CREATED="1617773759132" ID="ID_54648f7b9f13" MODIFIED="1617773759132" TEXT="为程序创造了一种抽象的内存&amp;lt;br&amp;gt;地址空间是一个进程可用于寻址内存的一套地址集合。&amp;lt;br&amp;gt;每个进程都有一个自己的地址空间，并且这个地址空间独立于其他进程的地址空间(除了在一些特殊情况下进程需要共享它们的地址空间外)"></node><node CREATED="1617773759132" ID="ID_02931556c1b4" MODIFIED="1617773759132" TEXT="基址寄存器与界限寄存器"><node CREATED="1617773759132" ID="ID_1b6eabc6a3ee" MODIFIED="1617773759132" TEXT="简单地把每个进程的地址空间映射到物理内存的不同部分"></node><node CREATED="1617773759132" ID="ID_b1992d9beeb2" MODIFIED="1617773759132" TEXT="每个CPU配置两个特殊硬件寄存器"><node CREATED="1617773759132" ID="ID_6219e7290c69" MODIFIED="1617773759132" TEXT="基址寄存器"><node CREATED="1617773759132" ID="ID_8c9422e78cc7" MODIFIED="1617773759132" TEXT="装载程序的起始物理地址"></node></node><node CREATED="1617773759132" ID="ID_42ebf490a345" MODIFIED="1617773759132" TEXT="界限寄存器"><node CREATED="1617773759132" ID="ID_14d076a3143b" MODIFIED="1617773759132" TEXT="装载程序的长度"></node></node><node CREATED="1617773759132" ID="ID_22ae54a96af4" MODIFIED="1617773759132" TEXT="每次一个进程访问内存，取一条指令，读或写一个数据字，CPU硬件会在把地址发送到内存总线前，&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;自动把基址值加到进程发出的地址值上&amp;lt;/b&amp;gt;。同时，它检查程序提供的地址是否等于或大于界限寄存器里的值。&amp;lt;br&amp;gt;如果访问的地址超过了界限，会产生错误并中止访问。"></node><node CREATED="1617773759132" ID="ID_ca739af57cef" MODIFIED="1617773759132" TEXT="多数系统会对基址寄存器和界限寄存器会以一定的方式加以保护，使得只有操作系统可以修改它们"></node></node></node><node CREATED="1617773759133" ID="ID_f7968af86a35" MODIFIED="1617773759133" TEXT="空闲内存管理"><node CREATED="1617773759133" ID="ID_62271071a842" MODIFIED="1617773759133" TEXT="使用位图的存储管理"><node CREATED="1617773759133" ID="ID_074e0496efa2" MODIFIED="1617773759133" TEXT="会有浪费"></node><node CREATED="1617773759133" ID="ID_88b63a513a0e" MODIFIED="1617773759133" TEXT="插入数据需要搜索位图"></node></node><node CREATED="1617773759133" ID="ID_a3357347c05a" MODIFIED="1617773759133" TEXT="使用链表的存储管理"><node CREATED="1617773759133" ID="ID_c4c931faed3b" MODIFIED="1617773759133" TEXT="进程和空闲区使用不同的链表"><node CREATED="1617773759133" ID="ID_a9276d3d64aa" MODIFIED="1617773759133" TEXT="每个空闲区的第一个字可以是空闲区大小，第二个字指向下一个空闲区(从而无需使用单独的链表)"></node><node CREATED="1617773759133" ID="ID_b56f967c2bad" MODIFIED="1617773759133" TEXT="首次适配(first fit)算法"><node CREATED="1617773759133" ID="ID_cf7369fd0a22" MODIFIED="1617773759133" TEXT="存储管理器沿着段链表进行搜索，直到找到一个足够大的空闲区，&amp;lt;br&amp;gt;除非空闲区大小和要分配的空间大小正好一样，&amp;lt;br&amp;gt;否则将该空闲区分为两部分，一部分供进程使用，另一部分形成新的空闲区。"></node></node><node CREATED="1617773759133" ID="ID_0af5fa4eb8e5" MODIFIED="1617773759133" TEXT="快速适配(quick fit)算法"><node CREATED="1617773759133" ID="ID_4d614e506bf2" MODIFIED="1617773759133" TEXT="每次找到合适的空闲区时都记录当时的位置"></node></node><node CREATED="1617773759133" ID="ID_8f54a70cde54" MODIFIED="1617773759133" TEXT="最佳适配(best fit)算法"><node CREATED="1617773759133" ID="ID_43c7c7f6394d" MODIFIED="1617773759133" TEXT="搜索整个链表(从开始到结束)，找出能够容纳进程的最小的空闲区。&amp;lt;br&amp;gt;最佳适配算法试图找出最接近实际需要的空闲区，以最好地区配请求和可用空闲区，&amp;lt;br&amp;gt;而不是先拆分一个以后可能会用到的大的空闲区"></node><node CREATED="1617773759133" ID="ID_bb62dbb50514" MODIFIED="1617773759133" TEXT="可以按照大小对空闲区链表&amp;lt;b&amp;gt;排序&amp;lt;/b&amp;gt;，以便提高最佳适配算法的速度"></node></node><node CREATED="1617773759133" ID="ID_a52e67fc9bfb" MODIFIED="1617773759133" TEXT="最差适配(worst fit)算法"><node CREATED="1617773759133" ID="ID_f176b0b2dd81" MODIFIED="1617773759133" TEXT="总是分配最大的可用空闲区，使新的空闲区比较大从而可以继续使用"></node></node><node CREATED="1617773759133" ID="ID_8e61b5424ad4" MODIFIED="1617773759133" TEXT="&amp;lt;strike&amp;gt;下次适配算法&amp;lt;/strike&amp;gt;"></node></node></node></node><node CREATED="1617773759133" ID="ID_707a4c601e27" MODIFIED="1617773759133" TEXT="交换技术(swapping)"><node CREATED="1617773759133" ID="ID_89ced10b7afa" MODIFIED="1617773759133" TEXT="空闲进程主要存储在磁盘上，所以当它们不运行时就不会占用内存(尽管它们的一些进程会周期性地被唤醒以完成相关工作，然后就又进入睡眠状态)"></node><node CREATED="1617773759133" ID="ID_03ee88de6f76" MODIFIED="1617773759133" TEXT="内存紧缩(memory compaction)"><node CREATED="1617773759133" ID="ID_e8cdd47d0398" MODIFIED="1617773759133" TEXT="交换在内存中产生了多个空闲区(hole，也称为空洞)，&amp;lt;br&amp;gt;通过把所有的进程尽可能向下移动，尽可能将这些小的空闲区合成一大块。"></node></node></node></node></node><node CREATED="1617773759133" ID="ID_10dc0b0adf33" MODIFIED="1617773759133" TEXT="虚拟内存(virtual memory)"><node CREATED="1617773759133" ID="ID_122ec326c5d6" MODIFIED="1617773759133" TEXT="分页(paging)"><node CREATED="1617773759133" ID="ID_8d8e74dc9850" MODIFIED="1617773759133" TEXT="虚拟地址(virtual address)"></node><node CREATED="1617773759133" ID="ID_0b86c1467dc4" MODIFIED="1617773759133" TEXT="虚拟地址空间(virtual address space)"></node><node CREATED="1617773759133" ID="ID_eb196926dfd5" MODIFIED="1617773759133" TEXT="在没有虚拟内存的计算机上，系统直接将虚拟地址送到内存总线上，读写操作使用具有同样地址的物理内存字；&amp;lt;br&amp;gt;而在使用虚拟内存的情况下，虚拟地址不是被直接送到内存总线上，&amp;lt;br&amp;gt;而是被送到内存管理单元(Memory Management Unit，MMU)，MMU把虚拟地址映射为物理内存地址，"><node CREATED="1617773759133" ID="ID_1eac465365df" MODIFIED="1617773759133" TEXT="MMU可以是单独的芯片, 也可以集成到CPU中"></node><node CREATED="1617773759133" ID="ID_efd29bfe1bdc" MODIFIED="1617773759133" TEXT="在磁盘上必须有一个程序核心映像的完整副本，以保证程序片段在需要时能被调入内存。"></node></node><node CREATED="1617773759133" ID="ID_5194d9418643" MODIFIED="1617773759133" TEXT="页表给出虚拟地址与物理内存地址之间的映射关系"></node><node CREATED="1617773759133" ID="ID_07cbf15716c0" MODIFIED="1617773759133" TEXT="虚拟地址空间按照固定大小划分成称为页面(page)的若干单元&amp;lt;br&amp;gt;页面有一个页表项"></node><node CREATED="1617773759133" ID="ID_5d4fe7381952" MODIFIED="1617773759133" TEXT="在&amp;lt;b&amp;gt;物理内存&amp;lt;/b&amp;gt;中对应的单元称为页框(page frame)。页面和页框的大小通常是一样的"></node><node CREATED="1617773759133" ID="ID_0fbbfff9d370" MODIFIED="1617773759133" TEXT="映射关系"><node CREATED="1617773759133" ID="ID_f88de0d5801a" MODIFIED="1617773759133" TEXT="在实际的硬件中，用一个“在/不在”位(present/absent bit)记录页面在内存中的实际存在(有没有被映射)情况。"></node></node><node CREATED="1617773759133" ID="ID_9c9a94e334c8" MODIFIED="1617773759133" TEXT="缺页中断(page fault)"><node CREATED="1617773759133" ID="ID_2d7b24db1983" MODIFIED="1617773759133" TEXT="当程序访问了一个未映射的页面,&amp;nbsp;MMU注意到该页面没有被映射,&amp;lt;br&amp;gt;于是使CPU陷入到操作系统，这个陷阱称为缺页中断(page fault)&amp;lt;br&amp;gt;"></node><node CREATED="1617773759133" ID="ID_c456983f6cd2" MODIFIED="1617773759133" TEXT="操作系统找到一个很少使用的页框且把它的内容写入磁盘(如果它不在磁盘上),&amp;lt;br&amp;gt;随后把需要访问的页面读到刚才回收的页框中，&amp;lt;b&amp;gt;修改映射关系&amp;lt;/b&amp;gt;，然后重新启动引起陷阱的指令&amp;lt;br&amp;gt;"></node></node></node><node CREATED="1617773759133" ID="ID_05b7ff5ca29e" MODIFIED="1617773759133" TEXT="页表"><node CREATED="1617773759133" ID="ID_3d535bf33280" MODIFIED="1617773759133" TEXT="虚拟地址被分成虚拟页号(高位部分)和偏移量(低位部分)两部分"></node><node CREATED="1617773759133" ID="ID_5a4e8ba8b56d" MODIFIED="1617773759133" TEXT="虚拟页号可用做页表的索引，以找到该虚拟页面对应的页表项。由页表项可以找到页框号"></node><node CREATED="1617773759133" ID="ID_9c4ae073484e" MODIFIED="1617773759133" TEXT="然后把页框号拼接到偏移量的高位端，以替换掉虚拟页号，形成送往内存的物理地址。"></node><node CREATED="1617773759133" ID="ID_3f9877eee58d" MODIFIED="1617773759133" TEXT="页表项的结构"><node CREATED="1617773759133" ID="ID_164170ad2f03" MODIFIED="1617773759133" TEXT="页框号"></node><node CREATED="1617773759133" ID="ID_f06c80323924" MODIFIED="1617773759133" TEXT="“在/不在”位(present/absent bit)"><node CREATED="1617773759133" ID="ID_a5fcbebf3c12" MODIFIED="1617773759133" TEXT="这一位是1时表示该表项是有效的，可以使用；如果是0，&amp;lt;br&amp;gt;则表示该表项对应的虚拟页面现在不在内存中，访问该页面会引起一个缺页中断。"></node></node><node CREATED="1617773759133" ID="ID_3d6743cdf0ef" MODIFIED="1617773759133" TEXT="“保护”(protection)"><node CREATED="1617773759133" ID="ID_31c0e9967355" MODIFIED="1617773759133" TEXT="指出一个页允许什么类型的访问"><node CREATED="1617773759133" ID="ID_9b0118b4161a" MODIFIED="1617773759133" TEXT="0表示读/写，1表示只读"></node><node CREATED="1617773759133" ID="ID_ae6796a90c3a" MODIFIED="1617773759133" TEXT="使用三位，各位分别对应是否启用读、写、执行该页面"></node></node></node><node CREATED="1617773759133" ID="ID_8a78e3563a41" MODIFIED="1617773759133" TEXT="“修改”(modified)位"><node CREATED="1617773759133" ID="ID_bcc529d030b9" MODIFIED="1617773759133" TEXT="写入一页时由硬件自动设置修改位"></node><node CREATED="1617773759133" ID="ID_720cc1637041" MODIFIED="1617773759133" TEXT="如果一个页面已经被修改过(即它是“脏”的)，则必须把它写回磁盘。&amp;lt;br&amp;gt;如果一个页面没有被修改过(即它是“干净”的)，则只简单地把它丢弃就可以了，&amp;lt;br&amp;gt;因为它在磁盘上的副本仍然是有效的。&amp;lt;br&amp;gt;这一位有时也被称为脏位(dirty bit)，因为它反映了该页面的状态。"></node></node><node CREATED="1617773759133" ID="ID_9c1ed74d2692" MODIFIED="1617773759133" TEXT="&amp;quot;访问”(referenced)位"><node CREATED="1617773759133" ID="ID_f7e2c5623095" MODIFIED="1617773759133" TEXT="不论是读还是写，系统都会在该页面被访问时设置访问位"></node><node CREATED="1617773759133" ID="ID_482c6590bc5a" MODIFIED="1617773759133" TEXT="它的值被用来帮助操作系统在发生缺页中断时选择要被淘汰的页面。&amp;lt;br&amp;gt;不再使用的页面要比正在使用的页面更适合淘汰。"></node></node><node CREATED="1617773759133" ID="ID_8a65b982eed3" MODIFIED="1617773759133" TEXT="禁止该页面被高速缓存"><node CREATED="1617773759133" ID="ID_4b6ac4138800" MODIFIED="1617773759133" TEXT="对那些映射到设备寄存器而不是常规内存的页面而"></node><node CREATED="1617773759133" ID="ID_c689fda8a70a" MODIFIED="1617773759133" TEXT="具有独立的I/O空间而不使用内存映射I/O的机器不需要这一位"></node></node></node></node><node CREATED="1617773759133" ID="ID_1c51cf590cdc" MODIFIED="1617773759133" TEXT="加速分页过程"><node CREATED="1617773759133" ID="ID_f87a6a377747" MODIFIED="1617773759133" TEXT="问题"><node CREATED="1617773759133" ID="ID_585db937e3d0" MODIFIED="1617773759133" TEXT="虚拟地址到物理地址的映射必须非常快。"></node><node CREATED="1617773759133" ID="ID_2f2e1309b7f8" MODIFIED="1617773759133" TEXT="如果虚拟地址空间很大，页表也会很大。"></node></node><node CREATED="1617773759133" ID="ID_a36739b984ab" MODIFIED="1617773759133" TEXT="转换检测缓冲区(Translation Lookaside Buffer，TLB)"><node CREATED="1617773759133" ID="ID_bb5ef295d519" MODIFIED="1617773759133" TEXT="这是一个小型的硬件设备，将虚拟地址直接映射到物理地址, &amp;lt;br&amp;gt;而不必再访问页表。有时又称为相联存储器(associate memory)"></node><node CREATED="1617773759133" ID="ID_eee48c8464f0" MODIFIED="1617773759133" TEXT="它通常在MMU中"></node><node CREATED="1617773759133" ID="ID_c1d042240d7b" MODIFIED="1617773759133" TEXT="包含少量的表项&amp;lt;br&amp;gt;每个表项记录了一个页面的相关信息&amp;lt;br&amp;gt;"><node CREATED="1617773759133" ID="ID_5a4e11ccb96d" MODIFIED="1617773759133" TEXT="虚拟页号(不是必须放入的)"></node><node CREATED="1617773759133" ID="ID_de3e277f61e9" MODIFIED="1617773759133" TEXT="页面的修改位"></node><node CREATED="1617773759133" ID="ID_9abf08f502f7" MODIFIED="1617773759133" TEXT="保护码(读/写/执行权限)"></node><node CREATED="1617773759133" ID="ID_e033d90d05e1" MODIFIED="1617773759133" TEXT="该页所对应的物理页框"></node><node CREATED="1617773759133" ID="ID_19358d6d25bc" MODIFIED="1617773759133" TEXT="表项是否有(是否在使用)效位"></node></node><node CREATED="1617773759133" ID="ID_178169fe0925" MODIFIED="1617773759133" TEXT="工作原理"><node CREATED="1617773759133" ID="ID_90d9f7f02c6b" MODIFIED="1617773759133" TEXT="硬件首先通过将该虚拟页号与TLB中所有表项&amp;lt;b&amp;gt;同时(&amp;lt;/b&amp;gt;即&amp;lt;b&amp;gt;并行)&amp;lt;/b&amp;gt;进行匹配，&amp;lt;br&amp;gt;判断虚拟页面是否在其中"></node><node CREATED="1617773759133" ID="ID_3cb56847d4f3" MODIFIED="1617773759133" TEXT="如果发现了一个有效的匹配并且要进行的访问操作并不违反保护位，&amp;lt;br&amp;gt;则将页框号直接从TLB中取出而不必再访问页表。"></node><node CREATED="1617773759133" ID="ID_eafeddbab7e9" MODIFIED="1617773759133" TEXT="如果虚拟页面号确实是在TLB中，但指令试图在一个只读页面上进行写操作，&amp;lt;br&amp;gt;则会产生一个保护错误，就像对页表进行非法访问一样"></node><node CREATED="1617773759133" ID="ID_4039e24ce8ce" MODIFIED="1617773759133" TEXT="如果MMU检测到没有有效的匹配项时，就会进行正常的页表查询。&amp;lt;br&amp;gt;接着从TLB中淘汰一个表项，然后用新找到的页表项代替它。"></node></node><node CREATED="1617773759133" ID="ID_d2328aaf0c9b" MODIFIED="1617773759133" TEXT="软件TLB管理"><node CREATED="1617773759133" ID="ID_6c8b7ecc502f" MODIFIED="1617773759133" TEXT="失效的区别"><node CREATED="1617773759133" ID="ID_10cc62261513" MODIFIED="1617773759133" TEXT="软失效(soft miss)"><node CREATED="1617773759133" ID="ID_6fba0a3d1faf" MODIFIED="1617773759133" TEXT="当一个页面访问在内存中而不在TLB中时，将产生软失效(soft miss)。&amp;lt;br&amp;gt;那么此时所要做的就是更新一下TLB，不需要产生磁盘I/O。&amp;lt;br&amp;gt;典型的处理需要10～20个机器指令并花费几个纳秒完成操作。"></node></node><node CREATED="1617773759133" ID="ID_5dce916ad8f1" MODIFIED="1617773759133" TEXT="硬失效"><node CREATED="1617773759133" ID="ID_776f6ea296f2" MODIFIED="1617773759133" TEXT="相反，当页面本身不在内存中(当然也不在TLB中)时，将产生硬失效。&amp;lt;br&amp;gt;此刻需要一次磁盘存取以装入该页面，这个过程大概需要几毫秒。"></node></node></node><node CREATED="1617773759133" ID="ID_95b87881fbb2" MODIFIED="1617773759133" TEXT="预装载TLB表项"></node><node CREATED="1617773759133" ID="ID_384d31a8ff73" MODIFIED="1617773759133" TEXT="可以通过在内存中的固定位置维护一个大的(如4KB)TLB表项的软件高速缓存(该高速缓存的页面总是被保存在TLB中)来减少TLB失效。通过首先检查软件高速缓存，操作系统能够实质性地减少TLB失效&amp;lt;b&amp;gt; (TODO)&amp;lt;/b&amp;gt;"></node></node></node></node><node CREATED="1617773759133" ID="ID_5fe3a5574d34" MODIFIED="1617773759133" TEXT="倒排页表(inverted page table)"><node CREATED="1617773759133" ID="ID_befc218509c8" MODIFIED="1617773759133" TEXT="在实际内存中每一个页框有一个表项，而不是每一个虚拟页面有一个表项"></node><node CREATED="1617773759133" ID="ID_0667f8fe35d9" MODIFIED="1617773759133" TEXT="表项记录哪一个(进程，虚拟页面)对定位于该页框"></node></node><node CREATED="1617773759133" ID="ID_c31ba7f8419f" MODIFIED="1617773759133" TEXT="多级页表"><node CREATED="1617773759133" ID="ID_95b5c1b33f09" MODIFIED="1617773759133" TEXT="顶级页表"><node CREATED="1617773759133" ID="ID_78c754aa8bff" MODIFIED="1617773759133" TEXT="索引顶级页表得到的表项中含有二级页表的地址或页框号"></node><node CREATED="1617773759133" ID="ID_7f6e5d582572" MODIFIED="1617773759133" TEXT="顶级页表的表项0指向程序正文的页表，表项1指向数据的页表，表项1023指向堆栈的页表，其他的表项(用阴影表示的)未用"></node></node><node CREATED="1617773759133" ID="ID_3a7af4568da1" MODIFIED="1617773759133" TEXT="二级页表"></node></node><node CREATED="1617773759133" ID="ID_3a3507a1be5a" MODIFIED="1617773759133" TEXT="虚拟内存本质上是用来创造一个新的抽象概念——地址空间，这个概念是对物理内存的抽象，类似于进程是对物理机器(CPU)的抽象。虚拟内存的实现，是将虚拟地址空间分解成页，并将每一页映射到物理内存的某个页框或者(暂时)解除映射&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759133" ID="ID_32649be3e7bd" MODIFIED="1617773759133" TEXT="页面置换算法"><node CREATED="1617773759133" ID="ID_0db6d4ebcc77" MODIFIED="1617773759133" TEXT="最优页面置换算法(无法实现)"><node CREATED="1617773759133" ID="ID_fbf1dc313593" MODIFIED="1617773759133" TEXT="在缺页中断发生时，有些页面在内存中，其中有一个页面(包含紧接着的下一条指令的那个页面)将很快被访问，&amp;lt;br&amp;gt;其他页面则可能要到10、100或1000条指令后才会被访问，&amp;lt;br&amp;gt;每个页面都可以用在该页面首次被访问前所要执行的指令数作为标记。&amp;lt;br&amp;gt;置换标记最大的页面&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759133" ID="ID_8eb5c821f6e1" MODIFIED="1617773759133" TEXT="最近未使用(NRU, Not Recently Used) 页面置换算法"><node CREATED="1617773759133" ID="ID_602c978a2695" MODIFIED="1617773759133" TEXT="在大部分具有虚拟内存的计算机中，系统为每一页面设置了两个状态位。&amp;lt;br&amp;gt;当页面被访问(读或写)时设置R位；&amp;lt;br&amp;gt;当页面(即修改页面)被写入时设置M位。&amp;lt;br&amp;gt;这些位包含在页表项中"></node><node CREATED="1617773759133" ID="ID_61436546cab3" MODIFIED="1617773759133" TEXT="当启动一个进程时，它的所有页面的两个位都由操作系统设置成0，&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;R位被定期地(比如在每次时钟中断时)清零，&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;以区别最近没有被访问的页面和被访问的页面。"></node><node CREATED="1617773759133" ID="ID_991adb1fb72d" MODIFIED="1617773759133" TEXT="当发生缺页中断时，&amp;lt;br&amp;gt;操作系统检查所有的页面并&amp;lt;br&amp;gt;根据它们当前的R位和M位的值，&amp;lt;br&amp;gt;把它们分为4类: "><node CREATED="1617773759133" ID="ID_1dfeb013c3bf" MODIFIED="1617773759133" TEXT="第0类: 没有被访问，没有被修改。"></node><node CREATED="1617773759133" ID="ID_02a7e24fd52e" MODIFIED="1617773759133" TEXT="第1类: 没有被访问，已被修改。(置换它)"><node CREATED="1617773759133" ID="ID_f679108e6d31" MODIFIED="1617773759133" TEXT="&amp;lt;b&amp;gt;在最近一个时钟滴答中(典型的时间是大约20ms)&amp;lt;br&amp;gt;淘汰一个没有被访问的已修改页面要&amp;lt;br&amp;gt;比淘汰一个被频繁使用的“干净”页面好。&amp;lt;/b&amp;gt;"></node></node><node CREATED="1617773759133" ID="ID_45ec71d1347f" MODIFIED="1617773759133" TEXT="第2类: 已被访问，没有被修改。"></node><node CREATED="1617773759133" ID="ID_97fd65d5040a" MODIFIED="1617773759133" TEXT="第3类: 已被访问，已被修改。"></node></node></node><node CREATED="1617773759133" ID="ID_934428b6d88d" MODIFIED="1617773759133" TEXT="先进先出页面置换算法(FIFO(First-In First-Out)"><node CREATED="1617773759133" ID="ID_ebebaddd68c6" MODIFIED="1617773759133" TEXT="当发生缺页中断时，淘汰表头的页面并把新调入的页面加到表尾"></node><node CREATED="1617773759133" ID="ID_45abb4c6193e" MODIFIED="1617773759133" TEXT="FIFO算法可能会把经常使用的页面置换出去"></node><node CREATED="1617773759133" ID="ID_c72ca65d5d90" MODIFIED="1617773759133" TEXT="第二次机会(second chance)页面置换算法"><node CREATED="1617773759133" ID="ID_1523061c61f0" MODIFIED="1617773759133" TEXT="检查最老页面的R位。如果R位是0，那么这个页面既老又没有被使用，可以立刻置换掉；如果是1，就将R位清0，并把该页面放到链表的尾端，修改它的装入时间使它就像刚装入的一样，然后继续搜索"></node><node CREATED="1617773759133" ID="ID_77c1e3cc4a3a" MODIFIED="1617773759133" TEXT="经常要在链表中移动页面，既降低了效率又不是很有必要"></node></node><node CREATED="1617773759133" ID="ID_0ae6b202e9fc" MODIFIED="1617773759133" TEXT="时钟(clock)页面置换算法"><node CREATED="1617773759133" ID="ID_5784d3f9ad84" MODIFIED="1617773759133" TEXT="把所有的页面都保存在一个类似钟面的环形链表中，一个表针指向最老的页面"></node><node CREATED="1617773759133" ID="ID_59af3d858486" MODIFIED="1617773759133" TEXT="当发生缺页中断时，算法首先检查表针指向的页面，如果它的R位是0就淘汰该页面，&amp;lt;br&amp;gt;并把新的页面插入这个位置，然后把表针前移一个位置；&amp;lt;br&amp;gt;如果R位是1就清除R位并把表针前移一个位置，重复这个过程直到找到了一个R位为0的页面为止。"></node></node></node><node CREATED="1617773759133" ID="ID_cd7ff128b37f" MODIFIED="1617773759133" TEXT="最近最少使用(LRU,Least Recently Used)页面置换算法"><node CREATED="1617773759133" ID="ID_33c98c635efe" MODIFIED="1617773759133" TEXT="在软件内存管理中一般不会使用, &amp;lt;br&amp;gt;但是有一些使用特殊硬件实现LRU的方法"></node><node CREATED="1617773759133" ID="ID_54c47e4a531b" MODIFIED="1617773759133" TEXT="硬件方法(一般计算机没有)"><node CREATED="1617773759133" ID="ID_b4a717948831" MODIFIED="1617773759133" TEXT="硬件有一个64位计数器C"></node><node CREATED="1617773759133" ID="ID_e4c00a61672b" MODIFIED="1617773759133" TEXT="它在每条指令执行完后自动加1"></node><node CREATED="1617773759133" ID="ID_5a5f16383ae8" MODIFIED="1617773759133" TEXT="每个页表项必须有一个足够容纳这个计数器值的域"></node><node CREATED="1617773759133" ID="ID_50d9fa7a3209" MODIFIED="1617773759133" TEXT="在每次访问内存后，将当前的C值保存到被访问页面的页表项中"></node><node CREATED="1617773759133" ID="ID_e2e0726528f6" MODIFIED="1617773759133" TEXT="一旦发生缺页中断，操作系统就检查所有页表项中计数器的值，找到值最小的一个页面，&amp;lt;br&amp;gt;这个页面就是最近最少使用的页面"></node><node CREATED="1617773759133" ID="ID_f9fa0209fcf7" MODIFIED="1617773759133" TEXT="在一个有n个页框的机器中，LRU硬件可以维持一个初值为0的n×n位的矩阵。&amp;lt;br&amp;gt;当访问到页框k时，硬件首先把k行的位都设置成1，再把k列的位都设置成0。&amp;lt;br&amp;gt;在任何时刻，二进制数值最小的&amp;lt;b&amp;gt;行&amp;lt;/b&amp;gt;就是最近最少使用的，第二小的行是下一个最近最少使用的，&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759133" ID="ID_3b41118958c8" MODIFIED="1617773759133" TEXT="NFU(Not Frequently Used，最不常用)算法"><node CREATED="1617773759133" ID="ID_cc8fdd49eb2c" MODIFIED="1617773759133" TEXT="该算法将每个页面与一个软件计数器相关联，计数器的初值为0。&amp;lt;br&amp;gt;每次时钟中断时，由操作系统扫描内存中所有的页面，&amp;lt;br&amp;gt;将每个页面的R位(它的值是0或1)加到它的计数器上。&amp;lt;br&amp;gt;这个计数器大体上跟踪了各个页面被访问的频繁程度。&amp;lt;br&amp;gt;发生缺页中断时，则置换计数器值最小的页面。&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;如果记录访问次数相等, 则比较R位&amp;lt;/b&amp;gt;"></node><node CREATED="1617773759133" ID="ID_502f522fe7fe" MODIFIED="1617773759133" TEXT="老化(aging)算法."><node CREATED="1617773759133" ID="ID_ed6fa72f0700" MODIFIED="1617773759133" TEXT="每次时钟中断时:&amp;lt;br&amp;gt;&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;首先，在R位被加进之前先将计数器右移一位;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span style=&amp;quot;font-size: inherit;&amp;quot;&amp;gt;其次，将R位加到计数器最左端的位而不是最右端.&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;这样, 如果左位(即前边的位) 是 0 那么他就没有被访问过, 如果连续0 越多, 则访问次数越小"></node><node CREATED="1617773759133" ID="ID_bd090ea1d1a2" MODIFIED="1617773759133" TEXT="只有有限位数, 限制了其对以往页面的记录"></node><node CREATED="1617773759133" ID="ID_3f790e9dba6b" MODIFIED="1617773759133" TEXT="如果记录访问次数相等, 只能选择一个替换了"></node></node></node></node><node CREATED="1617773759133" ID="ID_e83a6196dde5" MODIFIED="1617773759133" TEXT="工作集页面置换算法"><node CREATED="1617773759133" ID="ID_32dee87c139f" MODIFIED="1617773759133" TEXT="请求调页(demand paging)"><node CREATED="1617773759133" ID="ID_302c97c28bf3" MODIFIED="1617773759133" TEXT="在单纯的分页系统里，刚启动进程时，在内存中并没有页面"></node><node CREATED="1617773759133" ID="ID_f841dd168df8" MODIFIED="1617773759133" TEXT="在CPU试图取第一条指令时就会产生一次缺页中断，使操作系统装入含有第一条指令的页面"></node><node CREATED="1617773759133" ID="ID_cf3f4d972be7" MODIFIED="1617773759133" TEXT="其他由访问全局数据和堆栈引起的缺页中断通常会紧接着发生。"></node><node CREATED="1617773759133" ID="ID_2b1f8b0a3995" MODIFIED="1617773759133" TEXT="一段时间以后，进程需要的大部分页面都已经在内存了，进程开始在较少缺页中断的情况下运行。"></node><node CREATED="1617773759133" ID="ID_6389936a92f3" MODIFIED="1617773759133" TEXT="因为页面是在需要时被调入的，而不是预先装入。"></node></node><node CREATED="1617773759133" ID="ID_9617d5cec178" MODIFIED="1617773759133" TEXT="一个进程当前正在使用的页面的集合称为它的工作集(working set).&amp;lt;br&amp;gt;如果整个工作集都被装入到了内存中，&amp;lt;br&amp;gt;那么进程在运行到下一运行阶段(例如，编译器的下一遍扫描)之前，不会产生很多缺页中断&amp;lt;br&amp;gt;"><node CREATED="1617773759133" ID="ID_a5803a224c7d" MODIFIED="1617773759133" TEXT="颠簸(thrashing)"><node CREATED="1617773759133" ID="ID_bfa215a23a55" MODIFIED="1617773759133" TEXT="若内存太小而无法容纳下整个工作集，那么进程的运行过程中会产生大量的缺页中断，导致运行速度也会变得很缓慢，&amp;lt;br&amp;gt;因为通常只需要几个纳秒就能执行完一条指令，&amp;lt;br&amp;gt;而通常需要十毫秒才能从磁盘上读入一个页面。如果一个程序每10ms只能执行一到两条指令，那么它将会需要很长时间才能运行完。&amp;lt;br&amp;gt;若每执行几条指令程序就发生一次缺页中断，那么就称这个程序发生了颠簸(thrashing)"></node></node></node><node CREATED="1617773759133" ID="ID_db4a969e2a12" MODIFIED="1617773759133" TEXT="工作集模型(working set model)(预先调页(prepaging))"><node CREATED="1617773759133" ID="ID_afdae7372225" MODIFIED="1617773759133" TEXT="分页系统都会设法跟踪进程的工作集，以确保在让进程运行以前，它的工作集就已在内存中了.&amp;lt;br&amp;gt;其目的在于大大减少缺页中断率。&amp;lt;br&amp;gt;"></node><node CREATED="1617773759134" ID="ID_062ff0ca8a3a" MODIFIED="1617773759134" TEXT="工作集"><node CREATED="1617773759134" ID="ID_6d30e1b41d24" MODIFIED="1617773759134" TEXT="最近k次内存访问&amp;lt;b&amp;gt;所访问过&amp;lt;/b&amp;gt;的页面的集合"></node><node CREATED="1617773759134" ID="ID_c4783f198e00" MODIFIED="1617773759134" TEXT="设一定义"><node CREATED="1617773759134" ID="ID_ae5451f5d5ab" MODIFIED="1617773759134" TEXT="工作集即是过去10ms中的内存访问所用到的页面的集合.&amp;lt;br&amp;gt;这样的模型很合适且更容易实现&amp;lt;br&amp;gt;"></node><node CREATED="1617773759134" ID="ID_4a393a880b57" MODIFIED="1617773759134" TEXT="进程的工作集可以被称为在过去的τ秒实际运行时间中它所访问过的页面的集合"></node></node></node><node CREATED="1617773759134" ID="ID_7783d2279b1c" MODIFIED="1617773759134" TEXT="工作集时钟页面置换算法"><node CREATED="1617773759134" ID="ID_fa99f7d87c1e" MODIFIED="1617773759134" TEXT="WSClock(工作集时钟)算法"><node CREATED="1617773759134" ID="ID_24c2b9a75955" MODIFIED="1617773759134" TEXT="与时钟算法一样，每次缺页中断时，首先检查指针指向的页面。如果R位被置为1，&amp;lt;br&amp;gt;该页面在当前时钟滴答中就被使用过，那么该页面就不适合被淘汰。&amp;lt;br&amp;gt;然后把该页面的R位置为0，指针指向下一个页面，并重复该算法。"></node><node CREATED="1617773759134" ID="ID_79e09128375b" MODIFIED="1617773759134" TEXT="指针经过一圈返回它的起始点"><node CREATED="1617773759134" ID="ID_d50e583fdd09" MODIFIED="1617773759134" TEXT="至少调度了一次写操作"><node CREATED="1617773759134" ID="ID_eb05be4f9ba5" MODIFIED="1617773759134" TEXT="对于第一种情况，指针仅仅是不停地移动，寻找一个干净页面。&amp;lt;br&amp;gt;既然已经调度了一个或者多个写操作，最终会有某个写操作完成，它的页面会被标记为干净。&amp;lt;br&amp;gt;置换遇到的第一个干净页面，这个页面不一定是第一个被调度写操作的页面，&amp;lt;br&amp;gt;因为硬盘驱动程序为了优化性能可能已经把写操作重排序了"></node></node><node CREATED="1617773759134" ID="ID_ea6348aa07a3" MODIFIED="1617773759134" TEXT="没有调度过写操作"><node CREATED="1617773759134" ID="ID_42da3e0fe3ee" MODIFIED="1617773759134" TEXT="一个简单的方法就是随便置换一个干净的页面来使用，&amp;lt;br&amp;gt;扫描中需要记录干净页面的位置。&amp;lt;br&amp;gt;如果不存在干净页面，就选定当前页面并把它写回磁盘"></node></node></node></node></node></node></node><node CREATED="1617773759134" ID="ID_91935d8a389c" MODIFIED="1617773759134" TEXT="分页系统中的设计问题"><node CREATED="1617773759134" ID="ID_4c9cef96de3a" MODIFIED="1617773759134" TEXT="局部(local)页面置换算法"><node CREATED="1617773759134" ID="ID_d6a817912f49" MODIFIED="1617773759134" TEXT="使有大量的空闲页框存在，工作集的增长也会导致颠簸。如果工作集缩小了，局部算法又会浪费内存。"></node></node><node CREATED="1617773759134" ID="ID_6127f9644c3e" MODIFIED="1617773759134" TEXT="全局(global)页面置换算法"><node CREATED="1617773759134" ID="ID_879957d58573" MODIFIED="1617773759134" TEXT="系统必须不停地确定应该给每个进程分配多少页框"></node><node CREATED="1617773759134" ID="ID_61b09f5ce02d" MODIFIED="1617773759134" TEXT="一种方法是监测工作集的大小，工作集大小由“老化”位指出，但这个方法并不能防止颠簸。因为工作集的大小可能在几微秒内就会发生改变，而老化位却要经历一定的时钟滴答数才会发生变化。"></node><node CREATED="1617773759134" ID="ID_6002747e325b" MODIFIED="1617773759134" TEXT="PFF(Page Fault Frequency，缺页中断率)算法"><node CREATED="1617773759134" ID="ID_868d55230beb" MODIFIED="1617773759134" TEXT="指出了何时增加或减少分配给一个进程的页面，&amp;lt;br&amp;gt;但却完全没有说明在发生缺页中断时应该替换掉哪一个页面，它仅仅控制分配集的大小"></node></node></node><node CREATED="1617773759134" ID="ID_461f0cbc44b4" MODIFIED="1617773759134" TEXT="负载控制"><node CREATED="1617773759134" ID="ID_36069cf0d8c2" MODIFIED="1617773759134" TEXT="减少竞争内存的进程数的一个好方法是将一部分进程交换到磁盘，并释放他们所占有的所有页面"></node><node CREATED="1617773759134" ID="ID_e62d14146b5b" MODIFIED="1617773759134" TEXT="多道程序设计的道数。当内存中的进程数过低的时候，CPU可能在很长的时间内处于空闲状态"></node></node><node CREATED="1617773759134" ID="ID_8c5a05212686" MODIFIED="1617773759134" TEXT="页面大小"><node CREATED="1617773759134" ID="ID_5c668cfd7eb8" MODIFIED="1617773759134" TEXT="页面大小是操作系统可以选择的一个参数"></node><node CREATED="1617773759134" ID="ID_cac506353e49" MODIFIED="1617773759134" TEXT="内部碎片(internal fragmentation)"><node CREATED="1617773759134" ID="ID_35b161ac14fb" MODIFIED="1617773759134" TEXT="随便选择一个正文段、数据段或堆栈段很可能不会恰好装满整数个页面，平均的情况下，&amp;lt;br&amp;gt;最后一个页面中有一半是空的。多余的空间就被浪费掉了"></node></node><node CREATED="1617773759134" ID="ID_d2026ef26814" MODIFIED="1617773759134" TEXT="数学分析"><node CREATED="1617773759134" ID="ID_c0f0302050bc" MODIFIED="1617773759134" TEXT="假设进程平均大小是s个字节，页面大小是p个字节，每个页表项需要e个字节。&amp;lt;br&amp;gt;那么每个进程需要的页数大约是s/p，占用了se/p个字节的页表空间。&amp;lt;br&amp;gt;内部碎片在最后一页浪费的内存是p/2。因此，&amp;lt;br&amp;gt;由页表和内部碎片损失造成的全部开销是以下两项之和: &amp;lt;br&amp;gt;开销=se/p+p/2&amp;lt;br&amp;gt;-se/p2 +1/2=0&amp;lt;br&amp;gt;p=√(2se)"></node></node></node><node CREATED="1617773759134" ID="ID_8df348d3be0f" MODIFIED="1617773759134" TEXT="分离的指令空间和数据空间"><node CREATED="1617773759134" ID="ID_17416aad7080" MODIFIED="1617773759134"></node></node><node CREATED="1617773759134" ID="ID_1e2fa4991544" MODIFIED="1617773759134" TEXT="共享页面"><node CREATED="1617773759134" ID="ID_abb08457a1f9" MODIFIED="1617773759134" TEXT="多个不同的用户同时运行同一个程序"></node><node CREATED="1617773759134" ID="ID_df8b3a2e25f0" MODIFIED="1617773759134" TEXT="只读的页面(诸如程序文本)可以共享，但是数据页面则不能共享"></node><node CREATED="1617773759134" ID="ID_157339ec240b" MODIFIED="1617773759134" TEXT="在UNIX中，在进行fork系统调用后，父进程和子进程要共享程序文本和数据。&amp;lt;br&amp;gt;在分页系统中，通常是让这些进程分别拥有它们自己的页表，但都指向同一个页面集合。&amp;lt;br&amp;gt;这样在执行fork调用时就不需要进行页面复制。然而，所有映射到两个进程的数据页面都是只读的。"></node><node CREATED="1617773759134" ID="ID_0bdc8296ff2d" MODIFIED="1617773759134" TEXT="写时复制"><node CREATED="1617773759134" ID="ID_41001d2e4729" MODIFIED="1617773759134" TEXT="只要有一个进程更新了一点数据，就会触发只读保护，并引发操作系统陷阱。&amp;lt;br&amp;gt;然后会生成一个该页的副本，这样每个进程都有自己的专用副本。&amp;lt;br&amp;gt;两个复制都是可以读写的，随后对任何一个副本的写操作都不会再引发陷阱。&amp;lt;br&amp;gt;这种策略意味着那些从来不会&amp;lt;b&amp;gt;执行写操作的页面(包括所有程序页面)是不需要复制的&amp;lt;/b&amp;gt;，只有实际修改的数据页面需要复制。"></node></node></node><node CREATED="1617773759134" ID="ID_c4c70c16891c" MODIFIED="1617773759134" TEXT="内存映射文件(memory-mapped file)"><node CREATED="1617773759134" ID="ID_5fbfdad48440" MODIFIED="1617773759134" TEXT="进程可以通过发起一个系统调用，将一个文件映射到其虚拟地址空间的一部分。在多数实现中，在映射共享的页面时不会实际读入页面的内容，而是在访问页面时才会被每次一页地读入，磁盘文件则被当作后备存储。当进程退出或显式地解除文件映射时，所有被改动的页面会被写回到文件中。"></node><node CREATED="1617773759134" ID="ID_0c45fe5a2376" MODIFIED="1617773759134" TEXT="共享库(memory-mapped file 的一个特例)"><node CREATED="1617773759134" ID="ID_360087ee87f0" MODIFIED="1617773759134" TEXT="当一个共享库被装载和使用时，整个库并不是被一次性地读入内存。&amp;lt;br&amp;gt;而是根据需要，以页面为单位装载的，因此没有被调用到的函数是不会被装载到内存中的。"></node><node CREATED="1617773759134" ID="ID_51bb75845bb8" MODIFIED="1617773759134" TEXT="如果共享库中的一个函数因为修正一个bug被更新了，那么并不需要重新编译调用了这个函数的程序。"></node><node CREATED="1617773759134" ID="ID_c2c1b17a0052" MODIFIED="1617773759134" TEXT="位置无关代码(position-independent code)"><node CREATED="1617773759134" ID="ID_4b8fbb31b94f" MODIFIED="1617773759134" TEXT="在编译共享库时，用一个特殊的编译选项告知编译器，不要产生使用绝对地址的指令。&amp;lt;br&amp;gt;相反，只能产生使用相对地址的指令。&amp;lt;br&amp;gt;例如，几乎总是使用向前(或向后)跳转n个字节(与给出具体跳转地址的指令不同)的指令。&amp;lt;br&amp;gt;不论共享库被放置在虚拟地址空间的什么位置，这种指令都可以正确工作。&amp;lt;br&amp;gt;通过避免使用绝对地址，这个问题就可以被解决。"></node></node></node></node><node CREATED="1617773759134" ID="ID_92f0bf025913" MODIFIED="1617773759134" TEXT="清除策略"><node CREATED="1617773759134" ID="ID_77a38f071d04" MODIFIED="1617773759134" TEXT="很多分页系统有一个称为分页守护进程(paging daemon)的后台进程，它在大多数时候睡眠，但定期被唤醒以检查内存的状态"></node><node CREATED="1617773759134" ID="ID_3bb9fd58b82c" MODIFIED="1617773759134" TEXT="如果空闲页框过少，分页守护进程通过预定的页面置换算法选择页面换出内存。如果这些页面装入内存后被修改过，则将它们写回磁盘。"></node><node CREATED="1617773759134" ID="ID_1203b04279ad" MODIFIED="1617773759134" TEXT="一个双指针时钟。前指针由分页守护进程控制。当它指向一个脏页面时，就把该页面写回磁盘，前指针向前移动。当它指向一个干净页面时，仅仅指针向前移动。后指针用于页面置换，就像在标准时钟算法中一样。&amp;lt;br&amp;gt;现在，由于分页守护进程的工作，后指针命中干净页面的概率会增加。&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759134" ID="ID_5a6dbb273a68" MODIFIED="1617773759134" TEXT="虚拟内存接口"><node CREATED="1617773759134" ID="ID_cf1371c30d69" MODIFIED="1617773759134" TEXT="如果程序员可以对内存区域进行命名，那么就有可能实现共享内存。通过让一个进程把一片内存区域的名称通知另一个进程，而使得第二个进程可以把这片区域映射到它的虚拟地址空间中去。通过两个进程(或者更多)共享同一部分页面，高带宽的共享就成为可能——一个进程往共享内存中写内容而另一个从中读出内容。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;页面共享也可以用来实现高性能的消息传递系统。一般地，传递消息的时候，数据被从一个地址空间复制到另一个地址空间，开销很大。如果进程可以控制它们的页面映射，就可以这样来发送一条消息: 发送进程清除那些包含消息的页面的映射，而接收进程把它们映射进来。这里只需要复制页面的名字，而不需要复制所有数据。&amp;lt;br&amp;gt;"></node><node CREATED="1617773759134" ID="ID_e67167f18191" MODIFIED="1617773759134" TEXT="分布式共享内存"></node></node><node CREATED="1617773759134" ID="ID_dca6b2c80a27" MODIFIED="1617773759134" TEXT="有关实现的问题"><node CREATED="1617773759134" ID="ID_72d8258f0904" MODIFIED="1617773759134" TEXT="与分页有关的工作"><node CREATED="1617773759134" ID="ID_c0f41c104f55" MODIFIED="1617773759134" TEXT="进程创建时"><node CREATED="1617773759134" ID="ID_b87525c31016" MODIFIED="1617773759134" TEXT="当在分页系统中创建一个新进程时，操作系统要确定程序和数据在初始时有多大，并为它们创建一个页表。&amp;lt;br&amp;gt;操作系统还要在内存中为页表分配空间并对其进行初始化。"></node></node><node CREATED="1617773759134" ID="ID_3f851083ff26" MODIFIED="1617773759134" TEXT="进程执行时"><node CREATED="1617773759134" ID="ID_c9780f868c4c" MODIFIED="1617773759134" TEXT="当调度一个进程执行时，必须为新进程重置MMU，刷新TLB，以清除以前的进程遗留的痕迹。&amp;lt;br&amp;gt;新进程的页表必须成为当前页表，通常可以通过复制该页表或者把一个指向它的指针放进某个硬件寄存器来完成。"></node></node><node CREATED="1617773759134" ID="ID_d4e521098668" MODIFIED="1617773759134" TEXT="缺页中断时"><node CREATED="1617773759134" ID="ID_e9981caf8e79" MODIFIED="1617773759134" TEXT="当缺页中断发生时，操作系统必须通过读硬件寄存器来确定是哪个虚拟地址造成了缺页中断。通过该信息，&amp;lt;br&amp;gt;它要计算需要哪个页面，并在磁盘上对该页面进行定位。它必须找到合适的页框来存放新页面，&amp;lt;br&amp;gt;必要时还要置换老的页面，然后把所需的页面读入页框。最后，还要备份程序计数器，&amp;lt;br&amp;gt;使程序计数器指向引起缺页中断的指令，并重新执行该指令。"></node><node CREATED="1617773759135" ID="ID_1d0897cab30d" MODIFIED="1617773759135" TEXT="处理细节"><node CREATED="1617773759135" ID="ID_1cba271e1199" MODIFIED="1617773759135" TEXT="1)硬件陷入内核，在堆栈中保存程序计数器。大多数机器将当前指令的各种状态信息保存在特殊的CPU寄存器中。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;2)启动一个汇编代码例程保存通用寄存器和其他易失的信息，以免被操作系统破坏。这个例程将操作系统作为一个函数来调用。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;3)当操作系统发现一个缺页中断时，尝试发现需要哪个虚拟页面。通常一个硬件寄存器包含了这一信息，如果没有的话，操作系统必须检索程序计数器，取出这条指令，用软件分析这条指令，看看它在缺页中断时正在做什么。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;4)一旦知道了发生缺页中断的虚拟地址，操作系统检查这个地址是否有效，并检查存取与保护是否一致。如果不一致，向进程发出一个信号或杀掉该进程。如果地址有效且没有保护错误发生，系统则检查是否有空闲页框。如果没有空闲页框，执行页面置换算法寻找一个页面来淘汰。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;5)如果选择的页框“脏”了，安排该页写回磁盘，并发生一次上下文切换，挂起产生缺页中断的进程，让其他进程运行直至磁盘传输结束。无论如何，该页框被标记为忙，以免因为其他原因而被其他进程占用。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;6)一旦页框“干净”后(无论是立刻还是在写回磁盘后)，操作系统查找所需页面在磁盘上的地址，通过磁盘操作将其装入。该页面被装入后，产生缺页中断的进程仍然被挂起，并且如果有其他可运行的用户进程，则选择另一个用户进程运行。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;7)当磁盘中断发生时，表明该页已经被装入，页表已经更新可以反映它的位置，页框也被标记为正常状态。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;8)恢复发生缺页中断指令以前的状态，程序计数器重新指向这条指令。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;9)调度引发缺页中断的进程，操作系统返回调用它的汇编语言例程。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;10)该例程恢复寄存器和其他状态信息，返回到用户空间继续执行，就好像缺页中断没有发生过一样。&amp;lt;br&amp;gt;"></node><node CREATED="1617773759135" ID="ID_3faa7594c58e" MODIFIED="1617773759135" TEXT="指令备份"><node CREATED="1617773759135" ID="ID_423d6ca30836" MODIFIED="1617773759135" TEXT="CPU的设计者们提供了一种解决方法，就是通过使用一个隐藏的内部寄存器。在每条指令执行之前，把程序计数器的内容复制到该寄存器。这些机器可能会有第二个寄存器，用来提供哪些寄存器已经自动增加或者自动减少以及增减的数量等信息。通过这些信息，操作系统可以消除引起缺页中断的指令所造成的所有影响，并使指令可以重新开始执行。"></node></node><node CREATED="1617773759135" ID="ID_9d30c2296ba0" MODIFIED="1617773759135" TEXT="锁定内存中的页面"><node CREATED="1617773759135" ID="ID_ae95d58906c5" MODIFIED="1617773759135" TEXT="如果一个I/O设备正处在对该页面进行DMA传输的过程之中，&amp;lt;br&amp;gt;将这个页面移出将会导致部分数据写入它们所属的缓冲区中，&amp;lt;br&amp;gt;而部分数据被写入到最新装入的页面中。"><node CREATED="1617773759135" ID="ID_bf5ccdf945a9" MODIFIED="1617773759135" TEXT="锁住一个页面通常称为在内存中钉住(pinning)页面"></node><node CREATED="1617773759135" ID="ID_a1f6a4537e33" MODIFIED="1617773759135" TEXT="在内核缓冲区中完成所有的I/O操作，然后再将数据复制到用户页面"></node></node></node><node CREATED="1617773759135" ID="ID_fb633790641a" MODIFIED="1617773759135" TEXT="后备存储"><node CREATED="1617773759135" ID="ID_7cfcd49c765b" MODIFIED="1617773759135" TEXT="磁盘管理"></node></node><node CREATED="1617773759135" ID="ID_54acb9c279a8" MODIFIED="1617773759135" TEXT="策略和机制的分离"></node></node></node><node CREATED="1617773759135" ID="ID_6cb2f93134b4" MODIFIED="1617773759135" TEXT="进程终止时"><node CREATED="1617773759135" ID="ID_335c71ddb3e2" MODIFIED="1617773759135" TEXT="当进程退出的时候，操作系统必须释放进程的页表、页面和页面在硬盘上所占用的空间。&amp;lt;br&amp;gt;如果某些页面是与其他进程共享的，当最后一个使用它们的进程终止的时候，才可以释放内存和磁盘上的页面。"></node></node></node></node><node CREATED="1617773759135" ID="ID_cc54f782e903" MODIFIED="1617773759135" TEXT="分段"><node CREATED="1617773759135" ID="ID_f964ba8c9aee" MODIFIED="1617773759135" TEXT="段号"></node><node CREATED="1617773759135" ID="ID_a403d8cff459" MODIFIED="1617773759135" TEXT="段内地址"></node><node CREATED="1617773759135" ID="ID_f797ba532d36" MODIFIED="1617773759135"></node><node CREATED="1617773759135" ID="ID_f0ca42af43b4" MODIFIED="1617773759135" TEXT="分段与分页区别"></node><node CREATED="1617773759135" ID="ID_d71676290732" MODIFIED="1617773759135" TEXT="纯分段的实现"><node CREATED="1617773759135" ID="ID_fa540706caee" MODIFIED="1617773759135" TEXT="外部碎片(external fragmentation)(棋盘形碎片)"><node CREATED="1617773759135" ID="ID_c79b73151109" MODIFIED="1617773759135" TEXT="在系统运行一段时间后内存被划分为许多块，一些块包含着段，一些则成了空闲区(段淘汰)"></node><node CREATED="1617773759135" ID="ID_6832f3e01144" MODIFIED="1617773759135" TEXT="内存紧缩消除棋盘形碎片"></node></node></node><node CREATED="1617773759135" ID="ID_461573fcf80c" MODIFIED="1617773759135" TEXT="分段和分页结合"><node CREATED="1617773759135" ID="ID_e8783c3763c0" MODIFIED="1617773759135" TEXT="MULTICS"><node CREATED="1617773759135" ID="ID_75f756cc8fea" MODIFIED="1617773759135" TEXT="每个段都看作是一个虚拟内存并对它进行分页"><node CREATED="1617773759135" ID="ID_560c8fe66865" MODIFIED="1617773759135" TEXT="统一的页面大小"></node><node CREATED="1617773759135" ID="ID_6ee7cb8f4401" MODIFIED="1617773759135" TEXT="只使用段的一部分时不用把它全部调入内存"></node><node CREATED="1617773759135" ID="ID_5fe8d4de7b03" MODIFIED="1617773759135" TEXT="易于编程"></node><node CREATED="1617773759135" ID="ID_87d5e8a8beb5" MODIFIED="1617773759135" TEXT="模块化"></node><node CREATED="1617773759135" ID="ID_9afc11c900b6" MODIFIED="1617773759135" TEXT="保护"></node><node CREATED="1617773759135" ID="ID_87194ce9ebb3" MODIFIED="1617773759135" TEXT="共享"></node></node><node CREATED="1617773759135" ID="ID_1ad4068721ef" MODIFIED="1617773759135" TEXT="一个地址由两部分构成"><node CREATED="1617773759135" ID="ID_f554adebe602" MODIFIED="1617773759135" TEXT="段"></node><node CREATED="1617773759135" ID="ID_e11ea3128be6" MODIFIED="1617773759135" TEXT="段内地址"><node CREATED="1617773759135" ID="ID_28fec324f277" MODIFIED="1617773759135" TEXT="页号"></node><node CREATED="1617773759135" ID="ID_36be5f00b13c" MODIFIED="1617773759135" TEXT="页内的字"></node></node></node></node><node CREATED="1617773759135" ID="ID_e6bd00cdd172" MODIFIED="1617773759135" TEXT="Intel Pentium"><node CREATED="1617773759135" ID="ID_4fb9a9d1cd77" MODIFIED="1617773759135" TEXT="LDT(Local Descriptor Table，局部描述符表)"><node CREATED="1617773759135" ID="ID_aacf4e549e99" MODIFIED="1617773759135" TEXT="LDT描述局部于每个程序的段，包括其代码、数据、堆栈等"></node></node><node CREATED="1617773759135" ID="ID_204cea7b74b8" MODIFIED="1617773759135" TEXT="GDT(Global Descriptor Table，全局描述符表)"><node CREATED="1617773759135" ID="ID_d4ad21c0d737" MODIFIED="1617773759135" TEXT="GDT描述系统段，包括操作系统本身。"></node></node></node></node></node></node></node></node><node CREATED="1617773759135" ID="ID_547be804964a" MODIFIED="1617773759135" TEXT="文件系统"><node CREATED="1617773759135" ID="ID_b92c5f63a10d" MODIFIED="1617773759135" TEXT="权限"><node CREATED="1617773759135" ID="ID_03bf1f8c528a" MODIFIED="1617773759135" TEXT="文件和目录中通常存在一种机制，使文件所有者之外的其他用户也可以访问该文件"></node><node CREATED="1617773759135" ID="ID_6655af76591b" MODIFIED="1617773759135" TEXT="在读写文件之前，首先要打开文件，检查其访问权限。若权限许可，系统将返回一个小整数，称作文件描述符(file descriptor)，供后续操作使用。若禁止访问，系统则返回一个错误码"></node></node><node CREATED="1617773759135" ID="ID_20f78bd65d6d" MODIFIED="1617773759135" TEXT="文件"><node CREATED="1617773759135" ID="ID_7abc2c201e75" MODIFIED="1617773759135" TEXT="文件命名"><node CREATED="1617773759135" ID="ID_1dc1b7c7fa05" MODIFIED="1617773759135" TEXT="文件扩展名(file extension)"></node></node><node CREATED="1617773759135" ID="ID_d684058c26f1" MODIFIED="1617773759135" TEXT="文件结构"><node CREATED="1617773759135" ID="ID_3e225f293675" MODIFIED="1617773759135" TEXT="字节序列"><node CREATED="1617773759135" ID="ID_45505e178b1f" MODIFIED="1617773759135" TEXT="操作系统所见到的就是字节，其任何含义只在用户程序中解释"></node></node><node CREATED="1617773759135" ID="ID_b1d7d2a1ca25" MODIFIED="1617773759135" TEXT="记录序列"><node CREATED="1617773759135" ID="ID_7a56d32e48b4" MODIFIED="1617773759135" TEXT="文件是具有固定长度记录的序列&amp;lt;br&amp;gt;每个记录都有其内部结构&amp;lt;br&amp;gt;读操作返回一个记录，而写操作重写或追加一个记录"></node></node><node CREATED="1617773759135" ID="ID_9798efe4c19d" MODIFIED="1617773759135" TEXT="树"><node CREATED="1617773759135" ID="ID_1aedd32bff25" MODIFIED="1617773759135" TEXT="按“键”字段进行排序，从而可以对特定“键”进行快速查找。"></node></node></node><node CREATED="1617773759135" ID="ID_2fcd0167b983" MODIFIED="1617773759135" TEXT="文件类型"><node CREATED="1617773759135" ID="ID_de60c0d7320a" MODIFIED="1617773759135" TEXT="普通文件(regular file)"><node CREATED="1617773759135" ID="ID_f8cd4fd09785" MODIFIED="1617773759135" TEXT="ASCII文件"><node CREATED="1617773759135" ID="ID_4f648752b23b" MODIFIED="1617773759135" TEXT="可以显示和打印"></node><node CREATED="1617773759135" ID="ID_7740049346cd" MODIFIED="1617773759135" TEXT="可以用任何文本编辑器进行编辑"></node><node CREATED="1617773759135" ID="ID_53f33cfde5f9" MODIFIED="1617773759135" TEXT="可以方便程序共享数据"></node></node><node CREATED="1617773759135" ID="ID_4502600bfa68" MODIFIED="1617773759135" TEXT="二进制文件&amp;lt;br&amp;gt;二进制文件有一定的内部结构，&amp;lt;br&amp;gt;使用该文件的程序才了解这种结构"><node CREATED="1617773759135" ID="ID_61b29428966a" MODIFIED="1617773759135" TEXT="可执行二进制文件(UNIX)"><node CREATED="1617773759135" ID="ID_db547fa2caed" MODIFIED="1617773759135" TEXT="文件头、正文、数据、重定位位及符号表.&amp;lt;br&amp;gt;文件头以所谓的魔数(magic number)开始，&amp;lt;br&amp;gt;表明该文件是一个可执行的文件 &amp;lt;br&amp;gt;(防止非这种格式的文件偶然运行)。&amp;lt;br&amp;gt;魔数后面是文件中各段的长度、执行的起始地址和一些标志位。&amp;lt;br&amp;gt;程序本身的正文和数据在文件头后面。这些被装入内存，&amp;lt;br&amp;gt;并使用重定位位重新定位。符号表则用于调试。"></node></node><node CREATED="1617773759135" ID="ID_8476447e5463" MODIFIED="1617773759135" TEXT="UNIX的存档文件"><node CREATED="1617773759135" ID="ID_08e7f4dcd8bf" MODIFIED="1617773759135" TEXT="由已编译但没有连接的库过程(模块)集合而成"></node><node CREATED="1617773759135" ID="ID_abf4b9a8d228" MODIFIED="1617773759135" TEXT="每个文件以模块头开始，其中记录了名称、创建日期、&amp;lt;br&amp;gt;所有者、保护码和文件大小"></node></node></node></node><node CREATED="1617773759135" ID="ID_3f3b83a8819d" MODIFIED="1617773759135" TEXT="字符特殊文件(character special file) UNIX&amp;lt;br&amp;gt;"></node><node CREATED="1617773759135" ID="ID_66a5a4ecd185" MODIFIED="1617773759135" TEXT="块特殊文件(block special file)UNIX"></node><node CREATED="1617773759135" ID="ID_bceae485339b" MODIFIED="1617773759135" TEXT="系统文件"><node CREATED="1617773759135" ID="ID_e3a59d2ba37a" MODIFIED="1617773759135" TEXT="&amp;lt;b&amp;gt;目录&amp;lt;/b&amp;gt;(directory)&amp;lt;br&amp;gt;管理文件系统结构"><node CREATED="1617773759135" ID="ID_19ff84841482" MODIFIED="1617773759135" TEXT="一级目录系统&amp;lt;br&amp;gt;只有一个目录&amp;lt;br&amp;gt;"></node><node CREATED="1617773759135" ID="ID_9e9972254e03" MODIFIED="1617773759135" TEXT="层次目录系统(目录树)"><node CREATED="1617773759135" ID="ID_d0531eefeede" MODIFIED="1617773759135" TEXT="绝对路径名(absolute path name)&amp;lt;br&amp;gt;从根目录到文件的路径组成"></node><node CREATED="1617773759135" ID="ID_5aa76b371370" MODIFIED="1617773759135" TEXT="相对路径名(relative path name)&amp;lt;br&amp;gt;和工作目录(working directory)&amp;lt;br&amp;gt;(也称作当前目录(current directory))一起使用&amp;lt;br&amp;gt;“.”“dot”, “..”“dotdot”"></node></node><node CREATED="1617773759135" ID="ID_768dd811b2b4" MODIFIED="1617773759135" TEXT="目录操作
"></node></node></node></node><node CREATED="1617773759135" ID="ID_1aa4d61ebc7f" MODIFIED="1617773759135" TEXT="文件存取"><node CREATED="1617773759135" ID="ID_4a8f5ba38b30" MODIFIED="1617773759135" TEXT="顺序存取(sequential access)"></node><node CREATED="1617773759135" ID="ID_3eafa2c61648" MODIFIED="1617773759135" TEXT="随机存取文件(random access file)&amp;lt;br&amp;gt;seek操作设置当前位置(win 和 UNIX)&amp;lt;br&amp;gt;read操作都给出开始读文件的位置"></node></node><node CREATED="1617773759135" ID="ID_32919b289b58" MODIFIED="1617773759135" TEXT="文件属性"></node><node CREATED="1617773759135" ID="ID_7cd9490c87ae" MODIFIED="1617773759135" TEXT="文件操作"><node CREATED="1617773759135" ID="ID_b10ed71d72cb" MODIFIED="1617773759135" TEXT="create,delete, write, append, seek, etc.&amp;lt;br&amp;gt;"></node></node></node><node CREATED="1617773759135" ID="ID_93a58c7944aa" MODIFIED="1617773759135" TEXT="文件系统的实现"><node CREATED="1617773759135" ID="ID_bfa31595a8b0" MODIFIED="1617773759135" TEXT="文件系统布局((Master Boot Record，MBR)/GPT)"><node CREATED="1617773759135" ID="ID_83ca817beecc" MODIFIED="1617773759135" TEXT="每个分区中有一个独立的文件系"></node><node CREATED="1617773759135" ID="ID_f9973b118965" MODIFIED="1617773759135" TEXT="磁盘的0号扇区称为主引导记录(Master Boot Record，MBR)，用来引导计算机.&amp;lt;br&amp;gt;在MBR的结尾是分区表。该表给出了每个分区的起始和结束地址。&amp;lt;br&amp;gt;表中的一个分区被标记为活动分区。在计算机被引导时，BIOS读入并执行MBR。&amp;lt;br&amp;gt;MBR做的第一件事是确定活动分区，读入它的第一个块，&amp;lt;br&amp;gt;称为引导块(boot block)，并执行之。引导块中的程序将装载该分区中的操作系统。&amp;lt;br&amp;gt;为统一起见，每个分区都从一个启动块开始，即使它不含有一个可启动的操作系统。"></node><node CREATED="1617773759135" ID="ID_0d23c98431f1" MODIFIED="1617773759135" TEXT="&amp;lt;br&amp;gt;"><node CREATED="1617773759135" ID="ID_65a5c608b7ae" MODIFIED="1617773759135" TEXT="超级块&amp;lt;br&amp;gt;超级块包含文件系统的所有关键参数&amp;lt;br&amp;gt;超级块中的典型信息包括: &amp;lt;br&amp;gt;确定文件系统类型用的魔数、&amp;lt;br&amp;gt;文件系统中数据块的数量以及其他重要的管理信息。"></node></node></node><node CREATED="1617773759135" ID="ID_c4fd61ed58da" MODIFIED="1617773759135" TEXT="文件的实现&amp;lt;br&amp;gt;磁盘会被&amp;quot;分为&amp;quot;块&amp;lt;br&amp;gt;"><arrowlink DESTINATION="ID_7e4b9a4deb62" ENDARROW="Default" ID="Arrow_ID_ca01236dba8a" STARTARROW="None"/><node CREATED="1617773759135" ID="ID_b1eb3dfef811" MODIFIED="1617773759135" TEXT="连续分配"></node><node CREATED="1617773759135" ID="ID_d1745930ddbe" MODIFIED="1617773759135" TEXT="链表分配"><node CREATED="1617773759135" ID="ID_3107ad41006d" MODIFIED="1617773759135" TEXT="每个块的第一个字作,为指向下一块的指针，&amp;lt;br&amp;gt;块的其他部分存放数据"></node><node CREATED="1617773759135" ID="ID_32c9fadf7a10" MODIFIED="1617773759135" TEXT="随机存取却相当缓慢"></node><node CREATED="1617773759135" ID="ID_28237ec7a3e5" MODIFIED="1617773759135" TEXT="磁盘块存储数据的字节数不再是2的整数次幂"></node><node CREATED="1617773759135" ID="ID_42cc9112ec04" MODIFIED="1617773759135" TEXT="在内存中采用表的链表分配&amp;lt;br&amp;gt;取出每个磁盘块的指针字，把它放在内存的一个表中.&amp;lt;br&amp;gt;内存中的这样一个表格称为文件分配表(File Allocation Table，FAT)"></node></node><node CREATED="1617773759135" ID="ID_ae1b50f51217" MODIFIED="1617773759135" TEXT="i节点"><node CREATED="1617773759135" ID="ID_cf00a3ca995f" MODIFIED="1617773759135" TEXT="每个文件赋予一个称为i节点(index-node)的数据结构，&amp;lt;br&amp;gt;其中列出了文件属性和一个包含磁盘块地址的块的地址"></node></node><node CREATED="1617773759135" ID="ID_6c9377462ce1" MODIFIED="1617773759135" TEXT="目录的实现"><node CREATED="1617773759135" ID="ID_cde8ece9d2db" MODIFIED="1617773759135" TEXT="简单目录&amp;lt;br&amp;gt;包含固定大小的目录项，在目录项中有磁盘地址和属性"></node><node CREATED="1617773759135" ID="ID_f2c11a4da294" MODIFIED="1617773759135" TEXT="散列表"></node><node CREATED="1617773759135" ID="ID_df10e1b9d8ec" MODIFIED="1617773759135" TEXT="共享文件有向无环图(Directed Acyclic Graph，DAG)"></node></node></node><node CREATED="1617773759135" ID="ID_16cfb50a9c14" MODIFIED="1617773759135" TEXT="日志结构文件系统(Log-structured File System，LFS)"><node CREATED="1617773759135" ID="ID_9cfea7c362f5" MODIFIED="1617773759135" TEXT="其基本思想是将整个磁盘结构化为一个日志。&amp;lt;br&amp;gt;每隔一段时间，或是有特殊需要时，&amp;lt;br&amp;gt;被缓冲在内存中的所有未决的写操作&amp;lt;br&amp;gt;都被放到一个单独的段中，&amp;lt;br&amp;gt;作为在日志末尾的一个邻接段写入磁盘&amp;lt;br&amp;gt;一个单独的段可能会包括i节点、目录块、&amp;lt;br&amp;gt;数据块或者都有。&amp;lt;br&amp;gt;每一个段的开始都是该段的摘要，&amp;lt;br&amp;gt;说明该段中都包含哪些内容。&amp;lt;br&amp;gt;如果所有的段平均在1MB左右，&amp;lt;br&amp;gt;那么就几乎可以利用磁盘的完整带宽。&amp;lt;br&amp;gt;i节点分散在整个日志中，&amp;lt;br&amp;gt;而不是放在磁盘的某一个固定位置LFS有一个清理线程，&amp;lt;br&amp;gt;该清理线程周期地扫描日志进行磁盘压缩。(清理i 记录的块)"></node><node CREATED="1617773759135" ID="ID_3bc568107855" MODIFIED="1617773759135" TEXT="日志文件系统&amp;lt;br&amp;gt;保存一个用于记录系统下一步将要做什么的日志。&amp;lt;br&amp;gt;这样当系统在完成它们即将完成的任务前崩溃时，&amp;lt;br&amp;gt;重新启动后，可以通过查看日志，&amp;lt;br&amp;gt;获取崩溃前计划完成的任务，并完成它们。"><node CREATED="1617773759135" ID="ID_f5c8ff900b28" MODIFIED="1617773759135" TEXT="日志文件系统则先写一个日志项，列出三个将要完成的动作。&amp;lt;br&amp;gt;然后日志项被写入磁盘(并且为了良好地实施，&amp;lt;br&amp;gt;可能从磁盘读回来验证它的完整性)。只有当日志项已经被写入，&amp;lt;br&amp;gt;不同的操作才可以进行。当所有的操作成功完成后，擦除日志项。&amp;lt;br&amp;gt;如果系统这时崩溃，系统恢复后，&amp;lt;br&amp;gt;文件系统可以通过检查日志来查看是不是有未完成的操作。"></node><node CREATED="1617773759135" ID="ID_883e36d3c49a" MODIFIED="1617773759135" TEXT="原子事务(atomic transaction)"></node><node CREATED="1617773759135" ID="ID_8613c92ebee0" MODIFIED="1617773759135" TEXT="幂等"></node></node></node><node CREATED="1617773759135" ID="ID_88cb0abe3b2c" MODIFIED="1617773759135" TEXT="虚拟文件系统(封装其它文件系统)"></node><node CREATED="1617773759135" ID="ID_68e9b106ea1a" MODIFIED="1617773759135" TEXT="文件系统管理和优化"><node CREATED="1617773759135" ID="ID_d54ef6c6d6bf" MODIFIED="1617773759135" TEXT="磁盘空间管理"><node CREATED="1617773759135" ID="ID_7e4b9a4deb62" MODIFIED="1617773759135" TEXT="块大小"><linktarget COLOR="#b0b0b0" DESTINATION="ID_7e4b9a4deb62" ENDARROW="Default" ID="Arrow_ID_ca01236dba8a" SOURCE="ID_c4fd61ed58da" STARTARROW="None"/></node><node CREATED="1617773759135" ID="ID_4e1235ea5d84" MODIFIED="1617773759135" TEXT="记录空闲块"><node CREATED="1617773759135" ID="ID_37f61753a8d1" MODIFIED="1617773759135" TEXT="链表"></node><node CREATED="1617773759135" ID="ID_018da1ba14d9" MODIFIED="1617773759135" TEXT="位图&amp;lt;br&amp;gt;空闲块用1表示，已分配块用0表示(或者反之)"></node></node><node CREATED="1617773759135" ID="ID_84e7f1d1115d" MODIFIED="1617773759135" TEXT="磁盘配额&amp;lt;br&amp;gt;记录件所有者所用数据块的总数&amp;lt;br&amp;gt;软限制, 硬限制"></node></node><node CREATED="1617773759135" ID="ID_165eba49f3cd" MODIFIED="1617773759135" TEXT="文件系统备份"><node CREATED="1617773759135" ID="ID_84b88363c1fc" MODIFIED="1617773759135" TEXT="物理转储"></node><node CREATED="1617773759135" ID="ID_91175735a982" MODIFIED="1617773759135" TEXT="逻辑转储&amp;lt;br&amp;gt;从一个或几个指定的目录开始，&amp;lt;br&amp;gt;递归地转储其自给定基准日期.&amp;lt;br&amp;gt;后有所更改的全部文件和目录。"><node CREATED="1617773759135" ID="ID_8d868c639b7d" MODIFIED="1617773759135" TEXT="逻辑转储算法要维持一个以i节点号为索引的位图，每个i节点包含了几位。&amp;lt;br&amp;gt;随着算法的执行，位图中的这些位会被设置或清除。算法的执行分为四个阶段。&amp;lt;br&amp;gt;第一阶段从起始目录(本例中为根目录)开始检查其中的所有目录项。&amp;lt;br&amp;gt;对每一个修改过的文件，该算法将在位图中标记其i节点。&amp;lt;br&amp;gt;算法还标记并递归检查每一个目录(不管是否修改过)。"></node><node CREATED="1617773759135" ID="ID_751b7606c510" MODIFIED="1617773759135" TEXT="每个被转储的目录都用目录的属性(所有者、时间等)作为前缀"></node><node CREATED="1617773759136" ID="ID_055dfc543ad6" MODIFIED="1617773759136" TEXT="特殊文件、命名管道以及类似的文件, /dev ,都不应该转储"></node></node></node><node CREATED="1617773759136" ID="ID_04ed24a23bb8" MODIFIED="1617773759136" TEXT="RAID"></node><node CREATED="1617773759136" ID="ID_5a1df60221c0" MODIFIED="1617773759136" TEXT="文件系统的一致性&amp;lt;br&amp;gt;文件出现错误先修改保证系统一致性,&amp;lt;br&amp;gt;然后报告，由用户检查文件受损情况"><node CREATED="1617773759136" ID="ID_2716d8cdaa44" MODIFIED="1617773759136" TEXT="块的一致性检查&amp;lt;br&amp;gt;文件的一致性检查"><node CREATED="1617773759136" ID="ID_77392d31f493" MODIFIED="1617773759136" TEXT="程序构造两张表，每张表中为每个块设立一个计数器，都初始化为0。&amp;lt;br&amp;gt;第一个表中的计数器跟踪该块在文件中的出现次数，&amp;lt;br&amp;gt;第二个表中的计数器跟踪该块在空闲表中的出现次数。"></node></node><node CREATED="1617773759136" ID="ID_be2636827001" MODIFIED="1617773759136" TEXT="目录系统"><node CREATED="1617773759136" ID="ID_f86dad975614" MODIFIED="1617773759136" TEXT="构造一张计数器表， 一个文件(而不是一个块)对应于一个计数器。&amp;lt;br&amp;gt;说明每个文件被多少个目录包含"></node></node></node></node><node CREATED="1617773759136" ID="ID_1494395628c6" MODIFIED="1617773759136" TEXT="文件系统性能"><node CREATED="1617773759136" ID="ID_5b6a991b2952" MODIFIED="1617773759136" TEXT="高速缓存"></node><node CREATED="1617773759136" ID="ID_ef75648815dd" MODIFIED="1617773759136" TEXT="块提前读"></node><node CREATED="1617773759136" ID="ID_d1c01380f9a0" MODIFIED="1617773759136" TEXT="减少磁盘臂运动"><node CREATED="1617773759136" ID="ID_067b2a848a99" MODIFIED="1617773759136" TEXT="将磁盘分成多个柱面组，每个柱面组有自己的i节点、数据块和空闲表"></node></node></node><node CREATED="1617773759136" ID="ID_cea175882929" MODIFIED="1617773759136" TEXT="磁盘碎片整理"></node><node CREATED="1617773759136" ID="ID_05955ce6006c" MODIFIED="1617773759136" TEXT="文件系统实例"><node CREATED="1617773759136" ID="ID_9bad1e1f08cd" MODIFIED="1617773759136" TEXT="CD-ROM文件系统&amp;lt;br&amp;gt;沿一个连续的螺旋线来顺序存储信息"></node><node CREATED="1617773759136" ID="ID_d6d000694a2f" MODIFIED="1617773759136" TEXT="MOS-DOS&amp;lt;br&amp;gt;"></node><node CREATED="1617773759136" ID="ID_f747245c6d8b" MODIFIED="1617773759136" TEXT="UNIX V7&amp;lt;br&amp;gt;"></node></node></node></node><node CREATED="1617773759136" ID="ID_91b250438378" MODIFIED="1617773759136" TEXT="使用"><node CREATED="1617773759136" ID="ID_254e69d06a63" MODIFIED="1617773759136" TEXT="基于文本 shell"><node CREATED="1617773759136" ID="ID_88c0a6b236b9" MODIFIED="1617773759136" TEXT="操作系统是进行系统调用的代码"></node><node CREATED="1617773759136" ID="ID_dcd22e2394ba" MODIFIED="1617773759136" TEXT="如果用户在命令后加上一个“＆”符号，则shell将不等待其结束，"></node></node><node CREATED="1617773759136" ID="ID_1a5abe5f28d6" MODIFIED="1617773759136" TEXT="基于图标 图形用户界面 (Graphical User Inerface ,GUI)"></node></node><node CREATED="1617773759136" ID="ID_d1521354c3f1" MODIFIED="1617773759136" TEXT="输入/输出(I/O)"><node CREATED="1617773759136" ID="ID_94d2ad3f3fb4" MODIFIED="1617773759136" TEXT="I/O硬件原理"><node CREATED="1617773759136" ID="ID_4ea8532a0c75" MODIFIED="1617773759136" TEXT="I/O 设备"><node CREATED="1617773759136" ID="ID_b38bf31a3e5b" MODIFIED="1617773759136" TEXT="设备控制器&amp;lt;br&amp;gt;I/O设备一般由机械部件和电子部件两部分组成。&amp;lt;br&amp;gt;通常可以将这两部分分开处理，&amp;lt;br&amp;gt;以提供更加模块化和更加通用的设计。&amp;lt;br&amp;gt;电子部件称作设备控制器(device controller)&amp;lt;br&amp;gt;或适配器(adapter)。"><node CREATED="1617773759136" ID="ID_11ed63dda0a4" MODIFIED="1617773759136" TEXT="控制器是插在电路板上的一块芯片或一组芯片&amp;lt;br&amp;gt;这块电路板物理地控制设备。它从操作系统接收命令&amp;lt;br&amp;gt;"></node><node CREATED="1617773759136" ID="ID_8b1c7d860b69" MODIFIED="1617773759136" TEXT="控制器的任务是为操作系统提供一个简单的接口&amp;lt;br&amp;gt;控制器中经常安装一个小的嵌入式计算机，&amp;lt;br&amp;gt;该嵌入式计算机运行为执行这些工作而专门编好的程序&amp;lt;br&amp;gt;"></node><node CREATED="1617773759136" ID="ID_4e12f7c47bb9" MODIFIED="1617773759136" TEXT="每个设备控制器都有少量的用于通信的寄存器。"><node CREATED="1617773759136" ID="ID_64b1fef8054b" MODIFIED="1617773759136" TEXT="例如，一个最小的磁盘控制器也会有用于指定磁盘地址、内存地址、扇区计数和方向(读或写)的寄存器。&amp;lt;br&amp;gt;要激活控制器，设备驱动程序从操作系统获得一条命令，然后翻译成对应的值，并写进设备寄存器中。&amp;lt;br&amp;gt;所有设备寄存器的集合构成了I/O端口空间"></node></node></node><node CREATED="1617773759136" ID="ID_560f751e1ddd" MODIFIED="1617773759136" TEXT="设备本身"><node CREATED="1617773759136" ID="ID_b08f773333c6" MODIFIED="1617773759136" TEXT="设备本身有个相对简单的接口"></node><node CREATED="1617773759136" ID="ID_56d08c8d5a0b" MODIFIED="1617773759136" TEXT="操作系统看到的是对控制器的接口，&amp;lt;br&amp;gt;这个接口可能和设备接口有很大的差别"></node></node><node CREATED="1617773759136" ID="ID_66044e562f57" MODIFIED="1617773759136" TEXT="输入输出方式"><node CREATED="1617773759136" ID="ID_897253a3d751" MODIFIED="1617773759136" TEXT="内存映射I/O"><node CREATED="1617773759136" ID="ID_eb4e0458293d" MODIFIED="1617773759136" TEXT="寻址控制器"></node></node><node CREATED="1617773759136" ID="ID_5d51282555a6" MODIFIED="1617773759136" TEXT="直接存储器访问(Direct Memory Access，DMA)芯片"><node CREATED="1617773759136" ID="ID_774cb2e9ad11" MODIFIED="1617773759136" TEXT="CPU对DMA芯片进行设置，&amp;lt;br&amp;gt;说明需要传送的字节数、有关的设备和内存地址以及操作方向，&amp;lt;br&amp;gt;接着启动DMA。当DMA芯片完成时，它引发一个中断，"><node CREATED="1617773759136" ID="ID_52bffb6fb524" MODIFIED="1617773759136" TEXT="许多总线能够以两种模式操作: &amp;lt;br&amp;gt;每次一字模式和块模式。&amp;lt;br&amp;gt;某些DMA控制器也能够以这两种模式操作。"><node CREATED="1617773759136" ID="ID_d6509138e3fb" MODIFIED="1617773759136" TEXT="周期窃取(cycle stealing)"><node CREATED="1617773759136" ID="ID_e7dfc32b26d8" MODIFIED="1617773759136" TEXT="DMA控制器请求传送一个字并且得到这个字。&amp;lt;br&amp;gt;如果CPU也想使用总线，它必须等待。&amp;lt;br&amp;gt;因为设备控制器偶尔偷偷溜入并且从CPU&amp;lt;br&amp;gt;偷走一个临时的总线周期，从而轻微地延迟CPU。"></node></node><node CREATED="1617773759136" ID="ID_302e6abb38e4" MODIFIED="1617773759136" TEXT="突发模式(burst mode)"><node CREATED="1617773759136" ID="ID_568ebf5b152e" MODIFIED="1617773759136" TEXT="DMA控制器通知设备获得总线，&amp;lt;br&amp;gt;发起一连串的传送，然后释放总线。"></node></node></node></node><node CREATED="1617773759136" ID="ID_47ab282aabe7" MODIFIED="1617773759136" TEXT="磁盘内部缓冲区"><node CREATED="1617773759136" ID="ID_017c7f3e4288" MODIFIED="1617773759136" TEXT="磁盘控制器可以在开始传送之前检验校验和"></node><node CREATED="1617773759136" ID="ID_221df089e922" MODIFIED="1617773759136" TEXT="缓和总线的使用&amp;lt;br&amp;gt;"></node></node></node></node><node CREATED="1617773759136" ID="ID_145380d47346" MODIFIED="1617773759136" TEXT="分类&amp;lt;br&amp;gt;时钟既不是块可寻址的，也不产生或接收字符流。&amp;lt;br&amp;gt;它所做的工作就是按照预先规定好的时间间隔产生中断。&amp;lt;br&amp;gt;内存映射的显示器也不适用于此模型。"><node CREATED="1617773759136" ID="ID_7ae248342688" MODIFIED="1617773759136" TEXT="块设备(block device)"><node CREATED="1617773759136" ID="ID_c99a6fc13f8a" MODIFIED="1617773759136" TEXT="块设备把信息存储在固定大小的块中，每个块有自己的地址&amp;lt;br&amp;gt;硬盘、CD-ROM和USB盘是最常见的块设备。"></node></node><node CREATED="1617773759136" ID="ID_b191bb1d2341" MODIFIED="1617773759136" TEXT="字符设备(character device)"><node CREATED="1617773759136" ID="ID_10bfcadad38f" MODIFIED="1617773759136" TEXT="字符设备以字符为单位发送或接收一个字符流，&amp;lt;br&amp;gt;而不考虑任何块结构. 字符设备是不可寻址的，&amp;lt;br&amp;gt;也没有任何寻道操作。打印机、网络接口、鼠标(用作指点设备)"></node></node></node></node><node CREATED="1617773759136" ID="ID_4d2c3b8e5332" MODIFIED="1617773759136" TEXT="中断&amp;lt;br&amp;gt;设备驱动程序启动设备并且让该设备在操作完成时发出一个中断&amp;lt;br&amp;gt;中断经常会在非常不合适的时刻发生，CPU有办法关闭中断并在稍后再开启中断。&amp;lt;br&amp;gt;在中断关闭时，任何已经发出中断的设备，可以继续保持其中断信号，但是CPU不会被中断，&amp;lt;br&amp;gt;直至中断再次启用为止。&amp;lt;br&amp;gt;如果在中断关闭时，已有多个设备发出了中断，中断控制器将决定先处理哪个中断，&amp;lt;br&amp;gt;通常这取决于事先赋予每个设备的静态优先级。最高优先级的设备赢得竞争。&amp;lt;br&amp;gt;"><node CREATED="1617773759136" ID="ID_bca891ac22b9" MODIFIED="1617773759136" TEXT="中断控制器"><node CREATED="1617773759136" ID="ID_8e03eed8b82a" MODIFIED="1617773759136" TEXT="在第1步，设备驱动程序通过写设备寄存器通知设备控制器做什么。&amp;lt;br&amp;gt;然后，设备控制器启动该设备&amp;lt;br&amp;gt;"></node><node CREATED="1617773759136" ID="ID_6574a027cdda" MODIFIED="1617773759136" TEXT="第2步: 当设备控制器传送完毕被告知的要进行读写的字节数量后，&amp;lt;br&amp;gt;它就使用特定的总线发信号给中断控制器芯片。"></node><node CREATED="1617773759136" ID="ID_68c49125452c" MODIFIED="1617773759136" TEXT="第3步:&amp;nbsp;中断控制器已经准备接收中断 ，&amp;lt;br&amp;gt;它会在CPU芯片的一个管脚上声明，&amp;lt;br&amp;gt;中断控制器在地址线上放置一个数字表明哪个设备需要关注，&amp;lt;br&amp;gt;并且置起一个中断CPU的信号。"></node><node CREATED="1617773759136" ID="ID_00bd6830ea62" MODIFIED="1617773759136" TEXT="第4步:&amp;nbsp;中断控制器把该设备的编号放到总线上，&amp;lt;br&amp;gt;这样CPU可以读总线，并且知道哪个设备刚刚完成了操作"></node><node CREATED="1617773759136" ID="ID_438dfb634002" MODIFIED="1617773759136" TEXT="中断服务过程开始运行后，它立刻通过将一个确定的值写到中断控制器的某个I/O端口来对中断做出应答。&amp;lt;br&amp;gt;这一应答告诉中断控制器可以自由地发出另一个中断。通过让CPU延迟这一应答直到它准备好处理下一个中断，&amp;lt;br&amp;gt;就可以避免与多个几乎同时发生的中断相牵涉的竞争状态。"></node></node><node CREATED="1617773759136" ID="ID_f9bee1525712" MODIFIED="1617773759136" TEXT="中断向量(interrupt vector)&amp;lt;br&amp;gt;地址线上的数字被用做指向一个称为中断向量(interrupt vector)的表格的索引，&amp;lt;br&amp;gt;以便读取一个新的程序计数器。&amp;lt;br&amp;gt;一旦CPU决定取中断，通常程序计数器和PSW就被压入当前堆栈中，&amp;lt;br&amp;gt;并且CPU被切换到用户态。设备编号可以成为部分内存的一个引用，&amp;lt;br&amp;gt;用于寻找该设备中断处理程序的地址。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;当中断处理程序(中断设备的设备驱动程序的一部分)开始后，&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;它取走已入栈的程序计数器和PSW，&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;并保存之，然后查询设备的状态。&amp;lt;br&amp;gt;在中断处理程序全部完成之后，&amp;lt;br&amp;gt;它返回到先前运行的用户程序中尚未执行的头一条指令。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;中断向量的位置可以硬布线到机器中，&amp;lt;br&amp;gt;也可以在内存中的任何地方通过一个CPU寄存器(由操作系统装载)指向其起点。"></node><node CREATED="1617773759136" ID="ID_fea937073435" MODIFIED="1617773759136" TEXT="精确中断和不精确中断"><node CREATED="1617773759136" ID="ID_6c841fab3336" MODIFIED="1617773759136" TEXT="将机器留在一个明确状态的中断称为精确中断(precise interrupt)"><node CREATED="1617773759136" ID="ID_8568684f04ae" MODIFIED="1617773759136" TEXT="PC(程序计数器)保存在一个已知的地方。&amp;lt;br&amp;gt;PC所指向的指令之前的所有指令已经完全执行。&amp;lt;br&amp;gt;PC所指向的指令之后的所有指令都没有执行。"></node><node CREATED="1617773759136" ID="ID_d2546d36e0e1" MODIFIED="1617773759136" TEXT="为精确中断付出的代价是CPU内部极其复杂的中断逻辑，&amp;lt;br&amp;gt;以便确保当中断控制器发出信号想要导致一个中断时，&amp;lt;br&amp;gt;允许直到某一点之前的所有指令完成&amp;lt;br&amp;gt;而不允许这一点之后的指令对机器状态产生任何重要的影响"></node></node><node CREATED="1617773759136" ID="ID_32e3ec44405c" MODIFIED="1617773759136" TEXT="不满足这些要求的中断称为不精确中断(imprecise interrupt)"><node CREATED="1617773759136" ID="ID_387c420ceb42" MODIFIED="1617773759136" TEXT="缓慢的中断使得非常快速的超标量CPU(没有精确中断功能的CPU)有时并不适合实时工作&amp;lt;br&amp;gt;不精确中断使得操作系统更为复杂而且运行得更加缓慢"></node></node></node></node></node><node CREATED="1617773759136" ID="ID_e780264d2998" MODIFIED="1617773759136" TEXT="I/O软件原理
"><node CREATED="1617773759136" ID="ID_9d1f85e89280" MODIFIED="1617773759136" TEXT="问题&amp;lt;br&amp;gt;"><node CREATED="1617773759136" ID="ID_84ac6ece17da" MODIFIED="1617773759136" TEXT="错误处理(error handling)"></node><node CREATED="1617773759136" ID="ID_e8b428ec3223" MODIFIED="1617773759136" TEXT="设备独立性与统一命名(uniform naming)"></node><node CREATED="1617773759136" ID="ID_24f59e997244" MODIFIED="1617773759136" TEXT="同步(synchronous)(即阻塞)和&amp;lt;br&amp;gt;异步(asynchronous)(即中断驱动)传输"><node CREATED="1617773759136" ID="ID_5964f2bc630e" MODIFIED="1617773759136" TEXT="大多数物理I/O是异步的&amp;lt;br&amp;gt;CPU启动传输后便转去做其他工作，&amp;lt;br&amp;gt;直到中断发生"></node></node><node CREATED="1617773759136" ID="ID_735f7bfc2de3" MODIFIED="1617773759136" TEXT="缓冲(buffering)"></node><node CREATED="1617773759136" ID="ID_ba0454e4e5f8" MODIFIED="1617773759136" TEXT="共享设备和独占设备"></node></node><node CREATED="1617773759136" ID="ID_b7724efcd2a0" MODIFIED="1617773759136" TEXT="程序控制I/O(programmed I/O)&amp;lt;br&amp;gt;CPU做全部工作"><node CREATED="1617773759136" ID="ID_13367976d749" MODIFIED="1617773759136" TEXT="轮询(polling)或忙等待(busy waiting)"><node CREATED="1617773759136" ID="ID_fedb52909d23" MODIFIED="1617773759136" TEXT="CPU一直轮询设备直到对应的I/O操作完成"></node></node></node><node CREATED="1617773759136" ID="ID_9c3b63825755" MODIFIED="1617773759136" TEXT="中断驱动I/O"><node CREATED="1617773759136" ID="ID_0a14f18287ec" MODIFIED="1617773759136" TEXT="是不是可以理解为事件驱动?&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759136" ID="ID_8c0e651457f5" MODIFIED="1617773759136" TEXT="使用DMA的I/O"><node CREATED="1617773759136" ID="ID_a20e263de473" MODIFIED="1617773759136" TEXT="DMA控制器而不是主CPU做全部工作"></node></node></node><node CREATED="1617773759136" ID="ID_4c441cd6b7ef" MODIFIED="1617773759136" TEXT="I/O软件层次"><node CREATED="1617773759136" ID="ID_fa4b47ab300c" MODIFIED="1617773759136" TEXT="中断处理程序"></node><node CREATED="1617773759136" ID="ID_730b7ffa5f71" MODIFIED="1617773759136" TEXT="设备驱动(device dirve)"><node CREATED="1617773759136" ID="ID_cbf8ac34459f" MODIFIED="1617773759136" TEXT="每个控制器厂家必须为所支持的操作系统提供相应的设备驱动程序&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;"></node><node CREATED="1617773759136" ID="ID_c4b0011be22d" MODIFIED="1617773759136" TEXT="为了能够使用设备驱动程序，必须把设备驱动程序装入到操作系统中，
这样它可在核心态中运行。
理论上，设备驱动程序可以在内核外运行，
但是几乎没有系统支持这种可能的方式，
因为它要求允许在用户空间的设备驱动程序能够以控制的方式访问设备，
这是一种极少得到支持的功能。"></node><node CREATED="1617773759136" ID="ID_d8942f68f4e5" MODIFIED="1617773759136" TEXT="装入方式"><node CREATED="1617773759136" ID="ID_7d38ccf0b646" MODIFIED="1617773759136" TEXT="将内核与设备驱动程序重新链接,然后重新启动系统"></node><node CREATED="1617773759136" ID="ID_f4a8eee1bbae" MODIFIED="1617773759136" TEXT="在一个操作系统文件中设置一个入口, 并通知该文件需要一个设备驱动程序.&amp;lt;br&amp;gt;然后重新启动系统, 在系统启动时, 操作系统去寻找所需的设备驱动程序并装载"></node><node CREATED="1617773759136" ID="ID_da7e62992d4d" MODIFIED="1617773759136" TEXT="操作系统能够在运行时接受新的设备驱动程序并且立即将其安装好,无需重新启动系统"></node></node></node><node CREATED="1617773759136" ID="ID_05ecafb83866" MODIFIED="1617773759136" TEXT="设备无关的I/O软件"><node CREATED="1617773759136" ID="ID_988f1d26bfcf" MODIFIED="1617773759136" TEXT="设备驱动程序的统一接口"></node><node CREATED="1617773759136" ID="ID_7254b482c102" MODIFIED="1617773759136" TEXT="缓冲"><node CREATED="1617773759136" ID="ID_1b4f27cab36c" MODIFIED="1617773759136" TEXT="用户进程在用户空间中提供了一个包含n个字符的缓冲区，并且执行读入n个字符的读操作。&amp;lt;br&amp;gt;中断服务过程负责将到来的字符放入该缓冲区中直到缓冲区填满，然后唤醒用户进程。&amp;lt;br&amp;gt;将缓冲区锁定在内存中"></node><node CREATED="1617773759136" ID="ID_2656f2e6b755" MODIFIED="1617773759136" TEXT="另一种方法是在内核空间中创建一个缓冲区并且让中断处理程序将字符放到这个缓冲区中。&amp;lt;br&amp;gt;当该缓冲区被填满的时候，将包含用户缓冲区的页面调入内存(如果需要的话)，&amp;lt;br&amp;gt;并且在一次操作中将内核缓冲区的内容复制到用户缓冲区中。"><node CREATED="1617773759136" ID="ID_273665b64dae" MODIFIED="1617773759136" TEXT="双缓冲(double buffering)"></node><node CREATED="1617773759136" ID="ID_1a230256c6e2" MODIFIED="1617773759136" TEXT="循环缓冲区(circular buffer)"></node></node></node><node CREATED="1617773759136" ID="ID_0637ba274b4d" MODIFIED="1617773759136" TEXT="错误报告"><node CREATED="1617773759136" ID="ID_30760c3dcb1d" MODIFIED="1617773759136" TEXT="编程错误"></node><node CREATED="1617773759136" ID="ID_005ba7aaef15" MODIFIED="1617773759136" TEXT="实际的I/O错误&amp;lt;br&amp;gt;硬件坏了&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759136" ID="ID_c8cdfc5af0e8" MODIFIED="1617773759136" TEXT="分配与释放专用设备"></node><node CREATED="1617773759136" ID="ID_6c9ad908a6e1" MODIFIED="1617773759136" TEXT="与设备无关的块大小"></node></node><node CREATED="1617773759136" ID="ID_9f17446db51c" MODIFIED="1617773759136" TEXT="用户空间的I/O软件"><node CREATED="1617773759136" ID="ID_b413a748f59b" MODIFIED="1617773759136" TEXT="假脱机"><node CREATED="1617773759136" ID="ID_908cf62c8d42" MODIFIED="1617773759136" TEXT="通过保护特殊文件来防止用户直接使用，可以解决某些进程不必要地长期空占打印机的问题"></node></node></node></node></node><node CREATED="1617773759136" ID="ID_2aba8ee7b677" MODIFIED="1617773759136" TEXT="安全性(security)"><node CREATED="1617773759136" ID="ID_79407f01967d" MODIFIED="1617773759136" TEXT="环境安全"><node CREATED="1617773759136" ID="ID_3d56f6c4b71d" MODIFIED="1617773759136" TEXT="威胁"><node CREATED="1617773759136" ID="ID_d14c6d19cff5" MODIFIED="1617773759136" TEXT="数据保密(data confidentiality)"></node><node CREATED="1617773759136" ID="ID_f78724e850c9" MODIFIED="1617773759136" TEXT="目标数据完整性(data integrity)"></node><node CREATED="1617773759136" ID="ID_db4c378a2b3e" MODIFIED="1617773759136" TEXT="目标系统可用性(system availability)"></node><node CREATED="1617773759136" ID="ID_1dd3b42d73bd" MODIFIED="1617773759136" TEXT="隐私(privacy)"></node></node><node CREATED="1617773759136" ID="ID_27698f767c9e" MODIFIED="1617773759136" TEXT="入侵者"><node CREATED="1617773759136" ID="ID_70047aac6fc7" MODIFIED="1617773759136" TEXT="非专业用户的随意浏览"></node><node CREATED="1617773759136" ID="ID_322553916c69" MODIFIED="1617773759136" TEXT="内部人员的窥视"></node><node CREATED="1617773759136" ID="ID_c18f57978a05" MODIFIED="1617773759136" TEXT="为获取利益而尝试"></node><node CREATED="1617773759136" ID="ID_8eec3cff4157" MODIFIED="1617773759136" TEXT="商业或军事间谍"></node><node CREATED="1617773759136" ID="ID_2141e7498e42" MODIFIED="1617773759136" TEXT="病毒"></node></node><node CREATED="1617773759136" ID="ID_8b193dcfbfe4" MODIFIED="1617773759136" TEXT="数据意外遗失"><node CREATED="1617773759136" ID="ID_57b1d28414c4" MODIFIED="1617773759136" TEXT="天灾"></node><node CREATED="1617773759136" ID="ID_af18e4618afa" MODIFIED="1617773759136" TEXT="软硬件错误"></node><node CREATED="1617773759136" ID="ID_7ce92e4e1ec2" MODIFIED="1617773759136" TEXT="人为过失"></node></node></node><node CREATED="1617773759136" ID="ID_1f4bf435c8cc" MODIFIED="1617773759136" TEXT="密码学"><node CREATED="1617773759136" ID="ID_a250c6137cfe" MODIFIED="1617773759136" TEXT="参考密码学"></node></node><node CREATED="1617773759136" ID="ID_3af56e8fd87e" MODIFIED="1617773759136" TEXT="保护机制"><node CREATED="1617773759136" ID="ID_7b55419045a1" MODIFIED="1617773759136" TEXT="保护域"><node CREATED="1617773759136" ID="ID_62f01efbaa53" MODIFIED="1617773759136" TEXT="域(domain)是一对(对象，权限)组合。每一对组合指定一个对象和&amp;lt;br&amp;gt;一些可在其上运行的操作子集。这里权限(right)是指对某个操作的执行许可。"></node><node CREATED="1617773759136" ID="ID_74454b73f4f8" MODIFIED="1617773759136" TEXT="最基本的原则就是最低权限原则(Principle of Least Authority，POLA)"></node></node><node CREATED="1617773759136" ID="ID_ff89d9c057d7" MODIFIED="1617773759136" TEXT="访问控制列表(Access Control List，ACL) &amp;lt;br&amp;gt;结合用户组(域)可以方便管理&amp;lt;br&amp;gt;"></node><node CREATED="1617773759136" ID="ID_103e9a5c70f3" MODIFIED="1617773759136" TEXT="权能字列表(capability list或C-list)"><node CREATED="1617773759136" ID="ID_6adaec4edfad" MODIFIED="1617773759136" TEXT="防篡改"><node CREATED="1617773759136" ID="ID_6f93cf1d39f7" MODIFIED="1617773759136" TEXT="建立带标记的体系结构(tagged architecture)"></node><node CREATED="1617773759136" ID="ID_c9bbcfc79a63" MODIFIED="1617773759136" TEXT="操作系统里保存权能字列表"></node><node CREATED="1617773759136" ID="ID_1c1676cc3ced" MODIFIED="1617773759136" TEXT="权能字列表放在用户空间里，并用加密方法进行管理"></node></node></node><node CREATED="1617773759136" ID="ID_6a253417b31e" MODIFIED="1617773759136" TEXT="可信系统"></node><node CREATED="1617773759136" ID="ID_f2bed7bd2d63" MODIFIED="1617773759136" TEXT="可信计算基"></node><node CREATED="1617773759136" ID="ID_dd79f08a851f" MODIFIED="1617773759136" TEXT="多级安全"><node CREATED="1617773759136" ID="ID_427b6d6f3453" MODIFIED="1617773759136" TEXT="Bell-La Padula模型"></node><node CREATED="1617773759136" ID="ID_6cbd155b2a20" MODIFIED="1617773759136" TEXT="Biba模型"></node></node><node CREATED="1617773759136" ID="ID_4545d96a708d" MODIFIED="1617773759136" TEXT="隐蔽信道"><node CREATED="1617773759136" ID="ID_43512092a0d2" MODIFIED="1617773759136" TEXT="隐写术"><node CREATED="1617773759136" ID="ID_7c1ab3881603" MODIFIED="1617773759136" TEXT="隐藏的水印"></node><node CREATED="1617773759136" ID="ID_c1d19afd4d94" MODIFIED="1617773759136" TEXT="隐藏的信息"></node></node></node><node CREATED="1617773759136" ID="ID_ebdfd3a1f42a" MODIFIED="1617773759136" TEXT="认证"><node CREATED="1617773759136" ID="ID_42e65fbb2387" MODIFIED="1617773759136" TEXT="使用口令认证"><node CREATED="1617773759136" ID="ID_98e1910df5b7" MODIFIED="1617773759136" TEXT="系统只要看到非法的登录名就禁止登录。&amp;lt;br&amp;gt;这样做是一个错误，因为系统让骇客有机会尝试，直到找到合法的登录名"></node><node CREATED="1617773759136" ID="ID_9b5ab58ce147" MODIFIED="1617773759136" TEXT="通常被用户采用的口令包括: 性别词汇、辱骂语、人名、度假地和办公室常见的物体"></node><node CREATED="1617773759136" ID="ID_de91b936b95c" MODIFIED="1617773759136" TEXT="大多数用户都趋向于选择简单且强度很弱的密码，并且在多个网站中重复使用他们"></node><node CREATED="1617773759137" ID="ID_56233c3be816" MODIFIED="1617773759137" TEXT="单向散列链(one-way hash chain)"></node></node><node CREATED="1617773759137" ID="ID_d3f79a05a25f" MODIFIED="1617773759137" TEXT="使用实际物体的认证方式"><node CREATED="1617773759137" ID="ID_44332cc5197f" MODIFIED="1617773759137" TEXT="储值卡"></node><node CREATED="1617773759137" ID="ID_47b323c8a81d" MODIFIED="1617773759137" TEXT="智能卡"></node></node><node CREATED="1617773759137" ID="ID_a8d6ea0b5062" MODIFIED="1617773759137" TEXT="使用生物识别的验证方式"><node CREATED="1617773759137" ID="ID_21a365e14b06" MODIFIED="1617773759137" TEXT="任何两个人都具有不同的视网膜组织血管(patterns)，即使是同卵双胞胎"></node><node CREATED="1617773759137" ID="ID_5c26c1ca4c5d" MODIFIED="1617773759137" TEXT="声音测定"></node><node CREATED="1617773759137" ID="ID_43be984139db" MODIFIED="1617773759137" TEXT="指纹&amp;lt;br&amp;gt;"></node></node></node></node><node CREATED="1617773759137" ID="ID_30f53e912c5d" MODIFIED="1617773759137" TEXT="内部攻击"><node CREATED="1617773759137" ID="ID_f26c1985c8d1" MODIFIED="1617773759137" TEXT="逻辑炸弹"></node><node CREATED="1617773759137" ID="ID_9007ed2e489e" MODIFIED="1617773759137" TEXT="后门陷阱"></node><node CREATED="1617773759137" ID="ID_af5dcc09b6a8" MODIFIED="1617773759137" TEXT="登录欺骗"></node></node><node CREATED="1617773759137" ID="ID_ef0a9a8e88cf" MODIFIED="1617773759137" TEXT="利用代码漏洞"><node CREATED="1617773759137" ID="ID_14d24fcecc50" MODIFIED="1617773759137" TEXT="扫描"><node CREATED="1617773759137" ID="ID_cdcacf0e770d" MODIFIED="1617773759137" TEXT="1)运行自动端口扫描，以查找接受远程连接的计算机。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;2)尝试通过猜测用户名和密码进行登录。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;3)一旦登录成功，则启动特定的具有漏洞的程序，并产生输入使得程序中的漏洞被触发。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;4)如果该程序运行SETUID到root，则创建一个SETUID root shell。&amp;lt;br&amp;gt;5)启动一个僵尸程序，监听IP端口的指令。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;6)对目标机器进行配置，确保该僵尸程序在系统每次重新启动后都会自动运行。"></node></node><node CREATED="1617773759137" ID="ID_b81fd9a8a388" MODIFIED="1617773759137" TEXT="缓冲区溢出攻击"><node CREATED="1617773759137" ID="ID_d535dc48c0d4" MODIFIED="1617773759137" TEXT="主程序在运行时局部变量是放在栈里的。在某些情况下，系统会调用过程A，&amp;lt;br&amp;gt;标准的调用步骤是把返回地址(指向调用语句之后的指令)压入栈，&amp;lt;br&amp;gt;然后将程序的控制权交给A，由A不断减少栈指针地址来分配本地变量的存储空间。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;C语言函数库的gets函数可以把(未知大小的)串变量读入定长的缓冲区里，&amp;lt;br&amp;gt;但并不校验是否溢出，这样就很容易遭受攻击。有些编译器甚至通过检查gets的使用来发出警告。"></node><node CREATED="1617773759137" ID="ID_cc1b5e7b4f47" MODIFIED="1617773759137" TEXT="这类漏洞很难被修复，因为已有的大量C代码都没有对缓冲区溢出进行检查。"></node></node><node CREATED="1617773759137" ID="ID_9f7b1db2cdbf" MODIFIED="1617773759137" TEXT="格式化字符串攻击(format string attack)"><node CREATED="1617773759137" ID="ID_75e8c750885b" MODIFIED="1617773759137" TEXT="C语言printf“%n”它不打印出任何信息，&amp;lt;br&amp;gt;而是计算直到“%n”出现之前，总共打印了多少字符，&amp;lt;br&amp;gt;并且将这个数字保存到printf下一个将要使用的参数中去。"></node></node><node CREATED="1617773759137" ID="ID_a459d57099da" MODIFIED="1617773759137" TEXT="返回libc攻击(return to libc attack)"></node><node CREATED="1617773759137" ID="ID_0dc4b83ccc16" MODIFIED="1617773759137" TEXT="整数溢出攻击"></node><node CREATED="1617773759137" ID="ID_a53d70c94fba" MODIFIED="1617773759137" TEXT="代码注入攻击"></node><node CREATED="1617773759137" ID="ID_6dc35d7a3b3b" MODIFIED="1617773759137" TEXT="权限提升攻击(privilege escalation attack)"></node></node><node CREATED="1617773759137" ID="ID_fc4c32959c9e" MODIFIED="1617773759137" TEXT="恶意软件"><node CREATED="1617773759137" ID="ID_bb84a1e43e90" MODIFIED="1617773759137" TEXT="特洛伊木马"></node><node CREATED="1617773759137" ID="ID_29117c1e37f3" MODIFIED="1617773759137" TEXT="病毒"><node CREATED="1617773759137" ID="ID_da660b45e953" MODIFIED="1617773759137" TEXT="分类&amp;lt;br&amp;gt;"><node CREATED="1617773759137" ID="ID_f72987ec16ed" MODIFIED="1617773759137" TEXT="共事者病毒(companion virus)"><node CREATED="1617773759137" ID="ID_cfb6e5848800" MODIFIED="1617773759137" TEXT="并不真正感染程序，但当程序执行的时候它也执行"></node></node><node CREATED="1617773759137" ID="ID_c6b0c41cd157" MODIFIED="1617773759137" TEXT="覆盖病毒(overwriting virus)"></node><node CREATED="1617773759137" ID="ID_acc0de186e2b" MODIFIED="1617773759137" TEXT="寄生病毒(parasitic virus)"></node><node CREATED="1617773759137" ID="ID_e146cb89a6ad" MODIFIED="1617773759137" TEXT="内存驻留病毒(memory-resident virus)"></node><node CREATED="1617773759137" ID="ID_ebc3069336dd" MODIFIED="1617773759137" TEXT="引导扇区病毒"><node CREATED="1617773759137" ID="ID_c8da4c44c746" MODIFIED="1617773759137" TEXT="伪装成坏扇区"></node></node><node CREATED="1617773759137" ID="ID_4538dedc8f2b" MODIFIED="1617773759137" TEXT="设备驱动病毒(device driver virus)"></node><node CREATED="1617773759137" ID="ID_4826be12bfa1" MODIFIED="1617773759137" TEXT="宏病毒"></node><node CREATED="1617773759137" ID="ID_fbb753313bca" MODIFIED="1617773759137" TEXT="源代码病毒"></node><node CREATED="1617773759137" ID="ID_477bf45c08fa" MODIFIED="1617773759137" TEXT="多形态病毒(polymorphic virus)"><node CREATED="1617773759137" ID="ID_a6ebf307679e" MODIFIED="1617773759137" TEXT="每次复制时都发生变异的病毒"></node></node></node><node CREATED="1617773759137" ID="ID_05fbcfc48f60" MODIFIED="1617773759137" TEXT="传播"></node></node><node CREATED="1617773759137" ID="ID_ac3f13ef23f5" MODIFIED="1617773759137" TEXT="蠕虫"></node><node CREATED="1617773759137" ID="ID_6d8fed442f7f" MODIFIED="1617773759137" TEXT="间谍软件(spyware)"></node><node CREATED="1617773759137" ID="ID_a277b9ed66f0" MODIFIED="1617773759137" TEXT="rootkit"><node CREATED="1617773759137" ID="ID_d785e05b9f77" MODIFIED="1617773759137" TEXT="固件rootkit"></node><node CREATED="1617773759137" ID="ID_8ea0a81ffb41" MODIFIED="1617773759137" TEXT="管理程序rootkit"></node><node CREATED="1617773759137" ID="ID_692ffa683b8b" MODIFIED="1617773759137" TEXT="内核rootkit"></node><node CREATED="1617773759137" ID="ID_8eb1b1e50f45" MODIFIED="1617773759137" TEXT="库rootkit"></node><node CREATED="1617773759137" ID="ID_edc3279679a9" MODIFIED="1617773759137" TEXT="应用程序rootkit"></node></node></node><node CREATED="1617773759137" ID="ID_0d0fb111a3d4" MODIFIED="1617773759137" TEXT="防御(defense)"><node CREATED="1617773759137" ID="ID_71037d31348e" MODIFIED="1617773759137" TEXT="防火墙(firewall)"><node CREATED="1617773759137" ID="ID_0b7a4727d5fc" MODIFIED="1617773759137" TEXT="无状态防护墙(stateless firewall)"></node><node CREATED="1617773759137" ID="ID_3bbeb37ac0ad" MODIFIED="1617773759137" TEXT="入侵检测系统(Intrusion Detection System，IDS)"></node></node><node CREATED="1617773759137" ID="ID_2e39649e7077" MODIFIED="1617773759137" TEXT="反恶意软件的程序(antimalware program)(antivirus program)"><node CREATED="1617773759137" ID="ID_0a24320ee3f2" MODIFIED="1617773759137" TEXT="病毒扫描器"></node><node CREATED="1617773759137" ID="ID_1fa9ebf7e674" MODIFIED="1617773759137" TEXT="完整性检查程序(integrity checking)"></node><node CREATED="1617773759137" ID="ID_e596896e86ab" MODIFIED="1617773759137" TEXT="行为检查(behavioral checking)"></node></node><node CREATED="1617773759137" ID="ID_a3c1ff7cd93a" MODIFIED="1617773759137" TEXT="代码签名"></node><node CREATED="1617773759137" ID="ID_8568286d482e" MODIFIED="1617773759137" TEXT="囚禁(jailing)"></node><node CREATED="1617773759137" ID="ID_d09045a2beb0" MODIFIED="1617773759137" TEXT="沙盒法(sandboxing)"></node><node CREATED="1617773759137" ID="ID_8f4f75376633" MODIFIED="1617773759137" TEXT="解释运行并阻止它们获得对硬件的控制"></node></node></node></node><node CREATED="1617773759137" ID="ID_0addc844c809" POSITION="right" MODIFIED="1617773759137" TEXT="多媒体"><node CREATED="1617773759137" ID="ID_734ca2e9a11c" MODIFIED="1617773759137" TEXT="多媒体简介"><node CREATED="1617773759137" ID="ID_2b1d09a85907" MODIFIED="1617773759137" TEXT="video on demand"></node><node CREATED="1617773759137" ID="ID_26f0354ca78e" MODIFIED="1617773759137" TEXT="视频服务器(video server)"><node CREATED="1617773759137" ID="ID_439a0b31a3aa" MODIFIED="1617773759137" TEXT="进入控制算法(admission control algorithm)"></node><node CREATED="1617773759137" ID="ID_48642f231273" MODIFIED="1617773759137" TEXT="多媒体服务器需要有资源预留方案"></node></node><node CREATED="1617773759137" ID="ID_640dc20fa1d9" MODIFIED="1617773759137" TEXT="机顶盒(set-top box)"></node><node CREATED="1617773759137" ID="ID_94dc46941252" MODIFIED="1617773759137" TEXT="NTSC制式每秒包含30帧"></node><node CREATED="1617773759137" ID="ID_82a65215255c" MODIFIED="1617773759137" TEXT="PAL和SECAM制式每秒包含25帧(对纯粹主义者而言是25.00帧)"></node><node CREATED="1617773759137" ID="ID_c2f8e66dc310" MODIFIED="1617773759137" TEXT="隔行扫描(interlacing)"><node CREATED="1617773759137" ID="ID_4e0626457719" MODIFIED="1617773759137" TEXT="首先显示所有的奇数扫描线，接着再显示所有的偶数扫描线&amp;lt;br&amp;gt;此处的半帧称为一个场(field)"></node></node><node CREATED="1617773759137" ID="ID_94117c82923c" MODIFIED="1617773759137" TEXT="逐行扫描(progressive)"></node><node CREATED="1617773759137" ID="ID_d801dee5032e" MODIFIED="1617773759137" TEXT="模拟信号"><node CREATED="1617773759137" ID="ID_5b9892731eb3" MODIFIED="1617773759137" TEXT="电视信号&amp;lt;br&amp;gt;"><node CREATED="1617773759137" ID="ID_f1508c7224d7" MODIFIED="1617773759137" TEXT="一个信道上进行传输，三个彩色信号必须组合成一个复合(composite)信号"></node><node CREATED="1617773759137" ID="ID_6f56d344a7a6" MODIFIED="1617773759137" TEXT="亮度"><node CREATED="1617773759137" ID="ID_29a5884e0de2" MODIFIED="1617773759137" TEXT="人的眼睛对亮度信号比对色度信号敏感得多"></node><node CREATED="1617773759137" ID="ID_5ff5c89bbaa6" MODIFIED="1617773759137" TEXT="亮度信号应该用与旧的黑白信号相同的频率进行广播，从而使其可以被黑白电视机接收"></node></node><node CREATED="1617773759137" ID="ID_d141986eb0a3" MODIFIED="1617773759137" TEXT="色度"></node><node CREATED="1617773759137" ID="ID_5021cebed78c" MODIFIED="1617773759137" TEXT="某些电视机有标着亮度、色调和饱和度(或者是亮度、色彩和颜色)字样的旋钮或调节装置，可以分别控制这三个信号。"></node></node></node><node CREATED="1617773759137" ID="ID_8cd5f6c71270" MODIFIED="1617773759137" TEXT="数字信号&amp;lt;br&amp;gt;"><node CREATED="1617773759137" ID="ID_0395f640843a" MODIFIED="1617773759137" TEXT="每一帧由呈矩形栅格的图像要素即像素(pixel)组成"></node></node></node><node CREATED="1617773759137" ID="ID_334fb5660693" MODIFIED="1617773759137" TEXT="多媒体文件"><node CREATED="1617773759137" ID="ID_9f122f4bbb0f" MODIFIED="1617773759137" TEXT="视频编码"><linktarget COLOR="#b0b0b0" DESTINATION="ID_9f122f4bbb0f" ENDARROW="Default" ID="Arrow_ID_9089e4f77ed7" SOURCE="ID_96ca7763573f" STARTARROW="None"/><node CREATED="1617773759137" ID="ID_b65568796d74" MODIFIED="1617773759137" TEXT="视频压缩"><node CREATED="1617773759137" ID="ID_e63dcd2cc567" MODIFIED="1617773759137" TEXT="编码(encoding)算法"></node><node CREATED="1617773759137" ID="ID_8233f1559aa6" MODIFIED="1617773759137" TEXT="解码(decoding)算法"></node><node CREATED="1617773759137" ID="ID_b6bd43b4bd28" MODIFIED="1617773759137" TEXT="这些算法具有某些不对称性"></node><node CREATED="1617773759137" ID="ID_d41b8e43ff63" MODIFIED="1617773759137" TEXT="编码/解码过程不必是100%可逆的"><node CREATED="1617773759137" ID="ID_10fdaa27f274" MODIFIED="1617773759137" TEXT="当解码输出不与原始输入严格相等时，系统被称为是有损的(lossy)。&amp;lt;br&amp;gt;所有用于多媒体的压缩系统都是有损的，因为这样可以获得更好的压缩效果。"></node></node><node CREATED="1617773759137" ID="ID_b13cf86bf2b5" MODIFIED="1617773759137" TEXT="JPEG标准(大体对称)&amp;lt;br&amp;gt;用于压缩连续色调静止图像(例如照片)的JPEG(Joint Photographic Experts Group，联合摄影专家组)标准"><node CREATED="1617773759137" ID="ID_72a69cb82d4a" MODIFIED="1617773759137" TEXT="RGB值中计算出一个亮度信号和两个色度信号&amp;lt;br&amp;gt;PAL 制式 是 YUV, NTSC 是 YIQ&amp;lt;br&amp;gt;"><node CREATED="1617773759137" ID="ID_453cc693aed1" MODIFIED="1617773759137" TEXT="块预制"></node><node CREATED="1617773759137" ID="ID_209c3c621f15" MODIFIED="1617773759137" TEXT="DCT(离散余弦变换)"></node><node CREATED="1617773759137" ID="ID_ac60d384712a" MODIFIED="1617773759137" TEXT="量化(quantization)"></node></node></node><node CREATED="1617773759137" ID="ID_d851eef59e1c" MODIFIED="1617773759137" TEXT="MPEG(Motion Picture Experts Group，运动图像专家组)标准"><node CREATED="1617773759137" ID="ID_f4aba42b3cd4" MODIFIED="1617773759137" TEXT="空间冗余"><node CREATED="1617773759137" ID="ID_b68242f39db0" MODIFIED="1617773759137" TEXT="分别对每一帧进行JPEG编码"></node></node><node CREATED="1617773759137" ID="ID_97e6119d7028" MODIFIED="1617773759137" TEXT="时间冗余"><node CREATED="1617773759137" ID="ID_5bd9a05f1f07" MODIFIED="1617773759137" TEXT="互相连续的帧常常几乎是完全相同的"></node></node><node CREATED="1617773759137" ID="ID_75a22dece1f1" MODIFIED="1617773759137" TEXT="MPEG-2"><node CREATED="1617773759137" ID="ID_f8eb38e68adf" MODIFIED="1617773759137" TEXT="I帧: 自包含的JPEG编码静止图像(周期性地出现)"></node><node CREATED="1617773759137" ID="ID_fe1dc690a621" MODIFIED="1617773759137" TEXT="P帧: 与上一帧逐块的差。"></node><node CREATED="1617773759137" ID="ID_c0d461251e44" MODIFIED="1617773759137" TEXT="B帧: 与上一帧和下一帧的差。"><node CREATED="1617773759137" ID="ID_9178c1b93500" MODIFIED="1617773759137" TEXT="B帧允许一个帧基于未来的帧。"></node><node CREATED="1617773759137" ID="ID_83510b7adeee" MODIFIED="1617773759137" TEXT="B帧编码，编码器需要在内存中同时保存三个解码的帧: &amp;lt;br&amp;gt;过去的一帧、当前的一帧和未来的一帧。"></node></node></node></node></node><node CREATED="1617773759137" ID="ID_19f5fde005fa" MODIFIED="1617773759137" TEXT="图像"><node CREATED="1617773759137" ID="ID_7097a5497fd8" MODIFIED="1617773759137" TEXT="位图图像"><linktarget COLOR="#b0b0b0" DESTINATION="ID_7097a5497fd8" ENDARROW="Default" ID="Arrow_ID_b7867fbe25e6" SOURCE="ID_696535e48334" STARTARROW="None"/></node><node CREATED="1617773759137" ID="ID_433f0f360560" MODIFIED="1617773759137" TEXT="对象图像"></node><node CREATED="1617773759137" ID="ID_c59bf69e39ef" MODIFIED="1617773759137" TEXT="将字符表示为图像"></node><node CREATED="1617773759137" ID="ID_73715f5f76a7" MODIFIED="1617773759137" TEXT="视频图像"></node></node></node><node CREATED="1617773759137" ID="ID_40147ed11fb1" MODIFIED="1617773759137" TEXT="音频编码"><linktarget COLOR="#b0b0b0" DESTINATION="ID_40147ed11fb1" ENDARROW="Default" ID="Arrow_ID_2e546f22beac" SOURCE="ID_9658edd8d89e" STARTARROW="None"/><node CREATED="1617773759137" ID="ID_3b65ac27f9b7" MODIFIED="1617773759137" TEXT="音频波可以通过模数转换器(Analog Digital Converter，ADC)转换成数字形式"></node><node CREATED="1617773759137" ID="ID_64ee49742ff8" MODIFIED="1617773759137" TEXT="频段屏蔽(“心理声学有损压缩”方法)&amp;lt;br&amp;gt;在一个频段里响亮的声音掩&amp;lt;br&amp;gt;盖住另一频段中较柔和声音的能力,&amp;lt;br&amp;gt;这种较柔和声音只有在没有响&amp;lt;br&amp;gt;亮声音时才可以听到"><node CREATED="1617773759137" ID="ID_f2666f2f8d47" MODIFIED="1617773759137" TEXT="暂时屏蔽&amp;lt;br&amp;gt;事实上即使响亮声音停止, &amp;lt;br&amp;gt;还是需要一段时间之后才能听到柔和声音&amp;lt;br&amp;gt;"></node></node></node></node><node CREATED="1617773759137" ID="ID_9fb5879221cf" MODIFIED="1617773759137" TEXT="多媒体进程调度"><node CREATED="1617773759137" ID="ID_a1343c586233" MODIFIED="1617773759137" TEXT="调度同质进程"></node><node CREATED="1617773759137" ID="ID_e6757ce5687f" MODIFIED="1617773759137" TEXT="一般实时调度"></node><node CREATED="1617773759137" ID="ID_14bda4598843" MODIFIED="1617773759137" TEXT="速率单调调度(Rate Monotonic Scheduling，RMS)"></node><node CREATED="1617773759137" ID="ID_d754d639c7c1" MODIFIED="1617773759137" TEXT="最早最终时限优先(Earliest Deadline First，EDF)算法"></node></node><node CREATED="1617773759137" ID="ID_1fc684198c53" MODIFIED="1617773759137" TEXT="多媒体文件系统范型"><node CREATED="1617773759137" ID="ID_806705c63d02" MODIFIED="1617773759137" TEXT="VCR控制功能"></node><node CREATED="1617773759137" ID="ID_dd546b000601" MODIFIED="1617773759137" TEXT="近似视频点播"></node><node CREATED="1617773759137" ID="ID_e21414e0a0a8" MODIFIED="1617773759137" TEXT="具有VCR功能的近似视频点播"><node CREATED="1617773759137" ID="ID_d2fb95e976e1" MODIFIED="1617773759137" TEXT="建立缓冲区"></node></node></node><node CREATED="1617773759137" ID="ID_397df1d4817d" MODIFIED="1617773759137" TEXT="文件存放"><node CREATED="1617773759137" ID="ID_0d17862535b8" MODIFIED="1617773759137" TEXT="在单个磁盘上存放文件"><node CREATED="1617773759137" ID="ID_95ae1038426e" MODIFIED="1617773759137" TEXT="使视频、音频和文本交叉存放，但是整个文件还是连续的.无法随机访问"></node></node><node CREATED="1617773759137" ID="ID_0aaef6dff412" MODIFIED="1617773759137" TEXT="两个替代的文件组织策略"><node CREATED="1617773759137" ID="ID_34a426015245" MODIFIED="1617773759137" TEXT="帧索引: 电影在播放时使用大量的RAM；磁盘浪费小。"></node><node CREATED="1617773759137" ID="ID_23af5d791f08" MODIFIED="1617773759137" TEXT="块索引(禁止分裂帧跨越磁盘块): RAM用量低；磁盘浪费较大。"></node><node CREATED="1617773759137" ID="ID_2dcc8c989bf8" MODIFIED="1617773759137" TEXT="块索引(允许分裂帧跨越磁盘块): RAM用量低；无磁盘浪费；需要额外寻道。"></node></node><node CREATED="1617773759137" ID="ID_acc0415be843" MODIFIED="1617773759137" TEXT="近似视频点播的文件存放"></node><node CREATED="1617773759137" ID="ID_9a540ac4eab2" MODIFIED="1617773759137" TEXT="在单个磁盘上存放多个文件"></node><node CREATED="1617773759137" ID="ID_98ae45208e7f" MODIFIED="1617773759137" TEXT="Zipf定律"><node CREATED="1617773759137" ID="ID_e608ec06e2c0" MODIFIED="1617773759137" TEXT="特大城市居住的人口，相对流行性的一个合理的近似遵循着一种令人惊奇的可预测模式"></node></node><node CREATED="1617773759137" ID="ID_c82d8b61c97d" MODIFIED="1617773759137" TEXT="管风琴算法(organ-pipe algorithm)"><node CREATED="1617773759137" ID="ID_16e8abafc011" MODIFIED="1617773759137" TEXT="该算法所做的是试图将磁头保持在磁盘的中央。"></node></node><node CREATED="1617773759137" ID="ID_90e977b058b9" MODIFIED="1617773759137" TEXT="(disk farm)"><node CREATED="1617773759137" ID="ID_b0a456b8cd0e" MODIFIED="1617773759137" TEXT="条带模式"><node CREATED="1617773759137" ID="ID_34f00b6e9685" MODIFIED="1617773759137" TEXT="按帧分条带"></node><node CREATED="1617773759137" ID="ID_2a573506ba96" MODIFIED="1617773759137" TEXT="按块分条带"></node></node><node CREATED="1617773759137" ID="ID_710d817d880a" MODIFIED="1617773759137" TEXT="单盘单电影"><node CREATED="1617773759137" ID="ID_f887bdda234e" MODIFIED="1617773759137" TEXT="负载可能没有很好地平衡(可以手工操作)"></node></node></node><node CREATED="1617773759137" ID="ID_ddb13df59352" MODIFIED="1617773759137" TEXT="高速缓存"><node CREATED="1617773759137" ID="ID_04b7447f8a97" MODIFIED="1617773759137" TEXT="块高速缓存"></node><node CREATED="1617773759137" ID="ID_6803673dec27" MODIFIED="1617773759137" TEXT="文件高速缓存"></node></node></node><node CREATED="1617773759138" ID="ID_6c8d53d0242a" MODIFIED="1617773759138" TEXT="多媒体磁盘调度"><node CREATED="1617773759138" ID="ID_69f13431a6f5" MODIFIED="1617773759138" TEXT="静态磁盘调度"><node CREATED="1617773759138" ID="ID_b61ce77f8dec" MODIFIED="1617773759138" TEXT="可预测的负载"></node></node><node CREATED="1617773759138" ID="ID_950c699fad98" MODIFIED="1617773759138" TEXT="动态磁盘调度"><node CREATED="1617773759138" ID="ID_d2026a4e43e6" MODIFIED="1617773759138" TEXT="scan-EDF算法(scan-EDF algorithm)"><node CREATED="1617773759138" ID="ID_8902b026d940" MODIFIED="1617773759138" TEXT="将最终时限比较接近的请求收集在一起分成若干批&amp;lt;br&amp;gt;并且以柱面的顺序对其进行处理。"></node></node></node></node></node><node CREATED="1617773759138" ID="ID_74e41069a809" POSITION="right" MODIFIED="1617773759138" TEXT="系统设计"><node CREATED="1617773759138" ID="ID_afdaf8d9c8cd" MODIFIED="1617773759138" TEXT="接口设计"><node CREATED="1617773759138" ID="ID_40822537fa00" MODIFIED="1617773759138" TEXT="简单"><arrowlink DESTINATION="ID_64bc57a9c9be" ENDARROW="Default" ID="Arrow_ID_906e9dbb5837" STARTARROW="None"/></node><node CREATED="1617773759138" ID="ID_bab6118f9154" MODIFIED="1617773759138" TEXT="完备"><arrowlink DESTINATION="ID_64bc57a9c9be" ENDARROW="Default" ID="Arrow_ID_400c82fbb4a6" STARTARROW="None"/></node><node CREATED="1617773759138" ID="ID_45b5c56059d4" MODIFIED="1617773759138" TEXT="效率"></node><node CREATED="1617773759138" ID="ID_64bc57a9c9be" MODIFIED="1617773759138" TEXT="正交性(orthogonality)&amp;lt;br&amp;gt;独立地组合单独的概念的能力"><linktarget COLOR="#b0b0b0" DESTINATION="ID_64bc57a9c9be" ENDARROW="Default" ID="Arrow_ID_906e9dbb5837" SOURCE="ID_40822537fa00" STARTARROW="None"/><linktarget COLOR="#b0b0b0" DESTINATION="ID_64bc57a9c9be" ENDARROW="Default" ID="Arrow_ID_400c82fbb4a6" SOURCE="ID_bab6118f9154" STARTARROW="None"/></node></node></node><node CREATED="1617773759138" ID="ID_49276808b0eb" POSITION="right" MODIFIED="1617773759138" TEXT="项目管理"><node CREATED="1617773759138" ID="ID_70d48ac71c72" MODIFIED="1617773759138" TEXT="人月神话&amp;lt;br&amp;gt;无论分配多少妇女从事这一工作，生一个孩子都需要9个月。"></node><node CREATED="1617773759138" ID="ID_190d73652145" MODIFIED="1617773759138" TEXT="团队结构&amp;lt;br&amp;gt;首席程序员团队(chief programmer team)"><node CREATED="1617773759138" ID="ID_f9a8a2585b47" MODIFIED="1617773759138" TEXT="坏消息二极管(bad-news diode)&amp;lt;br&amp;gt;坏消息不能很好地沿着树向上传播"></node></node><node CREATED="1617773759138" ID="ID_24885c35a90a" MODIFIED="1617773759138" TEXT="经验的作用"><node CREATED="1617773759138" ID="ID_bf82cd2b4703" MODIFIED="1617773759138" TEXT="第二系统效应(second system effect)"></node></node><node CREATED="1617773759138" ID="ID_56172d8e2b49" MODIFIED="1617773759138" TEXT="没有银弹(No Silver Bullet)"></node></node><node CREATED="1617773759138" ID="ID_c167cfa18e27" POSITION="right" MODIFIED="1617773759138" TEXT="实例研究"><node CREATED="1617773759138" ID="ID_f7d7941a7422" MODIFIED="1617773759138" TEXT="Linux&amp;lt;br&amp;gt;Linux是UNIX的一个衍生版本,&amp;lt;br&amp;gt;"><node CREATED="1617773759138" ID="ID_2e155ef1fcf3" MODIFIED="1617773759138" TEXT="Linux系统中的层次结构"></node><node CREATED="1617773759138" ID="ID_cc0b9f5dd579" MODIFIED="1617773759138" TEXT="shell"><node CREATED="1617773759138" ID="ID_8ff4b18cd5d2" MODIFIED="1617773759138" TEXT="通配符"></node></node><node CREATED="1617773759138" ID="ID_9eed250ad8e4" MODIFIED="1617773759138" TEXT="Linux应用程序"><node CREATED="1617773759138" ID="ID_e5607043fd3c" MODIFIED="1617773759138" TEXT="文件和目录操作命令"></node><node CREATED="1617773759138" ID="ID_a637997f47da" MODIFIED="1617773759138" TEXT="过滤器"></node><node CREATED="1617773759138" ID="ID_23f9f4ada576" MODIFIED="1617773759138" TEXT="程序设计工具，如编辑器和编译器"></node><node CREATED="1617773759138" ID="ID_847766decb7a" MODIFIED="1617773759138" TEXT="文档处理"></node><node CREATED="1617773759138" ID="ID_eac53d44fdf6" MODIFIED="1617773759138" TEXT="系统管理"></node><node CREATED="1617773759138" ID="ID_a9ea7d8cc84c" MODIFIED="1617773759138" TEXT="其他"></node></node><node CREATED="1617773759138" ID="ID_2523aadb9824" MODIFIED="1617773759138" TEXT="Linux内核结构"></node><node CREATED="1617773759138" ID="ID_6069c068b6ef" MODIFIED="1617773759138" TEXT="Linux中的进程"><node CREATED="1617773759138" ID="ID_85c0ce2ccc83" MODIFIED="1617773759138" TEXT="父进程和子进程可以共享已经打开的文件。"></node><node CREATED="1617773759138" ID="ID_e0ae29122f44" MODIFIED="1617773759138" TEXT="软件中断"><node CREATED="1617773759138" ID="ID_e48c84d4bcc2" MODIFIED="1617773759138" TEXT="一个进程可以给另一个进程发送信号&amp;lt;br&amp;gt;进程可以告诉操作系统当信号到来时它们希望发生什么事件"></node></node><node CREATED="1617773759138" ID="ID_9c29abd4bcdb" MODIFIED="1617773759138" TEXT="进程描述符"><node CREATED="1617773759138" ID="ID_47e4fddba57a" MODIFIED="1617773759138" TEXT="调度参数"></node><node CREATED="1617773759138" ID="ID_eb90d1fa3c6f" MODIFIED="1617773759138" TEXT="内存映射"></node><node CREATED="1617773759138" ID="ID_783353dc9b1a" MODIFIED="1617773759138" TEXT="信号"></node><node CREATED="1617773759138" ID="ID_acd45c78c44c" MODIFIED="1617773759138" TEXT="机器寄存器"></node><node CREATED="1617773759138" ID="ID_144fabbb973c" MODIFIED="1617773759138" TEXT="系统调用状态"></node><node CREATED="1617773759138" ID="ID_24eb4bdb9499" MODIFIED="1617773759138" TEXT="文件描述符表"></node><node CREATED="1617773759138" ID="ID_6180b99b9d7c" MODIFIED="1617773759138" TEXT="统计"></node><node CREATED="1617773759138" ID="ID_9df6e2c18a88" MODIFIED="1617773759138" TEXT="内核堆栈"></node><node CREATED="1617773759138" ID="ID_c4d3da47cf9c" MODIFIED="1617773759138" TEXT="当前进程状态(如果有的话)"></node></node><node CREATED="1617773759138" ID="ID_d2cce67feacf" MODIFIED="1617773759138" TEXT="写时复制"></node><node CREATED="1617773759138" ID="ID_60755eccdb7c" MODIFIED="1617773759138" TEXT="进程是资源容器，而线程是执行单元"></node><node CREATED="1617773759138" ID="ID_2e47e12d7925" MODIFIED="1617773759138" TEXT="线程"><node CREATED="1617773759138" ID="ID_533e9f61d590" MODIFIED="1617773759138" TEXT="调度队列"></node><node CREATED="1617773759138" ID="ID_d130393f2646" MODIFIED="1617773759138" TEXT="Linux系统的线程是内核线程"><node CREATED="1617773759138" ID="ID_5aedc0b5910b" MODIFIED="1617773759138" TEXT="实时先入先出"></node><node CREATED="1617773759138" ID="ID_01a460a3e95c" MODIFIED="1617773759138" TEXT="实时轮转"></node><node CREATED="1617773759138" ID="ID_6044889e3af1" MODIFIED="1617773759138" TEXT="分时"></node></node></node><node CREATED="1617773759138" ID="ID_4de9c588faa4" MODIFIED="1617773759138" TEXT="地址空间"><node CREATED="1617773759138" ID="ID_b3313bc1580c" MODIFIED="1617773759138" TEXT="代码"></node><node CREATED="1617773759138" ID="ID_2a7fbd67494f" MODIFIED="1617773759138" TEXT="数据"></node><node CREATED="1617773759138" ID="ID_ca654150d28b" MODIFIED="1617773759138" TEXT="堆栈段"></node></node></node><node CREATED="1617773759138" ID="ID_05c370b97a06" MODIFIED="1617773759138" TEXT="启动"><node CREATED="1617773759138" ID="ID_aa0644860bfa" MODIFIED="1617773759138" TEXT="启动磁盘的第一个扇区，即主引导记录(MBR)，被读入到一个固定的内存区域并且执行。&amp;lt;br&amp;gt;这个分区中含有一个很小的程序(只有512字节)，这个程序从启动设备中，通常是IDE或SCSI磁盘，&amp;lt;br&amp;gt;调入一个名为boot的独立程序。boot程序将自身复制到高地址的内存当中从而为操作系统释放低地址的内存。&amp;lt;br&amp;gt;复制完成后，boot程序读取启动设备的根目录。为了达到这个目的，boot程序必须能够理解文件系统和目录格式，&amp;lt;br&amp;gt;这个工作通常由引导程序，如GRUB(多系统启动管理器)，来完成。&amp;lt;br&amp;gt;然后，boot程序读入操作系统内核，并把控制交给内核。从这里开始，boot程序完成了它的任务，系统内核开始运行。&amp;lt;br&amp;gt;内核的开始代码是用汇编语言写成的，具有较高的机器依赖性。&amp;lt;br&amp;gt;主要的工作包括创建内核堆栈、识别CPU类型、计算可用内存、禁用中断、启用内存管理单元，&amp;lt;br&amp;gt;最后调用C语言写成的main函数开始执行操作系统的主要部分。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;C语言代码也有相当多的初始化工作要做，但是这些工作更逻辑化(而不是物理化)。C语言代码开始的时候会分配一个消息缓冲区来帮助调试启动出现的问题。随着初始化工作的进行，信息被写入消息缓冲区，这些信息与当前正在发生的事件相关，所以，如果出现启动失败的情况，这些信息可以通过一个特殊的诊断程序调出来。我们可以把它当作是操作系统的“飞行信息记录器”(即空难发生后，侦查员寻找的黑盒子)。&amp;lt;br&amp;gt;"></node></node><node CREATED="1617773759138" ID="ID_80f5713b40ad" MODIFIED="1617773759138" TEXT="内存管理"></node></node></node></node></map>